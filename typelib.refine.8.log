{trace,<0.90.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {33,1},
             '::',2,
             [{clause,
                  {33,1},
                  [{var,{33,6},'Expr'},{var,{33,12},'_Type'}],
                  [],
                  [{var,{33,22},'Expr'}]}]}]}}
{trace,<0.90.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,any,[]},{type,0,any,[]}],
                     {type,0,any,[]},
                     {clause,{33,1},
                             [{var,{33,6},'Expr'},{var,{33,12},'_Type'}],
                             [],
                             [{var,{33,22},'Expr'}]},
                     bind_vars]}}
{trace,<0.90.0>,call,
       {typechecker,refine,["{any(), any()}","{any(), any()}",seen,env]}}
{trace,<0.90.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.90.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.90.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]},{type,0,none,[]}],
        {venv,#{'Expr' => {type,0,any,[]},'_Type' => {type,0,any,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.90.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.90.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.91.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {36,1},
             ':::',2,
             [{clause,
                  {36,1},
                  [{var,{36,7},'Expr'},{var,{36,13},'_Type'}],
                  [],
                  [{var,{36,23},'Expr'}]}]}]}}
{trace,<0.91.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,any,[]},{type,0,any,[]}],
                     {type,0,any,[]},
                     {clause,{36,1},
                             [{var,{36,7},'Expr'},{var,{36,13},'_Type'}],
                             [],
                             [{var,{36,23},'Expr'}]},
                     bind_vars]}}
{trace,<0.91.0>,call,
       {typechecker,refine,["{any(), any()}","{any(), any()}",seen,env]}}
{trace,<0.91.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.91.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.91.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]},{type,0,none,[]}],
        {venv,#{'Expr' => {type,0,any,[]},'_Type' => {type,0,any,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.91.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.91.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.92.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {42,1},
    pp_type,1,
    [{clause,
      {42,1},
      [{match,
        {42,9},
        {var,{42,9},'Types'},
        {cons,{42,17},{var,{42,18},'_'},{var,{42,20},'_'}}}],
      [],
      [{call,
        {47,5},
        {remote,{47,10},{atom,{47,5},lists},{atom,{47,11},join}},
        [{string,{47,16},"; "},
         {call,
          {47,22},
          {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
          [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}]}]}]},
     {clause,
      {48,1},
      [{tuple,
        {48,9},
        [{atom,{48,10},type},
         {var,{48,16},'_'},
         {atom,{48,19},bounded_fun},
         {cons,
          {48,32},
          {var,{48,33},'FunType'},
          {cons,{48,42},{nil,{48,42}},{nil,{48,44}}}}]}],
      [],
      [{call,
        {51,5},
        {atom,{51,5},pp_type},
        [{call,
          {51,14},
          {atom,{51,14},':::'},
          [{var,{51,26},'FunType'},{string,{51,26},"function_type ( )"}]}]}]},
     {clause,
      {52,1},
      [{match,
        {52,9},
        {var,{52,9},'Type'},
        {tuple,
         {52,16},
         [{atom,{52,17},type},
          {var,{52,23},'_'},
          {atom,{52,26},bounded_fun},
          {var,{52,39},'_'}]}}],
      [],
      [{match,
        {55,5},
        {var,{55,5},'Form'},
        {tuple,
         {55,12},
         [{atom,{55,13},attribute},
          {call,
           {55,24},
           {remote,{55,32},{atom,{55,24},erl_anno},{atom,{55,33},new}},
           [{integer,{55,37},0}]},
          {atom,{55,41},spec},
          {tuple,
           {55,47},
           [{tuple,{55,48},[{atom,{55,49},foo},{integer,{55,54},0}]},
            {cons,{55,58},{var,{55,59},'Type'},{nil,{55,63}}}]}]}},
       {match,
        {56,5},
        {var,{56,5},'TypeDef'},
        {call,
         {56,15},
         {remote,{56,21},{atom,{56,15},erl_pp},{atom,{56,22},form}},
         [{var,{56,27},'Form'}]}},
       {match,
        {57,5},
        {tuple,
         {57,5},
         [{atom,{57,6},match},{cons,{57,13},{var,{57,14},'S'},{nil,{57,15}}}]},
        {call,
         {57,20},
         {remote,{57,22},{atom,{57,20},re},{atom,{57,23},run}},
         [{var,{57,27},'TypeDef'},
          {bin,
           {57,36},
           [{bin_element,
             {57,38},
             {string,{57,38},"-spec foo\\s*(.*)\\.\\n*$"},
             default,default}]},
          {cons,
           {58,27},
           {tuple,
            {58,28},
            [{atom,{58,29},capture},
             {atom,{58,38},all_but_first},
             {atom,{58,53},list}]},
           {cons,{58,60},{atom,{58,60},dotall},{nil,{58,66}}}}]}},
       {op,
        {59,12},
        '++',
        {string,{59,5},"fun("},
        {op,{59,17},'++',{var,{59,15},'S'},{string,{59,20},")"}}}]},
     {clause,
      {60,1},
      [{tuple,
        {60,9},
        [{atom,{60,10},var},{var,{60,15},'_'},{var,{60,18},'TyVar'}]}],
      [],
      [{'if',
        {62,5},
        [{clause,
          {63,9},
          [],
          [[{call,{63,9},{atom,{63,9},is_atom},[{var,{63,17},'TyVar'}]}]],
          [{call,
            {63,27},
            {atom,{63,27},atom_to_list},
            [{var,{63,40},'TyVar'}]}]},
         {clause,
          {64,9},
          [],
          [[{call,{64,9},{atom,{64,9},is_list},[{var,{64,17},'TyVar'}]}]],
          [{var,{64,27},'TyVar'}]}]}]},
     {clause,
      {66,1},
      [{var,{66,9},'Type'}],
      [],
      [{match,
        {69,5},
        {var,{69,5},'Form'},
        {tuple,
         {69,12},
         [{atom,{69,13},attribute},
          {call,
           {69,24},
           {remote,{69,32},{atom,{69,24},erl_anno},{atom,{69,33},new}},
           [{integer,{69,37},0}]},
          {atom,{69,41},type},
          {tuple,
           {69,47},
           [{atom,{69,48},t},{var,{69,51},'Type'},{nil,{69,57}}]}]}},
       {match,
        {70,5},
        {var,{70,5},'TypeDef'},
        {call,
         {70,15},
         {remote,{70,21},{atom,{70,15},erl_pp},{atom,{70,22},form}},
         [{var,{70,27},'Form'}]}},
       {match,
        {71,5},
        {tuple,
         {71,5},
         [{atom,{71,6},match},{cons,{71,13},{var,{71,14},'S'},{nil,{71,15}}}]},
        {call,
         {71,20},
         {remote,{71,22},{atom,{71,20},re},{atom,{71,23},run}},
         [{var,{71,27},'TypeDef'},
          {bin,
           {71,36},
           [{bin_element,
             {71,38},
             {string,{71,38},"::\\s*(.*)\\.\\n*"},
             default,default}]},
          {cons,
           {72,27},
           {tuple,
            {72,28},
            [{atom,{72,29},capture},
             {atom,{72,38},all_but_first},
             {atom,{72,53},list}]},
           {cons,{72,60},{atom,{72,60},dotall},{nil,{72,66}}}}]}},
       {'case',
        {73,5},
        {var,{73,10},'S'},
        [{clause,
          {73,15},
          [{op,{73,25},'++',{string,{73,15},"INVALID"},{var,{73,28},'_'}}],
          [],
          [{call,
            {73,33},
            {atom,{73,33},error},
            [{tuple,{73,39},[{atom,{73,40},badarg},{var,{73,48},'Type'}]}]}]},
         {clause,{74,15},[{var,{74,15},'_'}],[],[{atom,{74,20},ok}]}]},
       {var,{75,5},'S'}]}]}]}}
{trace,<0.92.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,extended_type,[]}],
         {type,0,string,[]},
         {clause,
             {42,1},
             [{match,
                  {42,9},
                  {var,{42,9},'Types'},
                  {cons,{42,17},{var,{42,18},'_'},{var,{42,20},'_'}}}],
             [],
             [{call,
                  {47,5},
                  {remote,{47,10},{atom,{47,5},lists},{atom,{47,11},join}},
                  [{string,{47,16},"; "},
                   {call,
                       {47,22},
                       {remote,
                           {47,27},
                           {atom,{47,22},lists},
                           {atom,{47,28},map}},
                       [{'fun',{47,32},{function,pp_type,1}},
                        {var,{47,47},'Types'}]}]}]},
         bind_vars]}}
{trace,<0.92.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Types' =>
                   {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
         {type,0,list,[{type,0,char,[]}]},
         {call,
             {47,5},
             {remote,{47,10},{atom,{47,5},lists},{atom,{47,11},join}},
             [{string,{47,16},"; "},
              {call,
                  {47,22},
                  {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
                  [{'fun',{47,32},{function,pp_type,1}},
                   {var,{47,47},'Types'}]}]},
         {fun_ty,
             [{var,0,"T_typechecker_3529_1"},
              {type,0,list,[{var,0,"T_typechecker_3529_1"}]}],
             {type,0,list,[{var,0,"T_typechecker_3529_1"}]},
             {constraints,#{},#{},#{"T_typechecker_3529_1" => true}}},
         [{string,{47,16},"; "},
          {call,
              {47,22},
              {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
              [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}]}],
         {{47,5},
          {remote,{47,10},{atom,{47,5},lists},{atom,{47,11},join}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Sep'},{var,0,'List1'}]},
                     {var,0,'List2'}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},[{var,0,'Sep'},{var,0,'T'}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'List1'},{type,0,list,[{var,0,'T'}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'List2'},{type,0,list,[{var,0,'T'}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'T'},{type,0,term,[]}]]}]]}]}]}}
{trace,<0.92.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Types' =>
                   {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
         {type,0,list,[{var,0,"T_typechecker_3529_1"}]},
         {call,
             {47,22},
             {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
             [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_2"}]},
                        {var,0,"B_typechecker_3529_3"}]},
                   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_2"}]}],
                  {type,0,nonempty_list,[{var,0,"B_typechecker_3529_3"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_2" => true,
                        "B_typechecker_3529_3" => true}}},
              {fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_4"}]},
                        {var,0,"B_typechecker_3529_5"}]},
                   {type,0,list,[{var,0,"A_typechecker_3529_4"}]}],
                  {type,0,list,[{var,0,"B_typechecker_3529_5"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_4" => true,
                        "B_typechecker_3529_5" => true}}}],
             {constraints,#{},#{},#{}}},
         [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}],
         {{47,22},
          {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.92.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Types' =>
                   {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
         {type,0,list,[{var,0,"T_typechecker_3529_1"}]},
         {call,
             {47,22},
             {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
             [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_2"}]},
                    {var,0,"B_typechecker_3529_3"}]},
               {type,0,nonempty_list,[{var,0,"A_typechecker_3529_2"}]}],
              {type,0,nonempty_list,[{var,0,"B_typechecker_3529_3"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_2" => true,
                    "B_typechecker_3529_3" => true}}},
          {fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_4"}]},
                    {var,0,"B_typechecker_3529_5"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_4"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_5"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_4" => true,
                    "B_typechecker_3529_5" => true}}}],
         [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}],
         {{47,22},
          {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.92.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Types' =>
                   {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
         {type,0,list,[{var,0,"T_typechecker_3529_1"}]},
         {call,
             {47,22},
             {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
             [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_2"}]},
                   {var,0,"B_typechecker_3529_3"}]},
              {type,0,nonempty_list,[{var,0,"A_typechecker_3529_2"}]}],
             {type,0,nonempty_list,[{var,0,"B_typechecker_3529_3"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_2" => true,
                   "B_typechecker_3529_3" => true}}},
         [{'fun',{47,32},{function,pp_type,1}},{var,{47,47},'Types'}],
         {{47,22},
          {remote,{47,27},{atom,{47,22},lists},{atom,{47,28},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.92.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,#{'Types' => {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{type,0,list,[{type,0,char,[]}]}]},
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{var,0,"T_typechecker_3529_1"}]},
   #{"A_typechecker_3529_2" => true,"B_typechecker_3529_3" => true}}}}
{trace,<0.92.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.92.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,#{'Types' => {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{type,0,list,[{type,0,char,[]}]}]},
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{var,0,"T_typechecker_3529_1"}]},
   #{"A_typechecker_3529_2" => true,"B_typechecker_3529_3" => true}}}}
{trace,<0.92.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.92.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,#{'Types' => {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{type,0,list,[{type,0,char,[]}]}]},
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{var,0,"T_typechecker_3529_1"}]},
   #{"A_typechecker_3529_2" => true,"B_typechecker_3529_3" => true}}}}
{trace,<0.92.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.92.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,#{'Types' => {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{type,0,list,[{type,0,char,[]}]}],
     "T_typechecker_3529_1" =>
      [{type,0,nonempty_list,
        [{type,0,union,[{integer,0,32},{integer,0,59}]}]}]},
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{var,0,"T_typechecker_3529_1"}],
     "T_typechecker_3529_1" =>
      [{type,0,range,[{integer,0,0},{integer,0,1114111}]}]},
   #{"A_typechecker_3529_2" => true,"B_typechecker_3529_3" => true,
     "T_typechecker_3529_1" => true}}}}
{trace,<0.92.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{extended_type()}",
                     "{[[extended_type()] |\n            {type,\n             erl_anno:anno(),\n             bounded_fun,\n             [function_type() | [constraint()]]} |\n            type(),\n            ...]}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["extended_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_type_variable()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["gr_integer()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_character()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_atom()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{user_type,0,type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type,\n           erl_anno:anno(),\n           bounded_fun,\n           [function_type() | [constraint()]]}",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["[extended_type()]",
                     "[[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           type(),\n           ...]",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["extended_type()",
                     "[extended_type()] |\n          {type,\n           erl_anno:anno(),\n           bounded_fun,\n           [function_type() | [constraint()]]} |\n          type()",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,return_from,
 {typechecker,check_clause,5},
 {[{user_type,0,extended_type,[]}],
  {venv,#{'Types' => {type,0,nonempty_list,[{user_type,0,extended_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{type,0,list,[{type,0,char,[]}]}],
     "T_typechecker_3529_1" =>
      [{type,0,nonempty_list,
        [{type,0,union,[{integer,0,32},{integer,0,59}]}]}]},
   #{"A_typechecker_3529_2" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_3" => [{var,0,"T_typechecker_3529_1"}],
     "T_typechecker_3529_1" =>
      [{type,0,range,[{integer,0,0},{integer,0,1114111}]}]},
   #{"A_typechecker_3529_2" => true,"B_typechecker_3529_3" => true,
     "T_typechecker_3529_1" => true}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,extended_type,[]}],
         {type,0,string,[]},
         {clause,
             {48,1},
             [{tuple,
                  {48,9},
                  [{atom,{48,10},type},
                   {var,{48,16},'_'},
                   {atom,{48,19},bounded_fun},
                   {cons,
                       {48,32},
                       {var,{48,33},'FunType'},
                       {cons,{48,42},{nil,{48,42}},{nil,{48,44}}}}]}],
             [],
             [{call,
                  {51,5},
                  {atom,{51,5},pp_type},
                  [{call,
                       {51,14},
                       {atom,{51,14},':::'},
                       [{var,{51,26},'FunType'},
                        {string,{51,26},"function_type ( )"}]}]}]},
         bind_vars]}}
{trace,<0.92.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'FunType' =>
       {type,0,union,
        [{type,0,list,[{type,0,none,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,'fun'},
           {type,0,list,
            [{type,0,union,
              [{type,0,any,[]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,product},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]}]}]}]}]}}},
   {type,0,list,[{type,0,char,[]}]},
   {call,
    {51,5},
    {atom,{51,5},pp_type},
    [{call,
      {51,14},
      {atom,{51,14},':::'},
      [{var,{51,26},'FunType'},{string,{51,26},"function_type ( )"}]}]},
   {fun_ty,
    [{user_type,0,extended_type,[]}],
    {type,0,string,[]},
    {constraints,#{},#{},#{}}},
   [{call,
     {51,14},
     {atom,{51,14},':::'},
     [{var,{51,26},'FunType'},{string,{51,26},"function_type ( )"}]}],
   {{51,5},
    {atom,{51,5},pp_type},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,extended_type,[]}]},
         {type,0,string,[]}]},
       []]}]}]}}
{trace,<0.92.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'FunType' =>
      {type,0,union,
       [{type,0,list,[{type,0,none,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,'fun'},
          {type,0,list,
           [{type,0,union,
             [{type,0,any,[]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,product},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.92.0>,call,
       {typechecker,refine,["{extended_type()}","{none()}",seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,["extended_type()","none()",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,return_from,
 {typechecker,check_clause,5},
 {[{user_type,0,extended_type,[]}],
  {venv,
   #{'FunType' =>
      {type,0,union,
       [{type,0,list,[{type,0,none,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,'fun'},
          {type,0,list,
           [{type,0,union,
             [{type,0,any,[]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,product},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,extended_type,[]}],
         {type,0,string,[]},
         {clause,
             {52,1},
             [{match,
                  {52,9},
                  {var,{52,9},'Type'},
                  {tuple,
                      {52,16},
                      [{atom,{52,17},type},
                       {var,{52,23},'_'},
                       {atom,{52,26},bounded_fun},
                       {var,{52,39},'_'}]}}],
             [],
             [{match,
                  {55,5},
                  {var,{55,5},'Form'},
                  {tuple,
                      {55,12},
                      [{atom,{55,13},attribute},
                       {call,
                           {55,24},
                           {remote,
                               {55,32},
                               {atom,{55,24},erl_anno},
                               {atom,{55,33},new}},
                           [{integer,{55,37},0}]},
                       {atom,{55,41},spec},
                       {tuple,
                           {55,47},
                           [{tuple,
                                {55,48},
                                [{atom,{55,49},foo},{integer,{55,54},0}]},
                            {cons,
                                {55,58},
                                {var,{55,59},'Type'},
                                {nil,{55,63}}}]}]}},
              {match,
                  {56,5},
                  {var,{56,5},'TypeDef'},
                  {call,
                      {56,15},
                      {remote,
                          {56,21},
                          {atom,{56,15},erl_pp},
                          {atom,{56,22},form}},
                      [{var,{56,27},'Form'}]}},
              {match,
                  {57,5},
                  {tuple,
                      {57,5},
                      [{atom,{57,6},match},
                       {cons,{57,13},{var,{57,14},'S'},{nil,{57,15}}}]},
                  {call,
                      {57,20},
                      {remote,{57,22},{atom,{57,20},re},{atom,{57,23},run}},
                      [{var,{57,27},'TypeDef'},
                       {bin,
                           {57,36},
                           [{bin_element,
                                {57,38},
                                {string,{57,38},"-spec foo\\s*(.*)\\.\\n*$"},
                                default,default}]},
                       {cons,
                           {58,27},
                           {tuple,
                               {58,28},
                               [{atom,{58,29},capture},
                                {atom,{58,38},all_but_first},
                                {atom,{58,53},list}]},
                           {cons,
                               {58,60},
                               {atom,{58,60},dotall},
                               {nil,{58,66}}}}]}},
              {op,{59,12},
                  '++',
                  {string,{59,5},"fun("},
                  {op,{59,17},'++',{var,{59,15},'S'},{string,{59,20},")"}}}]},
         bind_vars]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{extended_type()}",
                     "{{type,\n            anno(),\n            bounded_fun,\n            [{type, anno(), 'fun', [any()]} |\n             {type, anno(), 'fun', [none()]} |\n             {type,\n              anno(),\n              'fun',\n              [any() |\n               {type,\n                anno(),\n                product,\n                [af_annotated_type() |\n                 af_atom() |\n                 af_bitstring_type() |\n                 af_constrained_function_type() |\n                 af_empty_list_type() |\n                 af_fun_type() |\n                 af_integer_range_type() |\n                 af_map_type() |\n                 af_predefined_type() |\n                 af_record_type() |\n                 af_remote_type() |\n                 af_singleton_integer_type() |\n                 af_tuple_type() |\n                 af_type_union() |\n                 af_type_variable() |\n                 af_user_defined_type()]} |\n               {type, anno(), product, [abstract_type()]}]} |\n             {type, anno(), 'fun', []}]}}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["extended_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["user_type","type",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_type_variable()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["union","bounded_fun",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["tuple","bounded_fun",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["tuple","bounded_fun",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["gr_integer()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_character()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["record","bounded_fun",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{type,\n           anno(),\n           bounded_fun,\n           [{type, anno(), 'fun', [any()]} |\n            {type, anno(), 'fun', [none()]} |\n            {type,\n             anno(),\n             'fun',\n             [any() |\n              {type,\n               anno(),\n               product,\n               [af_annotated_type() |\n                af_atom() |\n                af_bitstring_type() |\n                af_constrained_function_type() |\n                af_empty_list_type() |\n                af_fun_type() |\n                af_integer_range_type() |\n                af_map_type() |\n                af_predefined_type() |\n                af_record_type() |\n                af_remote_type() |\n                af_singleton_integer_type() |\n                af_tuple_type() |\n                af_type_union() |\n                af_type_variable() |\n                af_user_defined_type()]} |\n              {type, anno(), product, [abstract_type()]}]} |\n            {type, anno(), 'fun', []}]}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,call,
       {typechecker,refine,["type_name()","bounded_fun",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,return_from,
 {typechecker,check_clause,5},
 {[{user_type,0,extended_type,[]}],
  {venv,
   #{'Form' =>
      {type,0,tuple,
       [{type,0,any,[]},
        {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
        {type,0,any,[]},
        {type,0,tuple,
         [{type,0,any,[]},
          {type,0,nonempty_list,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,bounded_fun},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,any,[]},
                        {type,0,tuple,
                         [{atom,0,type},
                          {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           anno,[]},
                          {atom,0,product},
                          {type,0,list,
                           [{type,0,union,
                             [{user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_annotated_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_atom,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_bitstring_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_constrained_function_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_empty_list_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_fun_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_integer_range_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_map_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_predefined_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_record_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_remote_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_singleton_integer_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_tuple_type,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_type_union,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_type_variable,[]},
                              {user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               af_user_defined_type,[]}]}]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]}]}]}]}]}]}]},
     'S' => {type,0,list,[{type,0,none,[]}]},
     'Type' =>
      {type,0,tuple,
       [{atom,0,type},
        {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
        {atom,0,bounded_fun},
        {type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,any,[]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,product},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]}]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]}]}]}]},
     'TypeDef' =>
      {type,0,list,
       [{type,0,union,
         [{type,0,char,[]},
          {user_type,[{file,"io_lib.erl"},{location,0}],chars,[]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,extended_type,[]}],
         {type,0,string,[]},
         {clause,
             {60,1},
             [{tuple,
                  {60,9},
                  [{atom,{60,10},var},
                   {var,{60,15},'_'},
                   {var,{60,18},'TyVar'}]}],
             [],
             [{'if',
                  {62,5},
                  [{clause,
                       {63,9},
                       [],
                       [[{call,
                             {63,9},
                             {atom,{63,9},is_atom},
                             [{var,{63,17},'TyVar'}]}]],
                       [{call,
                            {63,27},
                            {atom,{63,27},atom_to_list},
                            [{var,{63,40},'TyVar'}]}]},
                   {clause,
                       {64,9},
                       [],
                       [[{call,
                             {64,9},
                             {atom,{64,9},is_list},
                             [{var,{64,17},'TyVar'}]}]],
                       [{var,{64,27},'TyVar'}]}]}]},
         bind_vars]}}
{trace,<0.92.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'TyVar' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
         [],
         {type,0,list,[{type,0,char,[]}]},
         {clause,
             {63,9},
             [],
             [[{call,{63,9},{atom,{63,9},is_atom},[{var,{63,17},'TyVar'}]}]],
             [{call,
                  {63,27},
                  {atom,{63,27},atom_to_list},
                  [{var,{63,40},'TyVar'}]}]},
         capture_vars]}}
{trace,<0.92.0>,call,
       {typechecker,type_check_call,
                    [{venv,#{'TyVar' => {type,0,atom,[]}}},
                     {type,0,list,[{type,0,char,[]}]},
                     {call,{63,27},
                           {atom,{63,27},atom_to_list},
                           [{var,{63,40},'TyVar'}]},
                     {fun_ty,[{type,0,atom,[]}],
                             {type,0,string,[]},
                             {constraints,#{},#{},#{}}},
                     [{var,{63,40},'TyVar'}],
                     {{63,27},
                      {atom,{63,27},atom_to_list},
                      [{type,0,bounded_fun,
                             [{type,0,'fun',
                                    [{type,0,product,[{var,0,'Atom'}]},
                                     {type,0,string,[]}]},
                              [{type,0,constraint,
                                     [{atom,0,is_subtype},
                                      [{var,0,'Atom'},
                                       {type,0,atom,[]}]]}]]}]}]}}
{trace,<0.92.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'TyVar' => {type,0,atom,[]}}},{constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.92.0>,return_from,
       {typechecker,check_clause,5},
       {[],{venv,#{'TyVar' => {type,0,atom,[]}}},{constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,call,
       {typechecker,refine,["atom() | [char()]","atom()",seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["[char()]","atom()",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,{typechecker,refine,["atom()","atom()",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {type,0,list,[{type,0,char,[]}]}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,call,
       {typechecker,check_clause,
                    [{venv,#{'TyVar' => {type,0,list,[{type,0,char,[]}]}}},
                     [],
                     {type,0,list,[{type,0,char,[]}]},
                     {clause,{64,9},
                             [],
                             [[{call,{64,9},
                                     {atom,{64,9},is_list},
                                     [{var,{64,17},'TyVar'}]}]],
                             [{var,{64,27},'TyVar'}]},
                     capture_vars]}}
{trace,<0.92.0>,return_from,
       {typechecker,check_clause,5},
       {[],
        {venv,#{'TyVar' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,call,{typechecker,refine,["[char()]","[any()]",seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{extended_type()}","{{var, anno(), gr_type_var()}}",
                     seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["extended_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["type()","{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["integer","var",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_character()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,call,{typechecker,refine,["char","var",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,call,{typechecker,refine,["remote_type","var",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_atom()","{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["atom","var",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.92.0>,call,{typechecker,refine,["ann_type","var",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{type,\n           erl_anno:anno(),\n           bounded_fun,\n           [function_type() | [constraint()]]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["[extended_type()]","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.92.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.92.0>,return_from,
    {typechecker,refine,4},
    {type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
             [{atom,0,type},
              {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
              {atom,0,bounded_fun},
              {type,0,list,
                  [{type,0,union,
                       [{user_type,0,function_type,[]},
                        {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_bitstring_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_constrained_function_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_empty_list_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_fun_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_integer_range_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_map_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_predefined_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_record_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_remote_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_singleton_integer_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_tuple_type,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_type_union,[]},
         {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_user_defined_type,[]}]}}
{trace,<0.92.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.92.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{type,0,list,[{user_type,0,extended_type,[]}]},
              {type,0,tuple,
                  [{atom,0,type},
                   {remote_type,0,
                       [{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
                   {atom,0,bounded_fun},
                   {type,0,list,
                       [{type,0,union,
                            [{user_type,0,function_type,[]},
                             {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]}]}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{type,0,list,[{user_type,0,extended_type,[]}]},
           {type,0,tuple,
               [{atom,0,type},
                {remote_type,0,
                    [{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
                {atom,0,bounded_fun},
                {type,0,list,
                    [{type,0,union,
                         [{user_type,0,function_type,[]},
                          {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_singleton_integer_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]}]}],
     {venv,#{'TyVar' => {type,0,none,[]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{type,0,list,[{user_type,0,extended_type,[]}]},
               {type,0,tuple,
                   [{atom,0,type},
                    {remote_type,0,
                        [{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
                    {atom,0,bounded_fun},
                    {type,0,list,
                        [{type,0,union,
                             [{user_type,0,function_type,[]},
                              {type,0,list,
                                  [{user_type,0,constraint,[]}]}]}]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]}],
         {type,0,string,[]},
         {clause,
             {66,1},
             [{var,{66,9},'Type'}],
             [],
             [{match,
                  {69,5},
                  {var,{69,5},'Form'},
                  {tuple,
                      {69,12},
                      [{atom,{69,13},attribute},
                       {call,
                           {69,24},
                           {remote,
                               {69,32},
                               {atom,{69,24},erl_anno},
                               {atom,{69,33},new}},
                           [{integer,{69,37},0}]},
                       {atom,{69,41},type},
                       {tuple,
                           {69,47},
                           [{atom,{69,48},t},
                            {var,{69,51},'Type'},
                            {nil,{69,57}}]}]}},
              {match,
                  {70,5},
                  {var,{70,5},'TypeDef'},
                  {call,
                      {70,15},
                      {remote,
                          {70,21},
                          {atom,{70,15},erl_pp},
                          {atom,{70,22},form}},
                      [{var,{70,27},'Form'}]}},
              {match,
                  {71,5},
                  {tuple,
                      {71,5},
                      [{atom,{71,6},match},
                       {cons,{71,13},{var,{71,14},'S'},{nil,{71,15}}}]},
                  {call,
                      {71,20},
                      {remote,{71,22},{atom,{71,20},re},{atom,{71,23},run}},
                      [{var,{71,27},'TypeDef'},
                       {bin,
                           {71,36},
                           [{bin_element,
                                {71,38},
                                {string,{71,38},"::\\s*(.*)\\.\\n*"},
                                default,default}]},
                       {cons,
                           {72,27},
                           {tuple,
                               {72,28},
                               [{atom,{72,29},capture},
                                {atom,{72,38},all_but_first},
                                {atom,{72,53},list}]},
                           {cons,
                               {72,60},
                               {atom,{72,60},dotall},
                               {nil,{72,66}}}}]}},
              {'case',
                  {73,5},
                  {var,{73,10},'S'},
                  [{clause,
                       {73,15},
                       [{op,{73,25},
                            '++',
                            {string,{73,15},"INVALID"},
                            {var,{73,28},'_'}}],
                       [],
                       [{call,
                            {73,33},
                            {atom,{73,33},error},
                            [{tuple,
                                 {73,39},
                                 [{atom,{73,40},badarg},
                                  {var,{73,48},'Type'}]}]}]},
                   {clause,
                       {74,15},
                       [{var,{74,15},'_'}],
                       [],
                       [{atom,{74,20},ok}]}]},
              {var,{75,5},'S'}]},
         bind_vars]}}
{trace,<0.92.0>,call,
       {typechecker,refine,
                    ["{[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_user_defined_type()}",
                     "{[extended_type()] |\n           {type,\n            erl_anno:anno(),\n            bounded_fun,\n            [function_type() | [constraint()]]} |\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_user_defined_type()}",
                     seen,env]}}
{trace,<0.92.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.92.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.92.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,none,[]}],
  {venv,
   #{'Form' =>
      {type,0,tuple,
       [{type,0,any,[]},
        {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
        {type,0,any,[]},
        {type,0,tuple,
         [{type,0,any,[]},
          {type,0,union,
           [{type,0,list,[{user_type,0,extended_type,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
              {atom,0,bounded_fun},
              {type,0,list,
               [{type,0,union,
                 [{user_type,0,function_type,[]},
                  {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_annotated_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_atom,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_bitstring_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_constrained_function_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_empty_list_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_fun_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_integer_range_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_map_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_predefined_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_record_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_remote_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_singleton_integer_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_tuple_type,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_type_union,[]},
            {user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_user_defined_type,[]}]},
          {type,0,any,[]}]}]},
     'S' => {type,0,list,[{type,0,none,[]}]},
     'Type' =>
      {type,0,union,
       [{type,0,list,[{user_type,0,extended_type,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
          {atom,0,bounded_fun},
          {type,0,list,
           [{type,0,union,
             [{user_type,0,function_type,[]},
              {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_annotated_type,[]},
        {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_bitstring_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_constrained_function_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_empty_list_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_fun_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_integer_range_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_map_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_predefined_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_record_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_remote_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_singleton_integer_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_tuple_type,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_type_union,[]},
        {user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_user_defined_type,[]}]},
     'TypeDef' =>
      {type,0,list,
       [{type,0,union,
         [{type,0,char,[]},
          {user_type,[{file,"io_lib.erl"},{location,0}],chars,[]}]}]}}},
  {constraints,
   #{"Reason_typechecker_3529_6_typechecker_1257_7" => [{atom,0,badarg}],
     "Reason_typechecker_3529_6_typechecker_1257_8" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"Reason_typechecker_3529_6" =>
      [{type,0,tuple,
        [{var,0,"Reason_typechecker_3529_6_typechecker_1257_7"},
         {var,0,"Reason_typechecker_3529_6_typechecker_1257_8"}]}]},
   #{"Reason_typechecker_3529_6" => true,
     "Reason_typechecker_3529_6_typechecker_1257_7" => true,
     "Reason_typechecker_3529_6_typechecker_1257_8" => true}}}}
{trace,<0.92.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.92.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.93.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {82,1},
    debug_type,3,
    [{clause,
      {82,1},
      [{var,{82,12},'M'},{var,{82,15},'N'},{var,{82,18},'P'}],
      [],
      [{'case',
        {83,5},
        {call,
         {83,10},
         {remote,
          {83,24},
          {atom,{83,10},gradualizer_db},
          {atom,{83,25},get_type}},
         [{var,{83,34},'M'},{var,{83,37},'N'},{var,{83,40},'P'}]},
        [{clause,
          {84,9},
          [{tuple,{84,9},[{atom,{84,10},ok},{var,{84,14},'T'}]}],
          [],
          [{match,
            {85,13},
            {var,{85,13},'Params'},
            {call,
             {85,22},
             {remote,{85,27},{atom,{85,22},lists},{atom,{85,28},join}},
             [{char,{85,33},44},
              {call,
               {85,37},
               {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
               [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}]}]}},
           {call,
            {86,13},
            {remote,{86,15},{atom,{86,13},io},{atom,{86,16},format}},
            [{string,{86,23},"~w:~w(~s) :: ~s.~n"},
             {cons,
              {87,23},
              {var,{87,24},'M'},
              {cons,
               {87,27},
               {var,{87,27},'N'},
               {cons,
                {87,30},
                {var,{87,30},'Params'},
                {cons,
                 {87,38},
                 {call,{87,38},{atom,{87,38},pp_type},[{var,{87,46},'T'}]},
                 {nil,{87,48}}}}}}]}]},
         {clause,
          {88,9},
          [{atom,{88,9},not_found}],
          [],
          [{atom,{89,13},not_found}]}]}]}]}]}}
{trace,<0.93.0>,call,
 {typechecker,check_clause,
  [{venv,#{}},
   [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
   {type,0,any,[]},
   {clause,
    {82,1},
    [{var,{82,12},'M'},{var,{82,15},'N'},{var,{82,18},'P'}],
    [],
    [{'case',
      {83,5},
      {call,
       {83,10},
       {remote,{83,24},{atom,{83,10},gradualizer_db},{atom,{83,25},get_type}},
       [{var,{83,34},'M'},{var,{83,37},'N'},{var,{83,40},'P'}]},
      [{clause,
        {84,9},
        [{tuple,{84,9},[{atom,{84,10},ok},{var,{84,14},'T'}]}],
        [],
        [{match,
          {85,13},
          {var,{85,13},'Params'},
          {call,
           {85,22},
           {remote,{85,27},{atom,{85,22},lists},{atom,{85,28},join}},
           [{char,{85,33},44},
            {call,
             {85,37},
             {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
             [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}]}]}},
         {call,
          {86,13},
          {remote,{86,15},{atom,{86,13},io},{atom,{86,16},format}},
          [{string,{86,23},"~w:~w(~s) :: ~s.~n"},
           {cons,
            {87,23},
            {var,{87,24},'M'},
            {cons,
             {87,27},
             {var,{87,27},'N'},
             {cons,
              {87,30},
              {var,{87,30},'Params'},
              {cons,
               {87,38},
               {call,{87,38},{atom,{87,38},pp_type},[{var,{87,46},'T'}]},
               {nil,{87,48}}}}}}]}]},
       {clause,
        {88,9},
        [{atom,{88,9},not_found}],
        [],
        [{atom,{89,13},not_found}]}]}]},
   bind_vars]}}
{trace,<0.93.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'M' => {type,0,any,[]},
               'N' => {type,0,any,[]},
               'P' => {type,0,any,[]},
               'T' => {type,0,any,[]}}},
         {type,0,list,[{var,0,"T_typechecker_3529_9"}]},
         {call,
             {85,37},
             {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
             [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_10"}]},
                        {var,0,"B_typechecker_3529_11"}]},
                   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_10"}]}],
                  {type,0,nonempty_list,[{var,0,"B_typechecker_3529_11"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_10" => true,
                        "B_typechecker_3529_11" => true}}},
              {fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_12"}]},
                        {var,0,"B_typechecker_3529_13"}]},
                   {type,0,list,[{var,0,"A_typechecker_3529_12"}]}],
                  {type,0,list,[{var,0,"B_typechecker_3529_13"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_12" => true,
                        "B_typechecker_3529_13" => true}}}],
             {constraints,#{},#{},#{}}},
         [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}],
         {{85,37},
          {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.93.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'M' => {type,0,any,[]},
               'N' => {type,0,any,[]},
               'P' => {type,0,any,[]},
               'T' => {type,0,any,[]}}},
         {type,0,list,[{var,0,"T_typechecker_3529_9"}]},
         {call,
             {85,37},
             {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
             [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_10"}]},
                    {var,0,"B_typechecker_3529_11"}]},
               {type,0,nonempty_list,[{var,0,"A_typechecker_3529_10"}]}],
              {type,0,nonempty_list,[{var,0,"B_typechecker_3529_11"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_10" => true,
                    "B_typechecker_3529_11" => true}}},
          {fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_12"}]},
                    {var,0,"B_typechecker_3529_13"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_12"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_13"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_12" => true,
                    "B_typechecker_3529_13" => true}}}],
         [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}],
         {{85,37},
          {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.93.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'M' => {type,0,any,[]},
               'N' => {type,0,any,[]},
               'P' => {type,0,any,[]},
               'T' => {type,0,any,[]}}},
         {type,0,list,[{var,0,"T_typechecker_3529_9"}]},
         {call,
             {85,37},
             {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
             [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_10"}]},
                   {var,0,"B_typechecker_3529_11"}]},
              {type,0,nonempty_list,[{var,0,"A_typechecker_3529_10"}]}],
             {type,0,nonempty_list,[{var,0,"B_typechecker_3529_11"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_10" => true,
                   "B_typechecker_3529_11" => true}}},
         [{'fun',{85,47},{function,pp_type,1}},{var,{85,62},'P'}],
         {{85,37},
          {remote,{85,42},{atom,{85,37},lists},{atom,{85,43},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.93.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'M' => {type,0,any,[]},
     'N' => {type,0,any,[]},
     'P' => {type,0,any,[]},
     'T' => {type,0,any,[]}}},
  {constraints,
   #{"B_typechecker_3529_11" => [{type,0,list,[{type,0,char,[]}]}]},
   #{"A_typechecker_3529_10" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_11" => [{var,0,"T_typechecker_3529_9"}]},
   #{"A_typechecker_3529_10" => true,"B_typechecker_3529_11" => true}}}}
{trace,<0.93.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.93.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'M' => {type,0,any,[]},
     'N' => {type,0,any,[]},
     'P' => {type,0,any,[]},
     'T' => {type,0,any,[]}}},
  {constraints,
   #{"B_typechecker_3529_11" => [{type,0,list,[{type,0,char,[]}]}]},
   #{"A_typechecker_3529_10" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_11" => [{var,0,"T_typechecker_3529_9"}]},
   #{"A_typechecker_3529_10" => true,"B_typechecker_3529_11" => true}}}}
{trace,<0.93.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.93.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'M' => {type,0,any,[]},
     'N' => {type,0,any,[]},
     'P' => {type,0,any,[]},
     'T' => {type,0,any,[]}}},
  {constraints,
   #{"B_typechecker_3529_11" => [{type,0,list,[{type,0,char,[]}]}]},
   #{"A_typechecker_3529_10" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_11" => [{var,0,"T_typechecker_3529_9"}]},
   #{"A_typechecker_3529_10" => true,"B_typechecker_3529_11" => true}}}}
{trace,<0.93.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.93.0>,call,
       {typechecker,refine,
                    ["{any(), any(), any()}","{any(), any(), any()}",seen,
                     env]}}
{trace,<0.93.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.93.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.93.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,none,[]},{type,0,none,[]},{type,0,none,[]}],
  {venv,
   #{'M' => {type,0,any,[]},
     'N' => {type,0,any,[]},
     'P' => {type,0,any,[]},
     'Params' => {type,0,list,[{var,0,"T_typechecker_3529_9"}]},
     'T' => {type,0,any,[]}}},
  {constraints,
   #{"B_typechecker_3529_11" => [{type,0,list,[{type,0,char,[]}]}],
     "T_typechecker_3529_9" => [{char,0,44}]},
   #{"A_typechecker_3529_10" =>
      [{type,0,union,
        [{type,0,list,[{user_type,0,extended_type,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {remote_type,0,[{atom,{34,34},erl_anno},{atom,{34,43},anno},[]]},
           {atom,0,bounded_fun},
           {type,0,list,
            [{type,0,union,
              [{user_type,0,function_type,[]},
               {type,0,list,[{user_type,0,constraint,[]}]}]}]}]},
         {user_type,0,type,[]}]}],
     "B_typechecker_3529_11" => [{var,0,"T_typechecker_3529_9"}]},
   #{"A_typechecker_3529_10" => true,"B_typechecker_3529_11" => true,
     "T_typechecker_3529_9" => true}}}}
{trace,<0.93.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.93.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.94.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {93,1},
             parse_type,1,
             [{clause,
                  {93,1},
                  [{var,{93,12},'Src'}],
                  [],
                  [{match,
                       {94,5},
                       {var,{94,5},'AttrSrc'},
                       {op,{94,31},
                           '++',
                           {string,{94,15},"-type t() :: "},
                           {op,{94,38},
                               '++',
                               {var,{94,34},'Src'},
                               {string,{94,41},"."}}}},
                   {match,
                       {95,5},
                       {tuple,
                           {95,5},
                           [{atom,{95,6},ok},
                            {var,{95,10},'Tokens'},
                            {var,{95,18},'_EndLocation'}]},
                       {call,
                           {95,34},
                           {remote,
                               {95,42},
                               {atom,{95,34},erl_scan},
                               {atom,{95,43},string}},
                           [{var,{95,50},'AttrSrc'}]}},
                   {match,
                       {96,5},
                       {tuple,
                           {96,5},
                           [{atom,{96,6},ok},
                            {tuple,
                                {96,10},
                                [{atom,{96,11},attribute},
                                 {var,{96,22},'_'},
                                 {atom,{96,25},type},
                                 {tuple,
                                     {96,31},
                                     [{atom,{96,32},t},
                                      {var,{96,35},'Type'},
                                      {nil,{96,41}}]}]}]},
                       {call,
                           {96,49},
                           {remote,
                               {96,58},
                               {atom,{96,49},erl_parse},
                               {atom,{96,59},parse_form}},
                           [{var,{96,70},'Tokens'}]}},
                   {var,{97,5},'Type'}]}]}]}}
{trace,<0.94.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,string,[]}],
         {user_type,0,type,[]},
         {clause,
             {93,1},
             [{var,{93,12},'Src'}],
             [],
             [{match,
                  {94,5},
                  {var,{94,5},'AttrSrc'},
                  {op,{94,31},
                      '++',
                      {string,{94,15},"-type t() :: "},
                      {op,{94,38},
                          '++',
                          {var,{94,34},'Src'},
                          {string,{94,41},"."}}}},
              {match,
                  {95,5},
                  {tuple,
                      {95,5},
                      [{atom,{95,6},ok},
                       {var,{95,10},'Tokens'},
                       {var,{95,18},'_EndLocation'}]},
                  {call,
                      {95,34},
                      {remote,
                          {95,42},
                          {atom,{95,34},erl_scan},
                          {atom,{95,43},string}},
                      [{var,{95,50},'AttrSrc'}]}},
              {match,
                  {96,5},
                  {tuple,
                      {96,5},
                      [{atom,{96,6},ok},
                       {tuple,
                           {96,10},
                           [{atom,{96,11},attribute},
                            {var,{96,22},'_'},
                            {atom,{96,25},type},
                            {tuple,
                                {96,31},
                                [{atom,{96,32},t},
                                 {var,{96,35},'Type'},
                                 {nil,{96,41}}]}]}]},
                  {call,
                      {96,49},
                      {remote,
                          {96,58},
                          {atom,{96,49},erl_parse},
                          {atom,{96,59},parse_form}},
                      [{var,{96,70},'Tokens'}]}},
              {var,{97,5},'Type'}]},
         bind_vars]}}
{trace,<0.94.0>,call,
       {typechecker,refine,["{string()}","{string()}",seen,env]}}
{trace,<0.94.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.94.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.94.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,none,[]}],
     {venv,
         #{'AttrSrc' =>
               {type,0,union,
                   [{type,0,any,[]},{type,0,list,[{type,0,char,[]}]}]},
           'Src' => {type,0,list,[{type,0,char,[]}]},
           'Tokens' =>
               {type,0,list,
                   [{user_type,
                        [{file,"erl_scan.erl"},{location,0}],
                        token,[]}]},
           'Type' => {type,0,any,[]},
           '_EndLocation' =>
               {type,0,union,
                   [{type,0,tuple,
                        [{user_type,
                             [{file,"erl_anno.erl"},{location,0}],
                             line,[]},
                         {user_type,
                             [{file,"erl_anno.erl"},{location,0}],
                             column,[]}]},
                    {user_type,
                        [{file,"erl_anno.erl"},{location,0}],
                        line,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.94.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.94.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.95.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {114,1},
    remove_pos,1,
    [{clause,
      {114,1},
      [{match,
        {114,12},
        {tuple,
         {114,12},
         [{atom,{114,13},type},
          {var,{114,19},'_'},
          {atom,{114,22},constraint},
          {var,{114,34},'_'}]},
        {var,{114,39},'Constraint'}}],
      [],
      [{call,
        {115,5},
        {atom,{115,5},remove_pos_constraint},
        [{var,{115,27},'Constraint'}]}]},
     {clause,
      {117,1},
      [{tuple,
        {117,12},
        [{match,{117,13},{atom,{117,13},atom},{var,{117,20},'Type'}},
         {var,{117,26},'_'},
         {var,{117,29},'Value'}]}],
      [],
      [{tuple,
        {118,5},
        [{var,{118,6},'Type'},
         {call,
          {118,12},
          {remote,{118,20},{atom,{118,12},erl_anno},{atom,{118,21},new}},
          [{integer,{118,25},0}]},
         {var,{118,29},'Value'}]}]},
     {clause,
      {119,1},
      [{tuple,
        {119,12},
        [{match,{119,13},{atom,{119,13},integer},{var,{119,23},'Type'}},
         {var,{119,29},'_'},
         {var,{119,32},'Value'}]}],
      [],
      [{tuple,
        {120,5},
        [{var,{120,6},'Type'},
         {call,
          {120,12},
          {remote,{120,20},{atom,{120,12},erl_anno},{atom,{120,21},new}},
          [{integer,{120,25},0}]},
         {var,{120,29},'Value'}]}]},
     {clause,
      {121,1},
      [{tuple,
        {121,12},
        [{match,{121,13},{atom,{121,13},char},{var,{121,20},'Type'}},
         {var,{121,26},'_'},
         {var,{121,29},'Value'}]}],
      [],
      [{tuple,
        {122,5},
        [{var,{122,6},'Type'},
         {call,
          {122,12},
          {remote,{122,20},{atom,{122,12},erl_anno},{atom,{122,21},new}},
          [{integer,{122,25},0}]},
         {var,{122,29},'Value'}]}]},
     {clause,
      {123,1},
      [{tuple,
        {123,12},
        [{match,{123,13},{atom,{123,13},var},{var,{123,19},'Type'}},
         {var,{123,25},'_'},
         {var,{123,28},'Value'}]}],
      [],
      [{tuple,
        {124,5},
        [{var,{124,6},'Type'},
         {call,
          {124,12},
          {remote,{124,20},{atom,{124,12},erl_anno},{atom,{124,21},new}},
          [{integer,{124,25},0}]},
         {var,{124,29},'Value'}]}]},
     {clause,
      {126,1},
      [{tuple,
        {126,12},
        [{atom,{126,13},user_type},
         {var,{126,24},'Anno'},
         {var,{126,30},'Name'},
         {var,{126,36},'Params'}]}],
      [],
      [{tuple,
        {127,5},
        [{atom,{127,6},user_type},
         {call,
          {127,17},
          {atom,{127,17},anno_keep_only_filename},
          [{var,{127,41},'Anno'}]},
         {var,{127,48},'Name'},
         {call,
          {128,6},
          {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
          [{'fun',{128,16},{function,remove_pos,1}},
           {var,{128,34},'Params'}]}]}]},
     {clause,
      {129,1},
      [{tuple,
        {129,12},
        [{atom,{129,13},type},
         {var,{129,19},'Anno'},
         {atom,{129,25},record},
         {cons,{129,33},{var,{129,34},'Name'},{var,{129,41},'TypedFields'}}]}],
      [],
      [{tuple,
        {130,5},
        [{atom,{130,6},type},
         {call,
          {130,12},
          {atom,{130,12},anno_keep_only_filename},
          [{var,{130,36},'Anno'}]},
         {atom,{130,43},record},
         {op,
          {131,25},
          '++',
          {cons,
           {131,6},
           {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
           {nil,{131,23}}},
          {call,
           {131,28},
           {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
           [{'fun',{131,38},{function,remove_pos,1}},
            {var,{131,56},'TypedFields'}]}}]}]},
     {clause,
      {132,1},
      [{tuple,
        {132,12},
        [{atom,{132,13},type},
         {var,{132,19},'_'},
         {atom,{132,22},field_type},
         {cons,
          {132,34},
          {var,{132,35},'FName'},
          {cons,{132,42},{var,{132,42},'FTy'},{nil,{132,45}}}}]}],
      [],
      [{tuple,
        {133,5},
        [{atom,{133,6},type},
         {call,
          {133,12},
          {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
          [{integer,{133,25},0}]},
         {atom,{133,29},field_type},
         {cons,
          {133,41},
          {call,{133,42},{atom,{133,42},remove_pos},[{var,{133,53},'FName'}]},
          {cons,
           {133,61},
           {call,{133,61},{atom,{133,61},remove_pos},[{var,{133,72},'FTy'}]},
           {nil,{133,76}}}}]}]},
     {clause,
      {135,1},
      [{tuple,
        {135,12},
        [{atom,{135,13},type},
         {var,{135,19},'_'},
         {match,{135,22},{atom,{135,22},tuple},{var,{135,30},'Type'}},
         {atom,{135,36},any}]}],
      [],
      [{tuple,
        {136,5},
        [{atom,{136,6},type},
         {call,
          {136,12},
          {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
          [{integer,{136,25},0}]},
         {var,{136,29},'Type'},
         {atom,{136,35},any}]}]},
     {clause,
      {137,1},
      [{tuple,
        {137,12},
        [{atom,{137,13},type},
         {var,{137,19},'_'},
         {match,{137,22},{atom,{137,22},map},{var,{137,28},'Type'}},
         {atom,{137,34},any}]}],
      [],
      [{tuple,
        {138,5},
        [{atom,{138,6},type},
         {call,
          {138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{integer,{138,25},0}]},
         {var,{138,29},'Type'},
         {atom,{138,35},any}]}]},
     {clause,
      {140,1},
      [{tuple,
        {140,12},
        [{atom,{140,13},type},
         {var,{140,19},'_'},
         {var,{140,22},'Type'},
         {var,{140,28},'Params'}]}],
      [],
      [{tuple,
        {141,5},
        [{atom,{141,6},type},
         {call,
          {141,12},
          {remote,{141,20},{atom,{141,12},erl_anno},{atom,{141,21},new}},
          [{integer,{141,25},0}]},
         {var,{141,29},'Type'},
         {call,
          {141,35},
          {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
          [{'fun',
            {141,45},
            {clauses,
             [{clause,
               {142,49},
               [{tuple,
                 {142,50},
                 [{atom,{142,51},type},
                  {var,{142,57},'_'},
                  {atom,{142,60},any}]}],
               [],
               [{tuple,
                 {143,53},
                 [{atom,{143,54},type},
                  {call,
                   {143,60},
                   {remote,
                    {143,68},
                    {atom,{143,60},erl_anno},
                    {atom,{143,69},new}},
                   [{integer,{143,73},0}]},
                  {atom,{143,77},any}]}]},
              {clause,
               {144,49},
               [{var,{144,50},'P'}],
               [[{call,
                  {144,58},
                  {atom,{144,58},is_list},
                  [{var,{144,66},'P'}]}]],
               [{call,
                 {145,53},
                 {atom,{145,53},remove_pos_all},
                 [{var,{145,68},'P'}]}]},
              {clause,
               {146,49},
               [{var,{146,50},'P'}],
               [],
               [{call,
                 {147,53},
                 {atom,{147,53},remove_pos},
                 [{var,{147,64},'P'}]}]}]}},
           {var,{148,50},'Params'}]}]}]},
     {clause,
      {150,1},
      [{tuple,
        {150,12},
        [{atom,{150,13},type},
         {var,{150,19},'_'},
         {match,
          {150,22},
          {atom,{150,22},map_field_exact},
          {var,{150,40},'Assoc'}},
         {var,{150,47},'Tys'}]}],
      [],
      [{tuple,
        {151,5},
        [{atom,{151,6},type},
         {call,
          {151,12},
          {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
          [{integer,{151,25},0}]},
         {var,{151,29},'Assoc'},
         {call,
          {151,36},
          {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
          [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}]}]}]},
     {clause,
      {152,1},
      [{tuple,
        {152,12},
        [{atom,{152,13},type},
         {var,{152,19},'_'},
         {match,
          {152,22},
          {atom,{152,22},map_field_assoc},
          {var,{152,40},'Assoc'}},
         {var,{152,47},'Tys'}]}],
      [],
      [{tuple,
        {153,5},
        [{atom,{153,6},type},
         {call,
          {153,12},
          {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
          [{integer,{153,25},0}]},
         {var,{153,29},'Assoc'},
         {call,
          {153,36},
          {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
          [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}]}]}]},
     {clause,
      {155,1},
      [{match,
        {155,12},
        {tuple,
         {155,12},
         [{atom,{155,13},remote_type},{var,{155,26},'_'},{var,{155,29},'_'}]},
        {var,{155,34},'RemoteType'}}],
      [],
      [{call,
        {156,5},
        {atom,{156,5},remove_pos_remote_type},
        [{var,{156,28},'RemoteType'}]}]},
     {clause,
      {157,1},
      [{match,
        {157,12},
        {tuple,
         {157,12},
         [{atom,{157,13},ann_type},{var,{157,23},'_'},{var,{157,26},'_'}]},
        {var,{157,31},'AnnType'}}],
      [],
      [{call,
        {158,5},
        {atom,{158,5},remove_pos_ann_type},
        [{var,{158,25},'AnnType'}]}]},
     {clause,
      {159,1},
      [{tuple,
        {159,12},
        [{atom,{159,13},op},
         {var,{159,17},'_'},
         {var,{159,20},'Op'},
         {var,{159,24},'Type'}]}],
      [],
      [{tuple,
        {160,5},
        [{atom,{160,6},op},
         {call,
          {160,10},
          {remote,{160,18},{atom,{160,10},erl_anno},{atom,{160,19},new}},
          [{integer,{160,23},0}]},
         {var,{160,27},'Op'},
         {call,
          {160,31},
          {atom,{160,31},remove_pos},
          [{var,{160,42},'Type'}]}]}]},
     {clause,
      {161,1},
      [{tuple,
        {161,12},
        [{atom,{161,13},op},
         {var,{161,17},'_'},
         {var,{161,20},'Op'},
         {var,{161,24},'Type1'},
         {var,{161,31},'Type2'}]}],
      [],
      [{match,
        {162,5},
        {var,{162,5},'Type1'},
        {call,
         {162,14},
         {atom,{162,14},':::'},
         [{var,{162,26},'Type1'},{string,{162,26},"type ( )"}]}},
       {match,
        {163,5},
        {var,{163,5},'Type2'},
        {call,
         {163,14},
         {atom,{163,14},':::'},
         [{var,{163,26},'Type2'},{string,{163,26},"type ( )"}]}},
       {tuple,
        {164,5},
        [{atom,{164,6},op},
         {call,
          {164,10},
          {remote,{164,18},{atom,{164,10},erl_anno},{atom,{164,19},new}},
          [{integer,{164,23},0}]},
         {var,{164,27},'Op'},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         {call,
          {164,50},
          {atom,{164,50},remove_pos},
          [{var,{164,61},'Type2'}]}]}]}]}]}}
{trace,<0.95.0>,call,
       {typechecker,check_clauses_intersection,
                    [{[{user_type,0,af_constraint,[]}],
                      {user_type,0,af_constraint,[]}},
                     "fun({type, _, constraint, _} = Constraint) ->\n       ok\nend",
                     #{[{user_type,0,af_constraint,[]}] =>
                           [{user_type,0,af_constraint,[]}],
                       [{user_type,0,type,[]}] => [{user_type,0,type,[]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,af_constraint,[]}],
         {user_type,0,af_constraint,[]},
         {clause,
             {114,1},
             [{match,
                  {114,12},
                  {tuple,
                      {114,12},
                      [{atom,{114,13},type},
                       {var,{114,19},'_'},
                       {atom,{114,22},constraint},
                       {var,{114,34},'_'}]},
                  {var,{114,39},'Constraint'}}],
             [],
             [{call,
                  {115,5},
                  {atom,{115,5},remove_pos_constraint},
                  [{var,{115,27},'Constraint'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Constraint' =>
       {type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}}},
   {type,0,tuple,
    [{atom,0,type},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
     {atom,0,constraint},
     {type,0,list,
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_lit_atom,
          [{atom,0,is_subtype}]},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_type_variable,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              abstract_type,[]}]}]}]}]}]},
   {call,
    {115,5},
    {atom,{115,5},remove_pos_constraint},
    [{var,{115,27},'Constraint'}]},
   {fun_ty,[{type,0,any,[]}],{type,0,any,[]},{constraints,#{},#{},#{}}},
   [{var,{115,27},'Constraint'}],
   {{115,5},{atom,{115,5},remove_pos_constraint},[{type,0,any,[]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Constraint' =>
      {type,0,tuple,
       [{atom,0,type},
        {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
        {atom,0,constraint},
        {type,0,list,
         [{type,0,union,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_lit_atom,
             [{atom,0,is_subtype}]},
            {type,0,list,
             [{type,0,union,
               [{user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_type_variable,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 abstract_type,[]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_constraint()}","{af_constraint()}",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,none,[]}],
  {venv,
   #{'Constraint' =>
      {type,0,tuple,
       [{atom,0,type},
        {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
        {atom,0,constraint},
        {type,0,list,
         [{type,0,union,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_lit_atom,
             [{atom,0,is_subtype}]},
            {type,0,list,
             [{type,0,union,
               [{user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_type_variable,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 abstract_type,[]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
       {typechecker,check_clauses_intersection,
                    [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
                     "fun({type, _, constraint, _} = Constraint) ->\n       ok\nend",
                     #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
                       [{user_type,0,type,[]}] => [{user_type,0,type,[]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,type,[]}],
         {user_type,0,type,[]},
         {clause,
             {114,1},
             [{match,
                  {114,12},
                  {tuple,
                      {114,12},
                      [{atom,{114,13},type},
                       {var,{114,19},'_'},
                       {atom,{114,22},constraint},
                       {var,{114,34},'_'}]},
                  {var,{114,39},'Constraint'}}],
             [],
             [{call,
                  {115,5},
                  {atom,{115,5},remove_pos_constraint},
                  [{var,{115,27},'Constraint'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Constraint' =>
                   {type,0,tuple,
                       [{atom,0,type},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                        {atom,0,constraint},
                        {type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {115,5},
             {atom,{115,5},remove_pos_constraint},
             [{var,{115,27},'Constraint'}]},
         {fun_ty,[{type,0,any,[]}],{type,0,any,[]},{constraints,#{},#{},#{}}},
         [{var,{115,27},'Constraint'}],
         {{115,5},{atom,{115,5},remove_pos_constraint},[{type,0,any,[]}]}]}}
{trace,<0.95.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Constraint' =>
               {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {atom,0,constraint},
                    {type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type()}",
                     "{{type, anno(), constraint, [abstract_type()]}}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["type()","{type, anno(), constraint, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["user_type","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_variable()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["union","constraint",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","constraint",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","constraint",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["gr_integer()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_character()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["record","constraint",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{type, anno(), constraint, [abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["type_name()","constraint",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{user_type,0,type,[]}],
     {venv,
         #{'Constraint' =>
               {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {atom,0,constraint},
                    {type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
       {typechecker,check_clauses_intersection,
                    [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
                     "fun({atom = Type, _, Value}) ->\n       ok\nend",
                     #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
                       [{user_type,0,type,[]}] => [{user_type,0,type,[]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,type,[]}],
         {user_type,0,type,[]},
         {clause,
             {117,1},
             [{tuple,
                  {117,12},
                  [{match,{117,13},{atom,{117,13},atom},{var,{117,20},'Type'}},
                   {var,{117,26},'_'},
                   {var,{117,29},'Value'}]}],
             [],
             [{tuple,
                  {118,5},
                  [{var,{118,6},'Type'},
                   {call,
                       {118,12},
                       {remote,
                           {118,20},
                           {atom,{118,12},erl_anno},
                           {atom,{118,21},new}},
                       [{integer,{118,25},0}]},
                   {var,{118,29},'Value'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,atom},'Value' => {type,0,atom,[]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {118,12},
             {remote,{118,20},{atom,{118,12},erl_anno},{atom,{118,21},new}},
             [{integer,{118,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{118,25},0}],
         {{118,12},
          {remote,{118,20},{atom,{118,12},erl_anno},{atom,{118,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,atom},'Value' => {type,0,atom,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["{type()}","{{atom, anno(), atom()}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,["type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["var","atom",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}","{atom, anno(), atom()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()","{atom, anno(), atom()}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["integer","atom",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_character()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["char","atom",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["remote_type","atom",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}","{atom, anno(), atom()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,["af_atom()","{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{atom, anno(), atom()}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["ann_type","atom",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,
             [{type,0,union,
                    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_annotated_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_bitstring_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_constrained_function_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_empty_list_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_fun_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_integer_range_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_map_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_predefined_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_record_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_remote_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_singleton_integer_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_tuple_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_type_union,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_type_variable,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_user_defined_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,union,
               [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_annotated_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_bitstring_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_constrained_function_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_empty_list_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_fun_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_integer_range_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_map_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_predefined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_record_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_remote_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_tuple_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_union,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_variable,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_user_defined_type,[]}]}],
        {venv,#{'Type' => {atom,0,atom},'Value' => {type,0,atom,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({integer = Type, _, Value}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {119,1},
             [{tuple,
                  {119,12},
                  [{match,
                       {119,13},
                       {atom,{119,13},integer},
                       {var,{119,23},'Type'}},
                   {var,{119,29},'_'},
                   {var,{119,32},'Value'}]}],
             [],
             [{tuple,
                  {120,5},
                  [{var,{120,6},'Type'},
                   {call,
                       {120,12},
                       {remote,
                           {120,20},
                           {atom,{120,12},erl_anno},
                           {atom,{120,21},new}},
                       [{integer,{120,25},0}]},
                   {var,{120,29},'Value'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,integer},'Value' => {type,0,integer,[]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {120,12},
             {remote,{120,20},{atom,{120,12},erl_anno},{atom,{120,21},new}},
             [{integer,{120,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{120,25},0}],
         {{120,12},
          {remote,{120,20},{atom,{120,12},erl_anno},{atom,{120,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,integer},'Value' => {type,0,integer,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable() |\n           af_user_defined_type()}",
                     "{{integer, anno(), integer()}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_singleton_integer_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_type_variable() |\n          af_user_defined_type()",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{integer, anno(), integer()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["var","integer",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_character()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["char","integer",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["remote_type","integer",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{integer, anno(), integer()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{integer, anno(), integer()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{integer, anno(), integer()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{integer, anno(), integer()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{integer, anno(), integer()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{integer, anno(), integer()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{integer, anno(), integer()}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["ann_type","integer",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_character,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_variable,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]}]}],
     {venv,#{'Type' => {atom,0,integer},'Value' => {type,0,integer,[]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({char = Type, _, Value}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_character,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {121,1},
             [{tuple,
                  {121,12},
                  [{match,{121,13},{atom,{121,13},char},{var,{121,20},'Type'}},
                   {var,{121,26},'_'},
                   {var,{121,29},'Value'}]}],
             [],
             [{tuple,
                  {122,5},
                  [{var,{122,6},'Type'},
                   {call,
                       {122,12},
                       {remote,
                           {122,20},
                           {atom,{122,12},erl_anno},
                           {atom,{122,21},new}},
                       [{integer,{122,25},0}]},
                   {var,{122,29},'Value'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Type' => {atom,0,char},
               'Value' => {type,0,range,[{integer,0,0},{integer,0,1114111}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {122,12},
             {remote,{122,20},{atom,{122,12},erl_anno},{atom,{122,21},new}},
             [{integer,{122,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{122,25},0}],
         {{122,12},
          {remote,{122,20},{atom,{122,12},erl_anno},{atom,{122,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,char},
                'Value' =>
                    {type,0,range,[{integer,0,0},{integer,0,1114111}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_character() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable() |\n           af_unary_op(af_singleton_integer_type()) |\n           af_user_defined_type()}",
                     "{{char, anno(), char()}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_character() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_type_variable() |\n          af_unary_op(af_singleton_integer_type()) |\n          af_user_defined_type()",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["var","char",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}","{char, anno(), char()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["remote_type","char",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}","{char, anno(), char()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_character()","{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{char, anno(), char()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{char, anno(), char()}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["ann_type","char",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_variable,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]}]}],
     {venv,
         #{'Type' => {atom,0,char},
           'Value' => {type,0,range,[{integer,0,0},{integer,0,1114111}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({var = Type, _, Value}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {123,1},
             [{tuple,
                  {123,12},
                  [{match,{123,13},{atom,{123,13},var},{var,{123,19},'Type'}},
                   {var,{123,25},'_'},
                   {var,{123,28},'Value'}]}],
             [],
             [{tuple,
                  {124,5},
                  [{var,{124,6},'Type'},
                   {call,
                       {124,12},
                       {remote,
                           {124,20},
                           {atom,{124,12},erl_anno},
                           {atom,{124,21},new}},
                       [{integer,{124,25},0}]},
                   {var,{124,29},'Value'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Type' => {atom,0,var},
               'Value' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {124,12},
             {remote,{124,20},{atom,{124,12},erl_anno},{atom,{124,21},new}},
             [{integer,{124,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{124,25},0}],
         {{124,12},
          {remote,{124,20},{atom,{124,12},erl_anno},{atom,{124,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,var},
                'Value' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable() |\n           af_unary_op(af_singleton_integer_type()) |\n           af_user_defined_type()}",
                     "{{var, anno(), gr_type_var()}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_type_variable() |\n          af_unary_op(af_singleton_integer_type()) |\n          af_user_defined_type()",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["remote_type","var",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["ann_type","var",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]}]}],
     {venv,
         #{'Type' => {atom,0,var},
           'Value' =>
               {type,0,union,
                   [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({user_type, Anno, Name, Params}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {126,1},
             [{tuple,
                  {126,12},
                  [{atom,{126,13},user_type},
                   {var,{126,24},'Anno'},
                   {var,{126,30},'Name'},
                   {var,{126,36},'Params'}]}],
             [],
             [{tuple,
                  {127,5},
                  [{atom,{127,6},user_type},
                   {call,
                       {127,17},
                       {atom,{127,17},anno_keep_only_filename},
                       [{var,{127,41},'Anno'}]},
                   {var,{127,48},'Name'},
                   {call,
                       {128,6},
                       {remote,
                           {128,11},
                           {atom,{128,6},lists},
                           {atom,{128,12},map}},
                       [{'fun',{128,16},{function,remove_pos,1}},
                        {var,{128,34},'Params'}]}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {127,17},
             {atom,{127,17},anno_keep_only_filename},
             [{var,{127,41},'Anno'}]},
         {fun_ty,
             [{remote_type,0,
                  [{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
             {remote_type,0,
                 [{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
             {constraints,#{},#{},#{}}},
         [{var,{127,41},'Anno'}],
         {{127,17},
          {atom,{127,17},anno_keep_only_filename},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{remote_type,0,
                              [{atom,{185,31},erl_anno},
                               {atom,{185,40},anno},
                               []]}]},
                     {remote_type,0,
                         [{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Name' => {type,0,atom,[]},
                'Params' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {128,6},
             {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
             [{'fun',{128,16},{function,remove_pos,1}},
              {var,{128,34},'Params'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_14"}]},
                        {var,0,"B_typechecker_3529_15"}]},
                   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_14"}]}],
                  {type,0,nonempty_list,[{var,0,"B_typechecker_3529_15"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_14" => true,
                        "B_typechecker_3529_15" => true}}},
              {fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_16"}]},
                        {var,0,"B_typechecker_3529_17"}]},
                   {type,0,list,[{var,0,"A_typechecker_3529_16"}]}],
                  {type,0,list,[{var,0,"B_typechecker_3529_17"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_16" => true,
                        "B_typechecker_3529_17" => true}}}],
             {constraints,#{},#{},#{}}},
         [{'fun',{128,16},{function,remove_pos,1}},{var,{128,34},'Params'}],
         {{128,6},
          {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {128,6},
             {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
             [{'fun',{128,16},{function,remove_pos,1}},
              {var,{128,34},'Params'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_14"}]},
                    {var,0,"B_typechecker_3529_15"}]},
               {type,0,nonempty_list,[{var,0,"A_typechecker_3529_14"}]}],
              {type,0,nonempty_list,[{var,0,"B_typechecker_3529_15"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_14" => true,
                    "B_typechecker_3529_15" => true}}},
          {fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_16"}]},
                    {var,0,"B_typechecker_3529_17"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_16"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_17"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_16" => true,
                    "B_typechecker_3529_17" => true}}}],
         [{'fun',{128,16},{function,remove_pos,1}},{var,{128,34},'Params'}],
         {{128,6},
          {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {128,6},
             {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
             [{'fun',{128,16},{function,remove_pos,1}},
              {var,{128,34},'Params'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_14"}]},
                   {var,0,"B_typechecker_3529_15"}]},
              {type,0,nonempty_list,[{var,0,"A_typechecker_3529_14"}]}],
             {type,0,nonempty_list,[{var,0,"B_typechecker_3529_15"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_14" => true,
                   "B_typechecker_3529_15" => true}}},
         [{'fun',{128,16},{function,remove_pos,1}},{var,{128,34},'Params'}],
         {{128,6},
          {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{128,34},'Params'},
            {type,0,list,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]},
            {type,0,nonempty_list,[{var,0,"A_typechecker_3529_14"}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {128,6},
             {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
             [{'fun',{128,16},{function,remove_pos,1}},
              {var,{128,34},'Params'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_16"}]},
                    {var,0,"B_typechecker_3529_17"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_16"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_17"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_16" => true,
                    "B_typechecker_3529_17" => true}}}],
         [{'fun',{128,16},{function,remove_pos,1}},{var,{128,34},'Params'}],
         {{128,6},
          {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {128,6},
             {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
             [{'fun',{128,16},{function,remove_pos,1}},
              {var,{128,34},'Params'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_16"}]},
                   {var,0,"B_typechecker_3529_17"}]},
              {type,0,list,[{var,0,"A_typechecker_3529_16"}]}],
             {type,0,list,[{var,0,"B_typechecker_3529_17"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_16" => true,
                   "B_typechecker_3529_17" => true}}},
         [{'fun',{128,16},{function,remove_pos,1}},{var,{128,34},'Params'}],
         {{128,6},
          {remote,{128,11},{atom,{128,6},lists},{atom,{128,12},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' => {type,0,atom,[]},
     'Params' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" => true,"B_typechecker_3529_17" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' => {type,0,atom,[]},
     'Params' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" => true,"B_typechecker_3529_17" => true}}}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' => {type,0,atom,[]},
     'Params' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" => true,"B_typechecker_3529_17" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' => {type,0,atom,[]},
     'Params' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" => true,"B_typechecker_3529_17" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type()) |\n           af_user_defined_type()}",
                     "{{user_type, anno(), type_name(), [abstract_type()]}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type()) |\n          af_user_defined_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_binary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_unary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]}]}],
  {venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' => {type,0,atom,[]},
     'Params' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_17" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_16" => true,"B_typechecker_3529_17" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, Anno, record, [Name | TypedFields]}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {129,1},
             [{tuple,
                  {129,12},
                  [{atom,{129,13},type},
                   {var,{129,19},'Anno'},
                   {atom,{129,25},record},
                   {cons,
                       {129,33},
                       {var,{129,34},'Name'},
                       {var,{129,41},'TypedFields'}}]}],
             [],
             [{tuple,
                  {130,5},
                  [{atom,{130,6},type},
                   {call,
                       {130,12},
                       {atom,{130,12},anno_keep_only_filename},
                       [{var,{130,36},'Anno'}]},
                   {atom,{130,43},record},
                   {op,{131,25},
                       '++',
                       {cons,
                           {131,6},
                           {call,
                               {131,7},
                               {atom,{131,7},remove_pos},
                               [{var,{131,18},'Name'}]},
                           {nil,{131,23}}},
                       {call,
                           {131,28},
                           {remote,
                               {131,33},
                               {atom,{131,28},lists},
                               {atom,{131,34},map}},
                           [{'fun',{131,38},{function,remove_pos,1}},
                            {var,{131,56},'TypedFields'}]}}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{var,{130,36},'Anno'}]},
   {fun_ty,
    [{remote_type,0,[{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
    {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
    {constraints,#{},#{},#{}}},
   [{var,{130,36},'Anno'}],
   {{130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{remote_type,0,
            [{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}]},
         {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{var,{130,36},'Anno'}]},
   {fun_ty,
    [{remote_type,0,[{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
    {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
    {constraints,#{},#{},#{}}},
   [{var,{130,36},'Anno'}],
   {{130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{remote_type,0,
            [{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}]},
         {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{var,{130,36},'Anno'}]},
   {fun_ty,
    [{remote_type,0,[{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
    {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
    {constraints,#{},#{},#{}}},
   [{var,{130,36},'Anno'}],
   {{130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{remote_type,0,
            [{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}]},
         {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{var,{130,36},'Anno'}]},
   {fun_ty,
    [{remote_type,0,[{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
    {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
    {constraints,#{},#{},#{}}},
   [{var,{130,36},'Anno'}],
   {{130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{remote_type,0,
            [{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}]},
         {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_field_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   {fun_ty_intersection,
    [{fun_ty,
      [{user_type,0,af_constraint,[]}],
      {user_type,0,af_constraint,[]},
      {constraints,#{},#{},#{}}},
     {fun_ty,
      [{user_type,0,type,[]}],
      {user_type,0,type,[]},
      {constraints,#{},#{},#{}}}],
    {constraints,#{},#{},#{}}},
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_field_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   [{fun_ty,
     [{user_type,0,af_constraint,[]}],
     {user_type,0,af_constraint,[]},
     {constraints,#{},#{},#{}}},
    {fun_ty,
     [{user_type,0,type,[]}],
     {user_type,0,type,[]},
     {constraints,#{},#{},#{}}}],
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_field_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   {fun_ty,
    [{user_type,0,af_constraint,[]}],
    {user_type,0,af_constraint,[]},
    {constraints,#{},#{},#{}}},
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,exception_from,
 {typechecker,type_check_call,6},
 {throw,
  {type_error,
   {var,{131,18},'Name'},
   {type,0,union,
    [{type,0,tuple,
      [{atom,0,atom},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
       {type,0,atom,[]}]},
     {type,0,tuple,
      [{atom,0,type},
       {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
       {atom,0,field_type},
       {type,0,list,
        [{type,0,union,
          [{type,0,tuple,
            [{atom,0,ann_type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,atom},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,atom,[]}]},
           {type,0,tuple,
            [{atom,0,char},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,char,[]}]},
           {type,0,tuple,
            [{atom,0,integer},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,integer,[]}]},
           {type,0,tuple,
            [{atom,0,op},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              binary_op,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_singleton_integer_type,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_singleton_integer_type,[]}]},
           {type,0,tuple,
            [{atom,0,op},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              unary_op,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_singleton_integer_type,[]}]},
           {type,0,tuple,
            [{atom,0,remote_type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,binary},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,binary},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,'fun'},
             {type,0,list,[{type,0,none,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,'fun'},
             {type,0,nil,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,nil},
             {type,0,nil,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,range},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,tuple},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,union},
             {type,0,nonempty_list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,binary},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_singleton_integer_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,map},
             {atom,0,any}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,nil},
             {type,0,nil,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,range},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                gr_range_bound,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,record},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_field_type,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,tuple},
             {atom,0,any}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,tuple},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,union},
             {type,0,nonempty_list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              type_name,[]},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,user_type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              type_name,[]},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,var},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              gr_type_var,[]}]}]}]}]}]},
   {user_type,0,af_constraint,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_field_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   [{fun_ty,
     [{user_type,0,type,[]}],
     {user_type,0,type,[]},
     {constraints,#{},#{},#{}}}],
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_field_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   {fun_ty,
    [{user_type,0,type,[]}],
    {user_type,0,type,[]},
    {constraints,#{},#{},#{}}},
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
            {user_type,0,type,[]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_field_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   [],
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {131,7},
            {atom,{131,7},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {131,7},
            {atom,{131,7},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {131,7},
            {atom,{131,7},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,no_type_match_intersection,
            {131,7},
            {atom,{131,7},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{var,{130,36},'Anno'}]},
   {fun_ty,
    [{remote_type,0,[{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
    {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
    {constraints,#{},#{},#{}}},
   [{var,{130,36},'Anno'}],
   {{130,12},
    {atom,{130,12},anno_keep_only_filename},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{remote_type,0,
            [{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}]},
         {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_user_defined_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   {fun_ty_intersection,
    [{fun_ty,
      [{user_type,0,af_constraint,[]}],
      {user_type,0,af_constraint,[]},
      {constraints,#{},#{},#{}}},
     {fun_ty,
      [{user_type,0,type,[]}],
      {user_type,0,type,[]},
      {constraints,#{},#{},#{}}}],
    {constraints,#{},#{},#{}}},
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_user_defined_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   [{fun_ty,
     [{user_type,0,af_constraint,[]}],
     {user_type,0,af_constraint,[]},
     {constraints,#{},#{},#{}}},
    {fun_ty,
     [{user_type,0,type,[]}],
     {user_type,0,type,[]},
     {constraints,#{},#{},#{}}}],
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_user_defined_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   {fun_ty,
    [{user_type,0,af_constraint,[]}],
    {user_type,0,af_constraint,[]},
    {constraints,#{},#{},#{}}},
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,exception_from,
 {typechecker,type_check_call,6},
 {throw,
  {type_error,
   {var,{131,18},'Name'},
   {type,0,union,
    [{type,0,tuple,
      [{atom,0,atom},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
       {type,0,atom,[]}]},
     {type,0,tuple,
      [{atom,0,type},
       {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
       {atom,0,field_type},
       {type,0,list,
        [{type,0,union,
          [{type,0,tuple,
            [{atom,0,ann_type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,atom},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,atom,[]}]},
           {type,0,tuple,
            [{atom,0,char},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,char,[]}]},
           {type,0,tuple,
            [{atom,0,integer},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,integer,[]}]},
           {type,0,tuple,
            [{atom,0,op},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              binary_op,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_singleton_integer_type,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_singleton_integer_type,[]}]},
           {type,0,tuple,
            [{atom,0,op},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              unary_op,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_singleton_integer_type,[]}]},
           {type,0,tuple,
            [{atom,0,remote_type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,binary},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,binary},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,'fun'},
             {type,0,list,[{type,0,none,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,'fun'},
             {type,0,nil,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,nil},
             {type,0,nil,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,range},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,tuple},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,union},
             {type,0,nonempty_list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,binary},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_singleton_integer_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,map},
             {atom,0,any}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,nil},
             {type,0,nil,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,range},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                gr_range_bound,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,record},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_field_type,[]}]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,tuple},
             {atom,0,any}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,tuple},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {atom,0,union},
             {type,0,nonempty_list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              type_name,[]},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,user_type},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              type_name,[]},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]},
           {type,0,tuple,
            [{atom,0,var},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              gr_type_var,[]}]}]}]}]}]},
   {user_type,0,af_constraint,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_user_defined_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   [{fun_ty,
     [{user_type,0,type,[]}],
     {user_type,0,type,[]},
     {constraints,#{},#{},#{}}}],
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_user_defined_type,[]}]},
   {call,{131,7},{atom,{131,7},remove_pos},[{var,{131,18},'Name'}]},
   {fun_ty,
    [{user_type,0,type,[]}],
    {user_type,0,type,[]},
    {constraints,#{},#{},#{}}},
   [{var,{131,18},'Name'}],
   {{131,7},
    {atom,{131,7},remove_pos},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,af_constraint,[]}]},
         {user_type,0,af_constraint,[]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,list,
    [{type,0,union,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_annotated_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_bitstring_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_constrained_function_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_empty_list_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_integer_range_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_predefined_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_record_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_remote_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_tuple_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_union,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_variable,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_user_defined_type,[]}]}]},
   {call,
    {131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}]},
   {fun_ty_intersection,
    [{fun_ty,
      [{type,0,'fun',
        [{type,0,product,[{var,0,"A_typechecker_3529_18"}]},
         {var,0,"B_typechecker_3529_19"}]},
       {type,0,nonempty_list,[{var,0,"A_typechecker_3529_18"}]}],
      {type,0,nonempty_list,[{var,0,"B_typechecker_3529_19"}]},
      {constraints,#{},#{},
       #{"A_typechecker_3529_18" => true,"B_typechecker_3529_19" => true}}},
     {fun_ty,
      [{type,0,'fun',
        [{type,0,product,[{var,0,"A_typechecker_3529_20"}]},
         {var,0,"B_typechecker_3529_21"}]},
       {type,0,list,[{var,0,"A_typechecker_3529_20"}]}],
      {type,0,list,[{var,0,"B_typechecker_3529_21"}]},
      {constraints,#{},#{},
       #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}],
    {constraints,#{},#{},#{}}},
   [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}],
   {{131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,list,
    [{type,0,union,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_annotated_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_bitstring_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_constrained_function_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_empty_list_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_integer_range_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_predefined_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_record_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_remote_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_tuple_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_union,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_variable,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_user_defined_type,[]}]}]},
   {call,
    {131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}]},
   [{fun_ty,
     [{type,0,'fun',
       [{type,0,product,[{var,0,"A_typechecker_3529_18"}]},
        {var,0,"B_typechecker_3529_19"}]},
      {type,0,nonempty_list,[{var,0,"A_typechecker_3529_18"}]}],
     {type,0,nonempty_list,[{var,0,"B_typechecker_3529_19"}]},
     {constraints,#{},#{},
      #{"A_typechecker_3529_18" => true,"B_typechecker_3529_19" => true}}},
    {fun_ty,
     [{type,0,'fun',
       [{type,0,product,[{var,0,"A_typechecker_3529_20"}]},
        {var,0,"B_typechecker_3529_21"}]},
      {type,0,list,[{var,0,"A_typechecker_3529_20"}]}],
     {type,0,list,[{var,0,"B_typechecker_3529_21"}]},
     {constraints,#{},#{},
      #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}],
   [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}],
   {{131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,list,
    [{type,0,union,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_annotated_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_bitstring_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_constrained_function_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_empty_list_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_integer_range_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_predefined_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_record_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_remote_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_tuple_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_union,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_variable,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_user_defined_type,[]}]}]},
   {call,
    {131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}]},
   {fun_ty,
    [{type,0,'fun',
      [{type,0,product,[{var,0,"A_typechecker_3529_18"}]},
       {var,0,"B_typechecker_3529_19"}]},
     {type,0,nonempty_list,[{var,0,"A_typechecker_3529_18"}]}],
    {type,0,nonempty_list,[{var,0,"B_typechecker_3529_19"}]},
    {constraints,#{},#{},
     #{"A_typechecker_3529_18" => true,"B_typechecker_3529_19" => true}}},
   [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}],
   {{131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,exception_from,
 {typechecker,type_check_call,6},
 {throw,
  {type_error,
   {var,{131,56},'TypedFields'},
   {type,0,union,
    [{type,0,list,
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]}]},
     {type,0,nil,[]}]},
   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_18"}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,list,
    [{type,0,union,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_annotated_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_bitstring_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_constrained_function_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_empty_list_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_integer_range_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_predefined_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_record_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_remote_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_tuple_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_union,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_variable,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_user_defined_type,[]}]}]},
   {call,
    {131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}]},
   [{fun_ty,
     [{type,0,'fun',
       [{type,0,product,[{var,0,"A_typechecker_3529_20"}]},
        {var,0,"B_typechecker_3529_21"}]},
      {type,0,list,[{var,0,"A_typechecker_3529_20"}]}],
     {type,0,list,[{var,0,"B_typechecker_3529_21"}]},
     {constraints,#{},#{},
      #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}],
   [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}],
   {{131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Name' =>
       {type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]},
      'TypedFields' =>
       {type,0,union,
        [{type,0,list,
          [{type,0,union,
            [{type,0,tuple,
              [{atom,0,atom},
               {user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                anno,[]},
               {type,0,atom,[]}]},
             {type,0,tuple,
              [{atom,0,type},
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               {atom,0,field_type},
               {type,0,list,
                [{type,0,union,
                  [{type,0,tuple,
                    [{atom,0,ann_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,atom},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,atom,[]}]},
                   {type,0,tuple,
                    [{atom,0,char},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,char,[]}]},
                   {type,0,tuple,
                    [{atom,0,integer},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,integer,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      binary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,op},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      unary_op,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]},
                   {type,0,tuple,
                    [{atom,0,remote_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {type,0,list,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_binary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_character,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_unary_op,
                          [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          gr_integer,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,list,[{type,0,none,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,'fun'},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{type,0,union,
                        [{type,0,tuple,
                          [{atom,0,char},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,char,[]}]},
                         {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {type,0,integer,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            binary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]},
                         {type,0,tuple,
                          [{atom,0,op},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            unary_op,[]},
                           {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]}]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_annotated_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_bitstring_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_constrained_function_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_empty_list_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_fun_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_integer_range_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_map_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_predefined_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_remote_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_tuple_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_union,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_type_variable,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_user_defined_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,binary},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,map},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,nil},
                     {type,0,nil,[]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,range},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_range_bound,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,record},
                     {type,0,list,
                      [{type,0,union,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_atom,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_record_field_type,[]}]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {atom,0,any}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,tuple},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {atom,0,union},
                     {type,0,nonempty_list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,user_type},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      type_name,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]},
                   {type,0,tuple,
                    [{atom,0,var},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_type_var,[]}]}]}]}]}]}]},
         {type,0,nil,[]}]}}},
   {type,0,list,
    [{type,0,union,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_annotated_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_bitstring_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_constrained_function_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_empty_list_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_integer_range_type,[]},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_predefined_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_record_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_remote_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_tuple_type,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_union,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_type_variable,[]},
       {user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_user_defined_type,[]}]}]},
   {call,
    {131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}]},
   {fun_ty,
    [{type,0,'fun',
      [{type,0,product,[{var,0,"A_typechecker_3529_20"}]},
       {var,0,"B_typechecker_3529_21"}]},
     {type,0,list,[{var,0,"A_typechecker_3529_20"}]}],
    {type,0,list,[{var,0,"B_typechecker_3529_21"}]},
    {constraints,#{},#{},
     #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}},
   [{'fun',{131,38},{function,remove_pos,1}},{var,{131,56},'TypedFields'}],
   {{131,28},
    {remote,{131,33},{atom,{131,28},lists},{atom,{131,34},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{type,\n            anno(),\n            record,\n            [{atom, anno(), atom()} |\n             {type,\n              anno(),\n              field_type,\n              [{atom, anno(), atom()} |\n               af_annotated_type() |\n               af_atom() |\n               af_bitstring_type() |\n               af_constrained_function_type() |\n               af_empty_list_type() |\n               af_fun_type() |\n               af_integer_range_type() |\n               af_map_type() |\n               af_predefined_type() |\n               af_record_type() |\n               af_remote_type() |\n               af_singleton_integer_type() |\n               af_tuple_type() |\n               af_type_union() |\n               af_type_variable() |\n               af_user_defined_type()]},\n             ...]}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["union","record",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","record",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","record",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{type,\n           anno(),\n           record,\n           [{atom, anno(), atom()} |\n            {type,\n             anno(),\n             field_type,\n             [{atom, anno(), atom()} |\n              af_annotated_type() |\n              af_atom() |\n              af_bitstring_type() |\n              af_constrained_function_type() |\n              af_empty_list_type() |\n              af_fun_type() |\n              af_integer_range_type() |\n              af_map_type() |\n              af_predefined_type() |\n              af_record_type() |\n              af_remote_type() |\n              af_singleton_integer_type() |\n              af_tuple_type() |\n              af_type_union() |\n              af_type_variable() |\n              af_user_defined_type()]},\n            ...]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["record","record",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["[af_atom() | af_record_field_type()]",
                     "[{atom, anno(), atom()} |\n           {type,\n            anno(),\n            field_type,\n            [{atom, anno(), atom()} |\n             af_annotated_type() |\n             af_atom() |\n             af_bitstring_type() |\n             af_constrained_function_type() |\n             af_empty_list_type() |\n             af_fun_type() |\n             af_integer_range_type() |\n             af_map_type() |\n             af_predefined_type() |\n             af_record_type() |\n             af_remote_type() |\n             af_singleton_integer_type() |\n             af_tuple_type() |\n             af_type_union() |\n             af_type_variable() |\n             af_user_defined_type()]},\n           ...]",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_atom() | af_record_field_type()",
                     "{atom, anno(), atom()} |\n          {type,\n           anno(),\n           field_type,\n           [{atom, anno(), atom()} |\n            af_annotated_type() |\n            af_atom() |\n            af_bitstring_type() |\n            af_constrained_function_type() |\n            af_empty_list_type() |\n            af_fun_type() |\n            af_integer_range_type() |\n            af_map_type() |\n            af_predefined_type() |\n            af_record_type() |\n            af_remote_type() |\n            af_singleton_integer_type() |\n            af_tuple_type() |\n            af_type_union() |\n            af_type_variable() |\n            af_user_defined_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_field_type()",
                     "{atom, anno(), atom()} |\n          {type,\n           anno(),\n           field_type,\n           [{atom, anno(), atom()} |\n            af_annotated_type() |\n            af_atom() |\n            af_bitstring_type() |\n            af_constrained_function_type() |\n            af_empty_list_type() |\n            af_fun_type() |\n            af_integer_range_type() |\n            af_map_type() |\n            af_predefined_type() |\n            af_record_type() |\n            af_remote_type() |\n            af_singleton_integer_type() |\n            af_tuple_type() |\n            af_type_union() |\n            af_type_variable() |\n            af_user_defined_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), field_type, [af_atom() | abstract_type()]}",
                     "{atom, anno(), atom()}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-7-',4}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), field_type, [af_atom() | abstract_type()]}",
                     "{type,\n           anno(),\n           field_type,\n           [{atom, anno(), atom()} |\n            af_annotated_type() |\n            af_atom() |\n            af_bitstring_type() |\n            af_constrained_function_type() |\n            af_empty_list_type() |\n            af_fun_type() |\n            af_integer_range_type() |\n            af_map_type() |\n            af_predefined_type() |\n            af_record_type() |\n            af_remote_type() |\n            af_singleton_integer_type() |\n            af_tuple_type() |\n            af_type_union() |\n            af_type_variable() |\n            af_user_defined_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["field_type","field_type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["[af_atom() | abstract_type()]",
                     "[{atom, anno(), atom()} |\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable() |\n           af_user_defined_type()]",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-7-',4}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_binary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_unary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]}]}],
  {venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Name' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,field_type},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,ann_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,atom},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,atom,[]}]},
              {type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,remote_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,list,[{type,0,none,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,'fun'},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{type,0,union,
                   [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,char,[]}]},
                    {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {type,0,integer,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       binary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       unary_op,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,binary},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,map},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,nil},
                {type,0,nil,[]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,range},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_range_bound,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,record},
                {type,0,list,
                 [{type,0,union,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {atom,0,any}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,tuple},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {atom,0,union},
                {type,0,nonempty_list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,user_type},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 type_name,[]},
                {type,0,list,
                 [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   abstract_type,[]}]}]},
              {type,0,tuple,
               [{atom,0,var},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 gr_type_var,[]}]}]}]}]}]},
     'TypedFields' =>
      {type,0,union,
       [{type,0,list,
         [{type,0,union,
           [{type,0,tuple,
             [{atom,0,atom},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {type,0,atom,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
              {atom,0,field_type},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,atom},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,atom,[]}]},
                  {type,0,tuple,
                   [{atom,0,char},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,char,[]}]},
                  {type,0,tuple,
                   [{atom,0,integer},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,integer,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     binary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     unary_op,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]},
                  {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {type,0,list,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           abstract_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,list,[{type,0,none,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,'fun'},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{type,0,union,
                       [{type,0,tuple,
                         [{atom,0,char},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,char,[]}]},
                        {type,0,tuple,
                         [{atom,0,integer},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {type,0,integer,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           binary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                         [{atom,0,op},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           anno,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           unary_op,[]},
                          {user_type,
                           [{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]}]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,binary},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,map},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,nil},
                    {type,0,nil,[]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,range},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_range_bound,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,record},
                    {type,0,list,
                     [{type,0,union,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_field_type,[]}]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {atom,0,any}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,tuple},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {atom,0,union},
                    {type,0,nonempty_list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,user_type},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     type_name,[]},
                    {type,0,list,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]},
                  {type,0,tuple,
                   [{atom,0,var},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     anno,[]},
                    {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_type_var,[]}]}]}]}]}]}]},
        {type,0,nil,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,atom},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {type,0,atom,[]}]},
         {type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           {atom,0,field_type},
           {type,0,list,
            [{type,0,union,
              [{type,0,tuple,
                [{atom,0,ann_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_anno,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,atom},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,atom,[]}]},
               {type,0,tuple,
                [{atom,0,char},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,char,[]}]},
               {type,0,tuple,
                [{atom,0,integer},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,integer,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  binary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,op},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  unary_op,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}]},
               {type,0,tuple,
                [{atom,0,remote_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {type,0,list,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_binary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_character,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_unary_op,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_integer,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,list,[{type,0,none,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,'fun'},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{type,0,union,
                    [{type,0,tuple,
                      [{atom,0,char},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,char,[]}]},
                     {type,0,tuple,
                      [{atom,0,integer},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {type,0,integer,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
                     {type,0,tuple,
                      [{atom,0,op},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_annotated_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_bitstring_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_constrained_function_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_empty_list_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_fun_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_integer_range_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_map_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_predefined_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_remote_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_tuple_type,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_union,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_type_variable,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_user_defined_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,binary},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,map},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,nil},
                 {type,0,nil,[]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,range},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_range_bound,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,record},
                 {type,0,list,
                  [{type,0,union,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_atom,[]},
                     {user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_record_field_type,[]}]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {atom,0,any}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,tuple},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {atom,0,union},
                 {type,0,nonempty_list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,user_type},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  type_name,[]},
                 {type,0,list,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]},
               {type,0,tuple,
                [{atom,0,var},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  anno,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_type_var,[]}]}]}]}]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_21" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_20" => true,"B_typechecker_3529_21" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, field_type, [FName, FTy]}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {132,1},
             [{tuple,
                  {132,12},
                  [{atom,{132,13},type},
                   {var,{132,19},'_'},
                   {atom,{132,22},field_type},
                   {cons,
                       {132,34},
                       {var,{132,35},'FName'},
                       {cons,{132,42},{var,{132,42},'FTy'},{nil,{132,45}}}}]}],
             [],
             [{tuple,
                  {133,5},
                  [{atom,{133,6},type},
                   {call,
                       {133,12},
                       {remote,
                           {133,20},
                           {atom,{133,12},erl_anno},
                           {atom,{133,21},new}},
                       [{integer,{133,25},0}]},
                   {atom,{133,29},field_type},
                   {cons,
                       {133,41},
                       {call,
                           {133,42},
                           {atom,{133,42},remove_pos},
                           [{var,{133,53},'FName'}]},
                       {cons,
                           {133,61},
                           {call,
                               {133,61},
                               {atom,{133,61},remove_pos},
                               [{var,{133,72},'FTy'}]},
                           {nil,{133,76}}}}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {133,12},
             {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
             [{integer,{133,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{133,25},0}],
         {{133,12},
          {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {133,12},
             {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
             [{integer,{133,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{133,25},0}],
         {{133,12},
          {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {133,12},
             {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
             [{integer,{133,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{133,25},0}],
         {{133,12},
          {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {133,12},
             {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
             [{integer,{133,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{133,25},0}],
         {{133,12},
          {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {133,12},
             {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
             [{integer,{133,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{133,25},0}],
         {{133,12},
          {remote,{133,20},{atom,{133,12},erl_anno},{atom,{133,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,42},{atom,{133,42},remove_pos},[{var,{133,53},'FName'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{user_type,0,af_constraint,[]}],
                  {user_type,0,af_constraint,[]},
                  {constraints,#{},#{},#{}}},
              {fun_ty,
                  [{user_type,0,type,[]}],
                  {user_type,0,type,[]},
                  {constraints,#{},#{},#{}}}],
             {constraints,#{},#{},#{}}},
         [{var,{133,53},'FName'}],
         {{133,42},
          {atom,{133,42},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,42},{atom,{133,42},remove_pos},[{var,{133,53},'FName'}]},
         [{fun_ty,
              [{user_type,0,af_constraint,[]}],
              {user_type,0,af_constraint,[]},
              {constraints,#{},#{},#{}}},
          {fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{133,53},'FName'}],
         {{133,42},
          {atom,{133,42},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,42},{atom,{133,42},remove_pos},[{var,{133,53},'FName'}]},
         {fun_ty,
             [{user_type,0,af_constraint,[]}],
             {user_type,0,af_constraint,[]},
             {constraints,#{},#{},#{}}},
         [{var,{133,53},'FName'}],
         {{133,42},
          {atom,{133,42},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{133,53},'FName'},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]},
            {user_type,0,af_constraint,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,42},{atom,{133,42},remove_pos},[{var,{133,53},'FName'}]},
         [{fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{133,53},'FName'}],
         {{133,42},
          {atom,{133,42},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,42},{atom,{133,42},remove_pos},[{var,{133,53},'FName'}]},
         {fun_ty,
             [{user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{133,53},'FName'}],
         {{133,42},
          {atom,{133,42},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call_intersection_,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call_intersection_,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,61},{atom,{133,61},remove_pos},[{var,{133,72},'FTy'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{user_type,0,af_constraint,[]}],
                  {user_type,0,af_constraint,[]},
                  {constraints,#{},#{},#{}}},
              {fun_ty,
                  [{user_type,0,type,[]}],
                  {user_type,0,type,[]},
                  {constraints,#{},#{},#{}}}],
             {constraints,#{},#{},#{}}},
         [{var,{133,72},'FTy'}],
         {{133,61},
          {atom,{133,61},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,61},{atom,{133,61},remove_pos},[{var,{133,72},'FTy'}]},
         [{fun_ty,
              [{user_type,0,af_constraint,[]}],
              {user_type,0,af_constraint,[]},
              {constraints,#{},#{},#{}}},
          {fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{133,72},'FTy'}],
         {{133,61},
          {atom,{133,61},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,61},{atom,{133,61},remove_pos},[{var,{133,72},'FTy'}]},
         {fun_ty,
             [{user_type,0,af_constraint,[]}],
             {user_type,0,af_constraint,[]},
             {constraints,#{},#{},#{}}},
         [{var,{133,72},'FTy'}],
         {{133,61},
          {atom,{133,61},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{133,72},'FTy'},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]},
            {user_type,0,af_constraint,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,61},{atom,{133,61},remove_pos},[{var,{133,72},'FTy'}]},
         [{fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{133,72},'FTy'}],
         {{133,61},
          {atom,{133,61},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'FName' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'FTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,{133,61},{atom,{133,61},remove_pos},[{var,{133,72},'FTy'}]},
         {fun_ty,
             [{user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{133,72},'FTy'}],
         {{133,61},
          {atom,{133,61},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call_intersection_,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call_intersection_,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'FName' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'FTy' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{type, anno(), field_type, none()}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), field_type, none()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), field_type, none()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{type, anno(), field_type, none()}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["union","field_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{type, anno(), field_type, none()}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), field_type, none()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","field_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), field_type, none()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","field_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{type, anno(), field_type, none()}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{type, anno(), field_type, none()}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["record","field_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{type, anno(), field_type, none()}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["type_name()","field_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}],
     {venv,
         #{'FName' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]},
           'FTy' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, tuple = Type, any}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {135,1},
             [{tuple,
                  {135,12},
                  [{atom,{135,13},type},
                   {var,{135,19},'_'},
                   {match,
                       {135,22},
                       {atom,{135,22},tuple},
                       {var,{135,30},'Type'}},
                   {atom,{135,36},any}]}],
             [],
             [{tuple,
                  {136,5},
                  [{atom,{136,6},type},
                   {call,
                       {136,12},
                       {remote,
                           {136,20},
                           {atom,{136,12},erl_anno},
                           {atom,{136,21},new}},
                       [{integer,{136,25},0}]},
                   {var,{136,29},'Type'},
                   {atom,{136,35},any}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,tuple}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {136,12},
             {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
             [{integer,{136,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{136,25},0}],
         {{136,12},
          {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,tuple}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,tuple}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {136,12},
             {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
             [{integer,{136,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{136,25},0}],
         {{136,12},
          {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,tuple}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,tuple}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {136,12},
             {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
             [{integer,{136,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{136,25},0}],
         {{136,12},
          {remote,{136,20},{atom,{136,12},erl_anno},{atom,{136,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,tuple}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{type, anno(), tuple, any}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), tuple, any}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), tuple, any}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{type, anno(), tuple, any}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["union","tuple",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{type, anno(), tuple, any}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), tuple, any}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","tuple",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["[abstract_type()]","any",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), tuple, any}",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,
             [{atom,0,type},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
              {atom,0,tuple},
              {type,0,list,
                    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                abstract_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{type, anno(), tuple, any}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{type, anno(), tuple, any}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["record","tuple",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{type, anno(), tuple, any}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["type_name()","tuple",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}],
     {venv,#{'Type' => {atom,0,tuple}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, map = Type, any}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {137,1},
             [{tuple,
                  {137,12},
                  [{atom,{137,13},type},
                   {var,{137,19},'_'},
                   {match,{137,22},{atom,{137,22},map},{var,{137,28},'Type'}},
                   {atom,{137,34},any}]}],
             [],
             [{tuple,
                  {138,5},
                  [{atom,{138,6},type},
                   {call,
                       {138,12},
                       {remote,
                           {138,20},
                           {atom,{138,12},erl_anno},
                           {atom,{138,21},new}},
                       [{integer,{138,25},0}]},
                   {var,{138,29},'Type'},
                   {atom,{138,35},any}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Type' => {atom,0,map}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {138,12},
             {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
             [{integer,{138,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{138,25},0}],
         {{138,12},
          {remote,{138,20},{atom,{138,12},erl_anno},{atom,{138,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Type' => {atom,0,map}}},{constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{type, anno(), map, any}}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["union","map",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","map",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}","{type, anno(), map, any}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["tuple","map",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{type, anno(), map, any}",seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["record","map",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{type, anno(), map, any}",seen,
                     env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["type_name()","map",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}],
     {venv,#{'Type' => {atom,0,map}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, Type, Params}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,check_clause,
  [{venv,#{}},
   [{type,0,union,
     [{user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_annotated_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_binary_op,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_singleton_integer_type,[]}]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_bitstring_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_constrained_function_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_empty_list_type,[]},
      {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_integer_range_type,[]},
      {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_predefined_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_record_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_remote_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_tuple_type,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_type_union,[]},
      {user_type,
       [{file,"gradualizer_type.erl"},{location,0}],
       af_unary_op,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         af_singleton_integer_type,[]}]}]}],
   {user_type,0,type,[]},
   {clause,
    {140,1},
    [{tuple,
      {140,12},
      [{atom,{140,13},type},
       {var,{140,19},'_'},
       {var,{140,22},'Type'},
       {var,{140,28},'Params'}]}],
    [],
    [{tuple,
      {141,5},
      [{atom,{141,6},type},
       {call,
        {141,12},
        {remote,{141,20},{atom,{141,12},erl_anno},{atom,{141,21},new}},
        [{integer,{141,25},0}]},
       {var,{141,29},'Type'},
       {call,
        {141,35},
        {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
        [{'fun',
          {141,45},
          {clauses,
           [{clause,
             {142,49},
             [{tuple,
               {142,50},
               [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
             [],
             [{tuple,
               {143,53},
               [{atom,{143,54},type},
                {call,
                 {143,60},
                 {remote,
                  {143,68},
                  {atom,{143,60},erl_anno},
                  {atom,{143,69},new}},
                 [{integer,{143,73},0}]},
                {atom,{143,77},any}]}]},
            {clause,
             {144,49},
             [{var,{144,50},'P'}],
             [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
             [{call,
               {145,53},
               {atom,{145,53},remove_pos_all},
               [{var,{145,68},'P'}]}]},
            {clause,
             {146,49},
             [{var,{146,50},'P'}],
             [],
             [{call,
               {147,53},
               {atom,{147,53},remove_pos},
               [{var,{147,64},'P'}]}]}]}},
         {var,{148,50},'Params'}]}]}]},
   bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {141,12},
             {remote,{141,20},{atom,{141,12},erl_anno},{atom,{141,21},new}},
             [{integer,{141,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{141,25},0}],
         {{141,12},
          {remote,{141,20},{atom,{141,12},erl_anno},{atom,{141,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
   {type,0,nonempty_list,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      abstract_type,[]}]},
   {call,
    {141,35},
    {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
    [{'fun',
      {141,45},
      {clauses,
       [{clause,
         {142,49},
         [{tuple,
           {142,50},
           [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
         [],
         [{tuple,
           {143,53},
           [{atom,{143,54},type},
            {call,
             {143,60},
             {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
             [{integer,{143,73},0}]},
            {atom,{143,77},any}]}]},
        {clause,
         {144,49},
         [{var,{144,50},'P'}],
         [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
         [{call,
           {145,53},
           {atom,{145,53},remove_pos_all},
           [{var,{145,68},'P'}]}]},
        {clause,
         {146,49},
         [{var,{146,50},'P'}],
         [],
         [{call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]}]}]}},
     {var,{148,50},'Params'}]},
   {fun_ty_intersection,
    [{fun_ty,
      [{type,0,'fun',
        [{type,0,product,[{var,0,"A_typechecker_3529_22"}]},
         {var,0,"B_typechecker_3529_23"}]},
       {type,0,nonempty_list,[{var,0,"A_typechecker_3529_22"}]}],
      {type,0,nonempty_list,[{var,0,"B_typechecker_3529_23"}]},
      {constraints,#{},#{},
       #{"A_typechecker_3529_22" => true,"B_typechecker_3529_23" => true}}},
     {fun_ty,
      [{type,0,'fun',
        [{type,0,product,[{var,0,"A_typechecker_3529_24"}]},
         {var,0,"B_typechecker_3529_25"}]},
       {type,0,list,[{var,0,"A_typechecker_3529_24"}]}],
      {type,0,list,[{var,0,"B_typechecker_3529_25"}]},
      {constraints,#{},#{},
       #{"A_typechecker_3529_24" => true,"B_typechecker_3529_25" => true}}}],
    {constraints,#{},#{},#{}}},
   [{'fun',
     {141,45},
     {clauses,
      [{clause,
        {142,49},
        [{tuple,
          {142,50},
          [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
        [],
        [{tuple,
          {143,53},
          [{atom,{143,54},type},
           {call,
            {143,60},
            {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
            [{integer,{143,73},0}]},
           {atom,{143,77},any}]}]},
       {clause,
        {144,49},
        [{var,{144,50},'P'}],
        [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
        [{call,{145,53},{atom,{145,53},remove_pos_all},[{var,{145,68},'P'}]}]},
       {clause,
        {146,49},
        [{var,{146,50},'P'}],
        [],
        [{call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]}]}]}},
    {var,{148,50},'Params'}],
   {{141,35},
    {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call_intersection_,
  [{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
   {type,0,nonempty_list,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      abstract_type,[]}]},
   {call,
    {141,35},
    {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
    [{'fun',
      {141,45},
      {clauses,
       [{clause,
         {142,49},
         [{tuple,
           {142,50},
           [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
         [],
         [{tuple,
           {143,53},
           [{atom,{143,54},type},
            {call,
             {143,60},
             {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
             [{integer,{143,73},0}]},
            {atom,{143,77},any}]}]},
        {clause,
         {144,49},
         [{var,{144,50},'P'}],
         [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
         [{call,
           {145,53},
           {atom,{145,53},remove_pos_all},
           [{var,{145,68},'P'}]}]},
        {clause,
         {146,49},
         [{var,{146,50},'P'}],
         [],
         [{call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]}]}]}},
     {var,{148,50},'Params'}]},
   [{fun_ty,
     [{type,0,'fun',
       [{type,0,product,[{var,0,"A_typechecker_3529_22"}]},
        {var,0,"B_typechecker_3529_23"}]},
      {type,0,nonempty_list,[{var,0,"A_typechecker_3529_22"}]}],
     {type,0,nonempty_list,[{var,0,"B_typechecker_3529_23"}]},
     {constraints,#{},#{},
      #{"A_typechecker_3529_22" => true,"B_typechecker_3529_23" => true}}},
    {fun_ty,
     [{type,0,'fun',
       [{type,0,product,[{var,0,"A_typechecker_3529_24"}]},
        {var,0,"B_typechecker_3529_25"}]},
      {type,0,list,[{var,0,"A_typechecker_3529_24"}]}],
     {type,0,list,[{var,0,"B_typechecker_3529_25"}]},
     {constraints,#{},#{},
      #{"A_typechecker_3529_24" => true,"B_typechecker_3529_25" => true}}}],
   [{'fun',
     {141,45},
     {clauses,
      [{clause,
        {142,49},
        [{tuple,
          {142,50},
          [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
        [],
        [{tuple,
          {143,53},
          [{atom,{143,54},type},
           {call,
            {143,60},
            {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
            [{integer,{143,73},0}]},
           {atom,{143,77},any}]}]},
       {clause,
        {144,49},
        [{var,{144,50},'P'}],
        [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
        [{call,{145,53},{atom,{145,53},remove_pos_all},[{var,{145,68},'P'}]}]},
       {clause,
        {146,49},
        [{var,{146,50},'P'}],
        [],
        [{call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]}]}]}},
    {var,{148,50},'Params'}],
   {{141,35},
    {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
   {type,0,nonempty_list,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      abstract_type,[]}]},
   {call,
    {141,35},
    {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
    [{'fun',
      {141,45},
      {clauses,
       [{clause,
         {142,49},
         [{tuple,
           {142,50},
           [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
         [],
         [{tuple,
           {143,53},
           [{atom,{143,54},type},
            {call,
             {143,60},
             {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
             [{integer,{143,73},0}]},
            {atom,{143,77},any}]}]},
        {clause,
         {144,49},
         [{var,{144,50},'P'}],
         [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
         [{call,
           {145,53},
           {atom,{145,53},remove_pos_all},
           [{var,{145,68},'P'}]}]},
        {clause,
         {146,49},
         [{var,{146,50},'P'}],
         [],
         [{call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]}]}]}},
     {var,{148,50},'Params'}]},
   {fun_ty,
    [{type,0,'fun',
      [{type,0,product,[{var,0,"A_typechecker_3529_22"}]},
       {var,0,"B_typechecker_3529_23"}]},
     {type,0,nonempty_list,[{var,0,"A_typechecker_3529_22"}]}],
    {type,0,nonempty_list,[{var,0,"B_typechecker_3529_23"}]},
    {constraints,#{},#{},
     #{"A_typechecker_3529_22" => true,"B_typechecker_3529_23" => true}}},
   [{'fun',
     {141,45},
     {clauses,
      [{clause,
        {142,49},
        [{tuple,
          {142,50},
          [{atom,{142,51},type},{var,{142,57},'_'},{atom,{142,60},any}]}],
        [],
        [{tuple,
          {143,53},
          [{atom,{143,54},type},
           {call,
            {143,60},
            {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
            [{integer,{143,73},0}]},
           {atom,{143,77},any}]}]},
       {clause,
        {144,49},
        [{var,{144,50},'P'}],
        [[{call,{144,58},{atom,{144,58},is_list},[{var,{144,66},'P'}]}]],
        [{call,{145,53},{atom,{145,53},remove_pos_all},[{var,{145,68},'P'}]}]},
       {clause,
        {146,49},
        [{var,{146,50},'P'}],
        [],
        [{call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]}]}]}},
    {var,{148,50},'Params'}],
   {{141,35},
    {remote,{141,40},{atom,{141,35},lists},{atom,{141,41},map}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,nonempty_list,[{var,0,'A'}]}]},
         {type,0,nonempty_list,[{var,0,'B'}]}]},
       []]},
     {type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,
          [{type,0,'fun',[{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
           {type,0,list,[{var,0,'A'}]}]},
         {type,0,list,[{var,0,'B'}]}]},
       []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
         [{var,0,"A_typechecker_3529_22"}],
         {var,0,"B_typechecker_3529_23"},
         {clause,
             {142,49},
             [{tuple,
                  {142,50},
                  [{atom,{142,51},type},
                   {var,{142,57},'_'},
                   {atom,{142,60},any}]}],
             [],
             [{tuple,
                  {143,53},
                  [{atom,{143,54},type},
                   {call,
                       {143,60},
                       {remote,
                           {143,68},
                           {atom,{143,60},erl_anno},
                           {atom,{143,69},new}},
                       [{integer,{143,73},0}]},
                   {atom,{143,77},any}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
         {var,0,"B_typechecker_3529_23_typechecker_1257_30"},
         {call,
             {143,60},
             {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
             [{integer,{143,73},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{143,73},0}],
         {{143,60},
          {remote,{143,68},{atom,{143,60},erl_anno},{atom,{143,69},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
     {constraints,
         #{"B_typechecker_3529_23_typechecker_1257_30" =>
               [{user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}]},
         #{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{A_typechecker_3529_22}",
                     "{{type, A_typechecker_3529_22_typechecker_1257_27, any}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["A_typechecker_3529_22",
                     "{type, A_typechecker_3529_22_typechecker_1257_27, any}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{var,0,"A_typechecker_3529_22"}],
     {venv,#{'Params' => {type,0,none,[]},'Type' => {type,0,none,[]}}},
     {constraints,
         #{"A_typechecker_3529_22_typechecker_1257_26" => [{atom,0,type}],
           "A_typechecker_3529_22_typechecker_1257_28" => [{atom,0,any}],
           "B_typechecker_3529_23_typechecker_1257_29" => [{atom,0,type}],
           "B_typechecker_3529_23_typechecker_1257_30" =>
               [{user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
           "B_typechecker_3529_23_typechecker_1257_31" => [{atom,0,any}]},
         #{"A_typechecker_3529_22" =>
               [{type,0,tuple,
                    [{var,0,"A_typechecker_3529_22_typechecker_1257_26"},
                     {var,0,"A_typechecker_3529_22_typechecker_1257_27"},
                     {var,0,"A_typechecker_3529_22_typechecker_1257_28"}]}],
           "B_typechecker_3529_23" =>
               [{type,0,tuple,
                    [{var,0,"B_typechecker_3529_23_typechecker_1257_29"},
                     {var,0,"B_typechecker_3529_23_typechecker_1257_30"},
                     {var,0,"B_typechecker_3529_23_typechecker_1257_31"}]}]},
         #{"A_typechecker_3529_22_typechecker_1257_26" => true,
           "A_typechecker_3529_22_typechecker_1257_27" => true,
           "A_typechecker_3529_22_typechecker_1257_28" => true,
           "B_typechecker_3529_23_typechecker_1257_29" => true,
           "B_typechecker_3529_23_typechecker_1257_30" => true,
           "B_typechecker_3529_23_typechecker_1257_31" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.95.0>,call,
       {typechecker,check_clause,
                    [{venv,#{'Params' => {type,0,none,[]},
                             'Type' => {type,0,none,[]}}},
                     [{var,0,"A_typechecker_3529_22"}],
                     {var,0,"B_typechecker_3529_23"},
                     {clause,{144,49},
                             [{var,{144,50},'P'}],
                             [[{call,{144,58},
                                     {atom,{144,58},is_list},
                                     [{var,{144,66},'P'}]}]],
                             [{call,{145,53},
                                    {atom,{145,53},remove_pos_all},
                                    [{var,{145,68},'P'}]}]},
                     bind_vars]}}
{trace,<0.95.0>,call,
       {typechecker,type_check_call,
                    [{venv,#{'P' =>
                                 {var,0,
                                      "A_typechecker_3529_22_typechecker_617_33"},
                             'Params' => {type,0,none,[]},
                             'Type' => {type,0,none,[]}}},
                     {var,0,"B_typechecker_3529_23"},
                     {call,{145,53},
                           {atom,{145,53},remove_pos_all},
                           [{var,{145,68},'P'}]},
                     {fun_ty,[{type,0,list,[]}],
                             {type,0,list,[]},
                             {constraints,#{},#{},#{}}},
                     [{var,{145,68},'P'}],
                     {{145,53},
                      {atom,{145,53},remove_pos_all},
                      [{type,0,bounded_fun,
                             [{type,0,'fun',
                                    [{type,0,product,[{type,0,list,[]}]},
                                     {type,0,list,[]}]},
                              []]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'P' => {var,0,"A_typechecker_3529_22_typechecker_617_33"},
                'Params' => {type,0,none,[]},
                'Type' => {type,0,none,[]}}},
        {constraints,#{"B_typechecker_3529_23" =>
                           [{type,0,list,[{type,0,any,[]}]}]},
                     #{"A_typechecker_3529_22_typechecker_617_33" =>
                           [{type,0,list,[{type,0,any,[]}]}]},
                     #{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["A_typechecker_3529_22","[any()]",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
       {typechecker,check_clause,5},
       {[{var,0,"A_typechecker_3529_22"}],
        {venv,#{'P' =>
                    {var,0,
                         "A_typechecker_3529_22_typechecker_617_33_typechecker_623_34_typechecker_617_35"},
                'Params' => {type,0,none,[]},
                'Type' => {type,0,none,[]}}},
        {constraints,#{"B_typechecker_3529_23" =>
                           [{type,0,list,[{type,0,any,[]}]}]},
                     #{"A_typechecker_3529_22_typechecker_617_33" =>
                           [{type,0,list,[{type,0,any,[]}]}]},
                     #{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.95.0>,call,
       {typechecker,check_clause,
                    [{venv,#{'Params' => {type,0,none,[]},
                             'Type' => {type,0,none,[]}}},
                     [{var,0,"A_typechecker_3529_22"}],
                     {var,0,"B_typechecker_3529_23"},
                     {clause,{146,49},
                             [{var,{146,50},'P'}],
                             [],
                             [{call,{147,53},
                                    {atom,{147,53},remove_pos},
                                    [{var,{147,64},'P'}]}]},
                     bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'P' => {var,0,"A_typechecker_3529_22"},
               'Params' => {type,0,none,[]},
               'Type' => {type,0,none,[]}}},
         {var,0,"B_typechecker_3529_23"},
         {call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{user_type,0,af_constraint,[]}],
                  {user_type,0,af_constraint,[]},
                  {constraints,#{},#{},#{}}},
              {fun_ty,
                  [{user_type,0,type,[]}],
                  {user_type,0,type,[]},
                  {constraints,#{},#{},#{}}}],
             {constraints,#{},#{},#{}}},
         [{var,{147,64},'P'}],
         {{147,53},
          {atom,{147,53},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'P' => {var,0,"A_typechecker_3529_22"},
               'Params' => {type,0,none,[]},
               'Type' => {type,0,none,[]}}},
         {var,0,"B_typechecker_3529_23"},
         {call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]},
         [{fun_ty,
              [{user_type,0,af_constraint,[]}],
              {user_type,0,af_constraint,[]},
              {constraints,#{},#{},#{}}},
          {fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{147,64},'P'}],
         {{147,53},
          {atom,{147,53},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'P' => {var,0,"A_typechecker_3529_22"},
               'Params' => {type,0,none,[]},
               'Type' => {type,0,none,[]}}},
         {var,0,"B_typechecker_3529_23"},
         {call,{147,53},{atom,{147,53},remove_pos},[{var,{147,64},'P'}]},
         {fun_ty,
             [{user_type,0,af_constraint,[]}],
             {user_type,0,af_constraint,[]},
             {constraints,#{},#{},#{}}},
         [{var,{147,64},'P'}],
         {{147,53},
          {atom,{147,53},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'P' => {var,0,"A_typechecker_3529_22"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'P' => {var,0,"A_typechecker_3529_22"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'P' => {var,0,"A_typechecker_3529_22"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{A_typechecker_3529_22}","{A_typechecker_3529_22}",seen,
                     env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,none,[]}],
  {venv,
   #{'P' => {var,0,"A_typechecker_3529_22"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]}]},
   #{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'P' => {var,0,"A_typechecker_3529_22_typechecker_617_36"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"A_typechecker_3529_22_typechecker_1257_26" => [{atom,0,type}],
     "A_typechecker_3529_22_typechecker_1257_28" => [{atom,0,any}],
     "B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23_typechecker_1257_29" => [{atom,0,type}],
     "B_typechecker_3529_23_typechecker_1257_30" =>
      [{user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
     "B_typechecker_3529_23_typechecker_1257_31" => [{atom,0,any}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {type,0,tuple,
          [{var,0,"A_typechecker_3529_22_typechecker_1257_26"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_27"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_28"}]}]}],
     "A_typechecker_3529_22_typechecker_617_33" =>
      [{type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]},
       {type,0,tuple,
        [{var,0,"B_typechecker_3529_23_typechecker_1257_29"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_30"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_31"}]}]},
   #{"A_typechecker_3529_22" => true,
     "A_typechecker_3529_22_typechecker_1257_26" => true,
     "A_typechecker_3529_22_typechecker_1257_27" => true,
     "A_typechecker_3529_22_typechecker_1257_28" => true,
     "B_typechecker_3529_23" => true,
     "B_typechecker_3529_23_typechecker_1257_29" => true,
     "B_typechecker_3529_23_typechecker_1257_30" => true,
     "B_typechecker_3529_23_typechecker_1257_31" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'P' => {var,0,"A_typechecker_3529_22_typechecker_617_36"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"A_typechecker_3529_22_typechecker_1257_26" => [{atom,0,type}],
     "A_typechecker_3529_22_typechecker_1257_28" => [{atom,0,any}],
     "B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23_typechecker_1257_29" => [{atom,0,type}],
     "B_typechecker_3529_23_typechecker_1257_30" =>
      [{user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
     "B_typechecker_3529_23_typechecker_1257_31" => [{atom,0,any}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {type,0,tuple,
          [{var,0,"A_typechecker_3529_22_typechecker_1257_26"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_27"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_28"}]}]}],
     "A_typechecker_3529_22_typechecker_617_33" =>
      [{type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]},
       {type,0,tuple,
        [{var,0,"B_typechecker_3529_23_typechecker_1257_29"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_30"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_31"}]}]},
   #{"A_typechecker_3529_22" => true,
     "A_typechecker_3529_22_typechecker_1257_26" => true,
     "A_typechecker_3529_22_typechecker_1257_27" => true,
     "A_typechecker_3529_22_typechecker_1257_28" => true,
     "B_typechecker_3529_23" => true,
     "B_typechecker_3529_23_typechecker_1257_29" => true,
     "B_typechecker_3529_23_typechecker_1257_30" => true,
     "B_typechecker_3529_23_typechecker_1257_31" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'P' => {var,0,"A_typechecker_3529_22_typechecker_617_36"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"A_typechecker_3529_22_typechecker_1257_26" => [{atom,0,type}],
     "A_typechecker_3529_22_typechecker_1257_28" => [{atom,0,any}],
     "B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23_typechecker_1257_29" => [{atom,0,type}],
     "B_typechecker_3529_23_typechecker_1257_30" =>
      [{user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
     "B_typechecker_3529_23_typechecker_1257_31" => [{atom,0,any}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {type,0,tuple,
          [{var,0,"A_typechecker_3529_22_typechecker_1257_26"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_27"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_28"}]}]}],
     "A_typechecker_3529_22_typechecker_617_33" =>
      [{type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]},
       {type,0,tuple,
        [{var,0,"B_typechecker_3529_23_typechecker_1257_29"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_30"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_31"}]}]},
   #{"A_typechecker_3529_22" => true,
     "A_typechecker_3529_22_typechecker_1257_26" => true,
     "A_typechecker_3529_22_typechecker_1257_27" => true,
     "A_typechecker_3529_22_typechecker_1257_28" => true,
     "B_typechecker_3529_23" => true,
     "B_typechecker_3529_23_typechecker_1257_29" => true,
     "B_typechecker_3529_23_typechecker_1257_30" => true,
     "B_typechecker_3529_23_typechecker_1257_31" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{none()}",seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "none()",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_binary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_unary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]}]}],
  {venv,
   #{'P' => {var,0,"A_typechecker_3529_22_typechecker_617_36"},
     'Params' => {type,0,none,[]},
     'Type' => {type,0,none,[]}}},
  {constraints,
   #{"A_typechecker_3529_22_typechecker_1257_26" => [{atom,0,type}],
     "A_typechecker_3529_22_typechecker_1257_28" => [{atom,0,any}],
     "B_typechecker_3529_23" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23_typechecker_1257_29" => [{atom,0,type}],
     "B_typechecker_3529_23_typechecker_1257_30" =>
      [{user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
     "B_typechecker_3529_23_typechecker_1257_31" => [{atom,0,any}]},
   #{"A_typechecker_3529_22" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {type,0,tuple,
          [{var,0,"A_typechecker_3529_22_typechecker_1257_26"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_27"},
           {var,0,"A_typechecker_3529_22_typechecker_1257_28"}]}]}],
     "A_typechecker_3529_22_typechecker_617_33" =>
      [{type,0,list,[{type,0,any,[]}]}],
     "B_typechecker_3529_23" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]},
       {type,0,tuple,
        [{var,0,"B_typechecker_3529_23_typechecker_1257_29"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_30"},
         {var,0,"B_typechecker_3529_23_typechecker_1257_31"}]}]},
   #{"A_typechecker_3529_22" => true,
     "A_typechecker_3529_22_typechecker_1257_26" => true,
     "A_typechecker_3529_22_typechecker_1257_27" => true,
     "A_typechecker_3529_22_typechecker_1257_28" => true,
     "B_typechecker_3529_23" => true,
     "B_typechecker_3529_23_typechecker_1257_29" => true,
     "B_typechecker_3529_23_typechecker_1257_30" => true,
     "B_typechecker_3529_23_typechecker_1257_31" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, map_field_exact = Assoc, Tys}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {150,1},
             [{tuple,
                  {150,12},
                  [{atom,{150,13},type},
                   {var,{150,19},'_'},
                   {match,
                       {150,22},
                       {atom,{150,22},map_field_exact},
                       {var,{150,40},'Assoc'}},
                   {var,{150,47},'Tys'}]}],
             [],
             [{tuple,
                  {151,5},
                  [{atom,{151,6},type},
                   {call,
                       {151,12},
                       {remote,
                           {151,20},
                           {atom,{151,12},erl_anno},
                           {atom,{151,21},new}},
                       [{integer,{151,25},0}]},
                   {var,{151,29},'Assoc'},
                   {call,
                       {151,36},
                       {remote,
                           {151,41},
                           {atom,{151,36},lists},
                           {atom,{151,42},map}},
                       [{'fun',{151,46},{function,remove_pos,1}},
                        {var,{151,64},'Tys'}]}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {151,12},
             {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
             [{integer,{151,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{151,25},0}],
         {{151,12},
          {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_exact},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {151,12},
             {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
             [{integer,{151,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{151,25},0}],
         {{151,12},
          {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_exact},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {151,12},
             {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
             [{integer,{151,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{151,25},0}],
         {{151,12},
          {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_exact},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {151,12},
             {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
             [{integer,{151,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{151,25},0}],
         {{151,12},
          {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_exact},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {151,12},
             {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
             [{integer,{151,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{151,25},0}],
         {{151,12},
          {remote,{151,20},{atom,{151,12},erl_anno},{atom,{151,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_exact},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {151,36},
             {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
             [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_37"}]},
                        {var,0,"B_typechecker_3529_38"}]},
                   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_37"}]}],
                  {type,0,nonempty_list,[{var,0,"B_typechecker_3529_38"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_37" => true,
                        "B_typechecker_3529_38" => true}}},
              {fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_39"}]},
                        {var,0,"B_typechecker_3529_40"}]},
                   {type,0,list,[{var,0,"A_typechecker_3529_39"}]}],
                  {type,0,list,[{var,0,"B_typechecker_3529_40"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_39" => true,
                        "B_typechecker_3529_40" => true}}}],
             {constraints,#{},#{},#{}}},
         [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}],
         {{151,36},
          {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {151,36},
             {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
             [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_37"}]},
                    {var,0,"B_typechecker_3529_38"}]},
               {type,0,nonempty_list,[{var,0,"A_typechecker_3529_37"}]}],
              {type,0,nonempty_list,[{var,0,"B_typechecker_3529_38"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_37" => true,
                    "B_typechecker_3529_38" => true}}},
          {fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_39"}]},
                    {var,0,"B_typechecker_3529_40"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_39"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_40"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_39" => true,
                    "B_typechecker_3529_40" => true}}}],
         [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}],
         {{151,36},
          {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {151,36},
             {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
             [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_37"}]},
                   {var,0,"B_typechecker_3529_38"}]},
              {type,0,nonempty_list,[{var,0,"A_typechecker_3529_37"}]}],
             {type,0,nonempty_list,[{var,0,"B_typechecker_3529_38"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_37" => true,
                   "B_typechecker_3529_38" => true}}},
         [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}],
         {{151,36},
          {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{151,64},'Tys'},
            {type,0,list,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]},
            {type,0,nonempty_list,[{var,0,"A_typechecker_3529_37"}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {151,36},
             {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
             [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_39"}]},
                    {var,0,"B_typechecker_3529_40"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_39"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_40"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_39" => true,
                    "B_typechecker_3529_40" => true}}}],
         [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}],
         {{151,36},
          {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_exact},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {151,36},
             {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
             [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_39"}]},
                   {var,0,"B_typechecker_3529_40"}]},
              {type,0,list,[{var,0,"A_typechecker_3529_39"}]}],
             {type,0,list,[{var,0,"B_typechecker_3529_40"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_39" => true,
                   "B_typechecker_3529_40" => true}}},
         [{'fun',{151,46},{function,remove_pos,1}},{var,{151,64},'Tys'}],
         {{151,36},
          {remote,{151,41},{atom,{151,36},lists},{atom,{151,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_exact},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" => true,"B_typechecker_3529_40" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_exact},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" => true,"B_typechecker_3529_40" => true}}}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_exact},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" => true,"B_typechecker_3529_40" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_exact},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" => true,"B_typechecker_3529_40" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{type, anno(), map_field_exact, [abstract_type()]}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["union","map_field_exact",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["tuple","map_field_exact",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["tuple","map_field_exact",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["record","map_field_exact",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{type, anno(), map_field_exact, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["type_name()","map_field_exact",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_binary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_unary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]}]}],
  {venv,
   #{'Assoc' => {atom,0,map_field_exact},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_40" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_39" => true,"B_typechecker_3529_40" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, map_field_assoc = Assoc, Tys}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {152,1},
             [{tuple,
                  {152,12},
                  [{atom,{152,13},type},
                   {var,{152,19},'_'},
                   {match,
                       {152,22},
                       {atom,{152,22},map_field_assoc},
                       {var,{152,40},'Assoc'}},
                   {var,{152,47},'Tys'}]}],
             [],
             [{tuple,
                  {153,5},
                  [{atom,{153,6},type},
                   {call,
                       {153,12},
                       {remote,
                           {153,20},
                           {atom,{153,12},erl_anno},
                           {atom,{153,21},new}},
                       [{integer,{153,25},0}]},
                   {var,{153,29},'Assoc'},
                   {call,
                       {153,36},
                       {remote,
                           {153,41},
                           {atom,{153,36},lists},
                           {atom,{153,42},map}},
                       [{'fun',{153,46},{function,remove_pos,1}},
                        {var,{153,64},'Tys'}]}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {153,12},
             {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
             [{integer,{153,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{153,25},0}],
         {{153,12},
          {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_assoc},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {153,12},
             {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
             [{integer,{153,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{153,25},0}],
         {{153,12},
          {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_assoc},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {153,12},
             {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
             [{integer,{153,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{153,25},0}],
         {{153,12},
          {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_assoc},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {153,12},
             {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
             [{integer,{153,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{153,25},0}],
         {{153,12},
          {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_assoc},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {153,12},
             {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
             [{integer,{153,25},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{153,25},0}],
         {{153,12},
          {remote,{153,20},{atom,{153,12},erl_anno},{atom,{153,21},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Assoc' => {atom,0,map_field_assoc},
                'Tys' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {153,36},
             {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
             [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_41"}]},
                        {var,0,"B_typechecker_3529_42"}]},
                   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_41"}]}],
                  {type,0,nonempty_list,[{var,0,"B_typechecker_3529_42"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_41" => true,
                        "B_typechecker_3529_42" => true}}},
              {fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_43"}]},
                        {var,0,"B_typechecker_3529_44"}]},
                   {type,0,list,[{var,0,"A_typechecker_3529_43"}]}],
                  {type,0,list,[{var,0,"B_typechecker_3529_44"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_43" => true,
                        "B_typechecker_3529_44" => true}}}],
             {constraints,#{},#{},#{}}},
         [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}],
         {{153,36},
          {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {153,36},
             {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
             [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_41"}]},
                    {var,0,"B_typechecker_3529_42"}]},
               {type,0,nonempty_list,[{var,0,"A_typechecker_3529_41"}]}],
              {type,0,nonempty_list,[{var,0,"B_typechecker_3529_42"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_41" => true,
                    "B_typechecker_3529_42" => true}}},
          {fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_43"}]},
                    {var,0,"B_typechecker_3529_44"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_43"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_44"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_43" => true,
                    "B_typechecker_3529_44" => true}}}],
         [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}],
         {{153,36},
          {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {153,36},
             {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
             [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_41"}]},
                   {var,0,"B_typechecker_3529_42"}]},
              {type,0,nonempty_list,[{var,0,"A_typechecker_3529_41"}]}],
             {type,0,nonempty_list,[{var,0,"B_typechecker_3529_42"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_41" => true,
                   "B_typechecker_3529_42" => true}}},
         [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}],
         {{153,36},
          {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{153,64},'Tys'},
            {type,0,list,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]},
            {type,0,nonempty_list,[{var,0,"A_typechecker_3529_41"}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {153,36},
             {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
             [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_43"}]},
                    {var,0,"B_typechecker_3529_44"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_43"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_44"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_43" => true,
                    "B_typechecker_3529_44" => true}}}],
         [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}],
         {{153,36},
          {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Assoc' => {atom,0,map_field_assoc},
               'Tys' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,list,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {153,36},
             {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
             [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_43"}]},
                   {var,0,"B_typechecker_3529_44"}]},
              {type,0,list,[{var,0,"A_typechecker_3529_43"}]}],
             {type,0,list,[{var,0,"B_typechecker_3529_44"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_43" => true,
                   "B_typechecker_3529_44" => true}}},
         [{'fun',{153,46},{function,remove_pos,1}},{var,{153,64},'Tys'}],
         {{153,36},
          {remote,{153,41},{atom,{153,36},lists},{atom,{153,42},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_assoc},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" => true,"B_typechecker_3529_44" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_assoc},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" => true,"B_typechecker_3529_44" => true}}}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_assoc},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" => true,"B_typechecker_3529_44" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.95.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Assoc' => {atom,0,map_field_assoc},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" => true,"B_typechecker_3529_44" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{type, anno(), map_field_assoc, [abstract_type()]}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["union","map_field_assoc",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["tuple","map_field_assoc",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["tuple","map_field_assoc",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["record","map_field_assoc",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{type, anno(), map_field_assoc, [abstract_type()]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,call,
       {typechecker,refine,["type_name()","map_field_assoc",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_binary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_unary_op,
      [{user_type,
        [{file,"gradualizer_type.erl"},{location,0}],
        af_singleton_integer_type,[]}]}]}],
  {venv,
   #{'Assoc' => {atom,0,map_field_assoc},
     'Tys' =>
      {type,0,list,
       [{user_type,
         [{file,"gradualizer_type.erl"},{location,0}],
         abstract_type,[]}]}}},
  {constraints,
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}],
     "B_typechecker_3529_44" =>
      [{type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_43" => true,"B_typechecker_3529_44" => true}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({remote_type, _, _} = RemoteType) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {155,1},
             [{match,
                  {155,12},
                  {tuple,
                      {155,12},
                      [{atom,{155,13},remote_type},
                       {var,{155,26},'_'},
                       {var,{155,29},'_'}]},
                  {var,{155,34},'RemoteType'}}],
             [],
             [{call,
                  {156,5},
                  {atom,{156,5},remove_pos_remote_type},
                  [{var,{156,28},'RemoteType'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'RemoteType' =>
       {type,0,tuple,
        [{atom,0,remote_type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_atom,[]},
             {user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_atom,[]},
             {type,0,list,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                abstract_type,[]}]}]}]}]}}},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_user_defined_type,[]}]},
   {call,
    {156,5},
    {atom,{156,5},remove_pos_remote_type},
    [{var,{156,28},'RemoteType'}]},
   {fun_ty,[{type,0,any,[]}],{type,0,any,[]},{constraints,#{},#{},#{}}},
   [{var,{156,28},'RemoteType'}],
   {{156,5},{atom,{156,5},remove_pos_remote_type},[{type,0,any,[]}]}]}}
{trace,<0.95.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'RemoteType' =>
               {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {type,0,list,
                        [{type,0,union,
                             [{user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  af_atom,[]},
                              {user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  af_atom,[]},
                              {type,0,list,
                                  [{user_type,
                                       [{file,"gradualizer_type.erl"},
                                        {location,0}],
                                       abstract_type,[]}]}]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{remote_type,\n            anno(),\n            [af_atom() | af_atom() | [abstract_type()]]}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "{remote_type,\n           anno(),\n           [af_atom() | af_atom() | [abstract_type()]]}",
                     seen,env]}}
{trace,<0.95.0>,call,{typechecker,refine,["ann_type","remote_type",seen,env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}],
     {venv,
         #{'RemoteType' =>
               {type,0,tuple,
                   [{atom,0,remote_type},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {type,0,list,
                        [{type,0,union,
                             [{user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  af_atom,[]},
                              {user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  af_atom,[]},
                              {type,0,list,
                                  [{user_type,
                                       [{file,"gradualizer_type.erl"},
                                        {location,0}],
                                       abstract_type,[]}]}]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({ann_type, _, _} = AnnType) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {157,1},
             [{match,
                  {157,12},
                  {tuple,
                      {157,12},
                      [{atom,{157,13},ann_type},
                       {var,{157,23},'_'},
                       {var,{157,26},'_'}]},
                  {var,{157,31},'AnnType'}}],
             [],
             [{call,
                  {158,5},
                  {atom,{158,5},remove_pos_ann_type},
                  [{var,{158,25},'AnnType'}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'AnnType' =>
                   {type,0,tuple,
                       [{atom,0,ann_type},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                        {type,0,list,
                            [{type,0,union,
                                 [{user_type,
                                      [{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_anno,[]},
                                  {user_type,
                                      [{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {158,5},
             {atom,{158,5},remove_pos_ann_type},
             [{var,{158,25},'AnnType'}]},
         {fun_ty,[{type,0,any,[]}],{type,0,any,[]},{constraints,#{},#{},#{}}},
         [{var,{158,25},'AnnType'}],
         {{158,5},{atom,{158,5},remove_pos_ann_type},[{type,0,any,[]}]}]}}
{trace,<0.95.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'AnnType' =>
               {type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {type,0,list,
                        [{type,0,union,
                             [{user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  af_anno,[]},
                              {user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  abstract_type,[]}]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_unary_op(af_singleton_integer_type())}",
                     "{{ann_type, anno(), [af_anno() | abstract_type()]}}",
                     seen,env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_unary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "{ann_type, anno(), [af_anno() | abstract_type()]}",seen,
                     env]}}
{trace,<0.95.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.95.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.95.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.95.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]}]}],
     {venv,
         #{'AnnType' =>
               {type,0,tuple,
                   [{atom,0,ann_type},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {type,0,list,
                        [{type,0,union,
                             [{user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  af_anno,[]},
                              {user_type,
                                  [{file,"gradualizer_type.erl"},{location,0}],
                                  abstract_type,[]}]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({op, _, Op, Type}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {159,1},
             [{tuple,
                  {159,12},
                  [{atom,{159,13},op},
                   {var,{159,17},'_'},
                   {var,{159,20},'Op'},
                   {var,{159,24},'Type'}]}],
             [],
             [{tuple,
                  {160,5},
                  [{atom,{160,6},op},
                   {call,
                       {160,10},
                       {remote,
                           {160,18},
                           {atom,{160,10},erl_anno},
                           {atom,{160,19},new}},
                       [{integer,{160,23},0}]},
                   {var,{160,27},'Op'},
                   {call,
                       {160,31},
                       {atom,{160,31},remove_pos},
                       [{var,{160,42},'Type'}]}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {160,10},
             {remote,{160,18},{atom,{160,10},erl_anno},{atom,{160,19},new}},
             [{integer,{160,23},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{160,23},0}],
         {{160,10},
          {remote,{160,18},{atom,{160,10},erl_anno},{atom,{160,19},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Op' =>
               {type,0,union,
                   [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]},
           'Type' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{user_type,0,af_constraint,[]}],
                  {user_type,0,af_constraint,[]},
                  {constraints,#{},#{},#{}}},
              {fun_ty,
                  [{user_type,0,type,[]}],
                  {user_type,0,type,[]},
                  {constraints,#{},#{},#{}}}],
             {constraints,#{},#{},#{}}},
         [{var,{160,42},'Type'}],
         {{160,31},
          {atom,{160,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
         [{fun_ty,
              [{user_type,0,af_constraint,[]}],
              {user_type,0,af_constraint,[]},
              {constraints,#{},#{},#{}}},
          {fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{160,42},'Type'}],
         {{160,31},
          {atom,{160,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
         {fun_ty,
             [{user_type,0,af_constraint,[]}],
             {user_type,0,af_constraint,[]},
             {constraints,#{},#{},#{}}},
         [{var,{160,42},'Type'}],
         {{160,31},
          {atom,{160,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{160,42},'Type'},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]},
            {user_type,0,af_constraint,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
         [{fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{160,42},'Type'}],
         {{160,31},
          {atom,{160,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
         {fun_ty,
             [{user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{160,42},'Type'}],
         {{160,31},
          {atom,{160,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
            {user_type,0,type,[]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'+'},
                        {atom,0,'-'},
                        {atom,0,'bnot'},
                        {atom,0,'not'}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{160,31},{atom,{160,31},remove_pos},[{var,{160,42},'Type'}]},
         [],
         [{var,{160,42},'Type'}],
         {{160,31},
          {atom,{160,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {160,31},
            {atom,{160,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {160,31},
            {atom,{160,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {160,31},
            {atom,{160,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,no_type_match_intersection,
            {160,31},
            {atom,{160,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,check_clause,5},
    {throw,
        {type_error,
            {tuple,
                {160,5},
                [{atom,{160,6},op},
                 {call,
                     {160,10},
                     {remote,
                         {160,18},
                         {atom,{160,10},erl_anno},
                         {atom,{160,19},new}},
                     [{integer,{160,23},0}]},
                 {var,{160,27},'Op'},
                 {call,
                     {160,31},
                     {atom,{160,31},remove_pos},
                     [{var,{160,42},'Type'}]}]},
            {type,0,tuple,
                [{atom,0,op},
                 {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                 {type,0,union,
                     [{atom,0,'+'},
                      {atom,0,'-'},
                      {atom,0,'bnot'},
                      {atom,0,'not'}]},
                 {user_type,0,type,[]}]},
            {user_type,0,type,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({op, _, Op, Type1, Type2}) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_unary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {161,1},
             [{tuple,
                  {161,12},
                  [{atom,{161,13},op},
                   {var,{161,17},'_'},
                   {var,{161,20},'Op'},
                   {var,{161,24},'Type1'},
                   {var,{161,31},'Type2'}]}],
             [],
             [{match,
                  {162,5},
                  {var,{162,5},'Type1'},
                  {call,
                      {162,14},
                      {atom,{162,14},':::'},
                      [{var,{162,26},'Type1'},{string,{162,26},"type ( )"}]}},
              {match,
                  {163,5},
                  {var,{163,5},'Type2'},
                  {call,
                      {163,14},
                      {atom,{163,14},':::'},
                      [{var,{163,26},'Type2'},{string,{163,26},"type ( )"}]}},
              {tuple,
                  {164,5},
                  [{atom,{164,6},op},
                   {call,
                       {164,10},
                       {remote,
                           {164,18},
                           {atom,{164,10},erl_anno},
                           {atom,{164,19},new}},
                       [{integer,{164,23},0}]},
                   {var,{164,27},'Op'},
                   {call,
                       {164,31},
                       {atom,{164,31},remove_pos},
                       [{var,{164,42},'Type1'}]},
                   {call,
                       {164,50},
                       {atom,{164,50},remove_pos},
                       [{var,{164,61},'Type2'}]}]}]},
         bind_vars]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {164,10},
             {remote,{164,18},{atom,{164,10},erl_anno},{atom,{164,19},new}},
             [{integer,{164,23},0}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,tuple,
                       [{user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            line,[]},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            column,[]}]},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],line,[]}]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{integer,{164,23},0}],
         {{164,10},
          {remote,{164,18},{atom,{164,10},erl_anno},{atom,{164,19},new}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Location'}]},
                     {user_type,
                         [{file,"erl_anno.erl"},{location,0}],
                         anno,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Location'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           location,[]}]]}]]}]}]}}
{trace,<0.95.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Op' =>
               {type,0,union,
                   [{atom,0,'*'},
                    {atom,0,'+'},
                    {atom,0,'++'},
                    {atom,0,'-'},
                    {atom,0,'--'},
                    {atom,0,'/'},
                    {atom,0,'/='},
                    {atom,0,'<'},
                    {atom,0,'=/='},
                    {atom,0,'=:='},
                    {atom,0,'=<'},
                    {atom,0,'=='},
                    {atom,0,'>'},
                    {atom,0,'>='},
                    {atom,0,'and'},
                    {atom,0,'band'},
                    {atom,0,'bor'},
                    {atom,0,'bsl'},
                    {atom,0,'bsr'},
                    {atom,0,'bxor'},
                    {atom,0,'div'},
                    {atom,0,'or'},
                    {atom,0,'rem'},
                    {atom,0,'xor'}]},
           'Type1' =>
               {type,0,union,
                   [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {type,0,char,[]}]},
                    {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {type,0,integer,[]}]},
                    {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             binary_op,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             unary_op,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]}]},
           'Type2' =>
               {type,0,union,
                   [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {type,0,char,[]}]},
                    {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {type,0,integer,[]}]},
                    {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             binary_op,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             anno,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             unary_op,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.95.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{user_type,0,af_constraint,[]}],
                  {user_type,0,af_constraint,[]},
                  {constraints,#{},#{},#{}}},
              {fun_ty,
                  [{user_type,0,type,[]}],
                  {user_type,0,type,[]},
                  {constraints,#{},#{},#{}}}],
             {constraints,#{},#{},#{}}},
         [{var,{164,42},'Type1'}],
         {{164,31},
          {atom,{164,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         [{fun_ty,
              [{user_type,0,af_constraint,[]}],
              {user_type,0,af_constraint,[]},
              {constraints,#{},#{},#{}}},
          {fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{164,42},'Type1'}],
         {{164,31},
          {atom,{164,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         {fun_ty,
             [{user_type,0,af_constraint,[]}],
             {user_type,0,af_constraint,[]},
             {constraints,#{},#{},#{}}},
         [{var,{164,42},'Type1'}],
         {{164,31},
          {atom,{164,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {var,{164,42},'Type1'},
            {type,0,union,
                [{type,0,tuple,
                     [{atom,0,char},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {type,0,char,[]}]},
                 {type,0,tuple,
                     [{atom,0,integer},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {type,0,integer,[]}]},
                 {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                     [{atom,0,op},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]},
            {user_type,0,af_constraint,[]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         [{fun_ty,
              [{user_type,0,type,[]}],
              {user_type,0,type,[]},
              {constraints,#{},#{},#{}}}],
         [{var,{164,42},'Type1'}],
         {{164,31},
          {atom,{164,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         {fun_ty,
             [{user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{164,42},'Type1'}],
         {{164,31},
          {atom,{164,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {164,31},
                {atom,{164,31},remove_pos},
                [{var,{164,42},'Type1'}]},
            {user_type,0,type,[]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_binary_op,
                     [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_character,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_unary_op,
                     [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_integer,[]}]}}}}
{trace,<0.95.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.95.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,
             #{'Op' =>
                   {type,0,union,
                       [{atom,0,'*'},
                        {atom,0,'+'},
                        {atom,0,'++'},
                        {atom,0,'-'},
                        {atom,0,'--'},
                        {atom,0,'/'},
                        {atom,0,'/='},
                        {atom,0,'<'},
                        {atom,0,'=/='},
                        {atom,0,'=:='},
                        {atom,0,'=<'},
                        {atom,0,'=='},
                        {atom,0,'>'},
                        {atom,0,'>='},
                        {atom,0,'and'},
                        {atom,0,'band'},
                        {atom,0,'bor'},
                        {atom,0,'bsl'},
                        {atom,0,'bsr'},
                        {atom,0,'bxor'},
                        {atom,0,'div'},
                        {atom,0,'or'},
                        {atom,0,'rem'},
                        {atom,0,'xor'}]},
               'Type1' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]},
               'Type2' =>
                   {type,0,union,
                       [{type,0,tuple,
                            [{atom,0,char},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,char,[]}]},
                        {type,0,tuple,
                            [{atom,0,integer},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {type,0,integer,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 binary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {type,0,tuple,
                            [{atom,0,op},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 unary_op,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_unary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {call,{164,31},{atom,{164,31},remove_pos},[{var,{164,42},'Type1'}]},
         [],
         [{var,{164,42},'Type1'}],
         {{164,31},
          {atom,{164,31},remove_pos},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,af_constraint,[]}]},
                     {user_type,0,af_constraint,[]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {164,31},
            {atom,{164,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {164,31},
            {atom,{164,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call_intersection_,6},
    {throw,
        {type_error,no_type_match_intersection,
            {164,31},
            {atom,{164,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,no_type_match_intersection,
            {164,31},
            {atom,{164,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,exception_from,
    {typechecker,check_clause,5},
    {throw,
        {type_error,no_type_match_intersection,
            {164,31},
            {atom,{164,31},remove_pos},
            [{type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,af_constraint,[]}]},
                       {user_type,0,af_constraint,[]}]},
                  []]},
             {type,0,bounded_fun,
                 [{type,0,'fun',
                      [{type,0,product,[{user_type,0,type,[]}]},
                       {user_type,0,type,[]}]},
                  []]}]}}}
{trace,<0.95.0>,return_to,{typechecker,check_clauses_intersection,5}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "no_clause",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,call,
    {typechecker,check_clauses_intersection,
        [{[{user_type,0,type,[]}],{user_type,0,type,[]}},
         "fun({type, _, constraint, _} = Constraint) ->\n       ok\nend",
         #{[{user_type,0,af_constraint,[]}] => [{type,0,none,[]}],
           [{user_type,0,type,[]}] =>
               [{type,0,union,
                    [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_unary_op,
                         [{user_type,
                              [{file,"gradualizer_type.erl"},{location,0}],
                              af_singleton_integer_type,[]}]}]}]}]}}
{trace,<0.95.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.96.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {166,1},
    remove_pos_constraint,1,
    [{clause,
      {166,1},
      [{tuple,
        {166,23},
        [{atom,{166,24},type},
         {var,{166,30},'_'},
         {atom,{166,33},constraint},
         {cons,
          {166,45},
          {tuple,
           {166,46},
           [{atom,{166,47},atom},
            {var,{166,53},'_'},
            {atom,{166,56},is_subtype}]},
          {cons,{166,69},{var,{166,69},'Args'},{nil,{166,73}}}}]}],
      [],
      [{match,
        {167,5},
        {var,{167,5},'L'},
        {call,
         {167,9},
         {remote,{167,17},{atom,{167,9},erl_anno},{atom,{167,18},new}},
         [{integer,{167,22},0}]}},
       {tuple,
        {168,5},
        [{atom,{168,6},type},
         {var,{168,12},'L'},
         {atom,{168,15},constraint},
         {cons,
          {168,27},
          {tuple,
           {168,28},
           [{atom,{168,29},atom},
            {var,{168,35},'L'},
            {atom,{168,38},is_subtype}]},
          {cons,
           {168,51},
           {call,
            {168,51},
            {remote,{168,56},{atom,{168,51},lists},{atom,{168,57},map}},
            [{'fun',{168,61},{function,remove_pos,1}},{var,{168,79},'Args'}]},
           {nil,{168,84}}}}]}]}]}]}}
{trace,<0.96.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,any,[]}],
         {type,0,any,[]},
         {clause,
             {166,1},
             [{tuple,
                  {166,23},
                  [{atom,{166,24},type},
                   {var,{166,30},'_'},
                   {atom,{166,33},constraint},
                   {cons,
                       {166,45},
                       {tuple,
                           {166,46},
                           [{atom,{166,47},atom},
                            {var,{166,53},'_'},
                            {atom,{166,56},is_subtype}]},
                       {cons,
                           {166,69},
                           {var,{166,69},'Args'},
                           {nil,{166,73}}}}]}],
             [],
             [{match,
                  {167,5},
                  {var,{167,5},'L'},
                  {call,
                      {167,9},
                      {remote,
                          {167,17},
                          {atom,{167,9},erl_anno},
                          {atom,{167,18},new}},
                      [{integer,{167,22},0}]}},
              {tuple,
                  {168,5},
                  [{atom,{168,6},type},
                   {var,{168,12},'L'},
                   {atom,{168,15},constraint},
                   {cons,
                       {168,27},
                       {tuple,
                           {168,28},
                           [{atom,{168,29},atom},
                            {var,{168,35},'L'},
                            {atom,{168,38},is_subtype}]},
                       {cons,
                           {168,51},
                           {call,
                               {168,51},
                               {remote,
                                   {168,56},
                                   {atom,{168,51},lists},
                                   {atom,{168,57},map}},
                               [{'fun',{168,61},{function,remove_pos,1}},
                                {var,{168,79},'Args'}]},
                           {nil,{168,84}}}}]}]},
         bind_vars]}}
{trace,<0.96.0>,call,{typechecker,refine,["{any()}","{none()}",seen,env]}}
{trace,<0.96.0>,call,{typechecker,refine,["any()","none()",seen,env]}}
{trace,<0.96.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.96.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.96.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.96.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,any,[]}],
  {venv,
   #{'Args' => {type,0,any,[]},
     'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
  {constraints,
   #{"B_typechecker_3529_46" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_45" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_45" => true,"B_typechecker_3529_46" => true}}}}
{trace,<0.96.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.96.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.97.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {171,1},
             remove_pos_all,1,
             [{clause,{171,1},[{nil,{171,16}}],[],[{nil,{172,5}}]},
              {clause,
                  {173,1},
                  [{match,
                       {173,16},
                       {cons,{173,16},{var,{173,17},'_'},{var,{173,19},'_'}},
                       {var,{173,24},'L'}}],
                  [],
                  [{call,
                       {174,5},
                       {remote,
                           {174,10},
                           {atom,{174,5},lists},
                           {atom,{174,11},map}},
                       [{'fun',{174,15},{function,remove_pos,1}},
                        {var,{174,33},'L'}]}]}]}]}}
{trace,<0.97.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,list,[]}],
                     {type,0,list,[]},
                     {clause,{171,1},[{nil,{171,16}}],[],[{nil,{172,5}}]},
                     bind_vars]}}
{trace,<0.97.0>,call,{typechecker,refine,["{list()}","{[]}",seen,env]}}
{trace,<0.97.0>,call,{typechecker,refine,["list()","[]",seen,env]}}
{trace,<0.97.0>,return_from,
       {typechecker,refine,4},
       {type,0,nonempty_list,[{type,0,any,[]}]}}
{trace,<0.97.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.97.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,[{type,0,nonempty_list,[{type,0,any,[]}]}]}}
{trace,<0.97.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.97.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,nonempty_list,[{type,0,any,[]}]}],
        {venv,#{}},
        {constraints,#{},#{},#{}}}}
{trace,<0.97.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.97.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,nonempty_list,[{type,0,any,[]}]}],
         {type,0,list,[]},
         {clause,
             {173,1},
             [{match,
                  {173,16},
                  {cons,{173,16},{var,{173,17},'_'},{var,{173,19},'_'}},
                  {var,{173,24},'L'}}],
             [],
             [{call,
                  {174,5},
                  {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
                  [{'fun',{174,15},{function,remove_pos,1}},
                   {var,{174,33},'L'}]}]},
         bind_vars]}}
{trace,<0.97.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
         {type,0,list,[{type,0,any,[]}]},
         {call,
             {174,5},
             {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
             [{'fun',{174,15},{function,remove_pos,1}},{var,{174,33},'L'}]},
         {fun_ty_intersection,
             [{fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_49"}]},
                        {var,0,"B_typechecker_3529_50"}]},
                   {type,0,nonempty_list,[{var,0,"A_typechecker_3529_49"}]}],
                  {type,0,nonempty_list,[{var,0,"B_typechecker_3529_50"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_49" => true,
                        "B_typechecker_3529_50" => true}}},
              {fun_ty,
                  [{type,0,'fun',
                       [{type,0,product,[{var,0,"A_typechecker_3529_51"}]},
                        {var,0,"B_typechecker_3529_52"}]},
                   {type,0,list,[{var,0,"A_typechecker_3529_51"}]}],
                  {type,0,list,[{var,0,"B_typechecker_3529_52"}]},
                  {constraints,#{},#{},
                      #{"A_typechecker_3529_51" => true,
                        "B_typechecker_3529_52" => true}}}],
             {constraints,#{},#{},#{}}},
         [{'fun',{174,15},{function,remove_pos,1}},{var,{174,33},'L'}],
         {{174,5},
          {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.97.0>,call,
    {typechecker,type_check_call_intersection_,
        [{venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
         {type,0,list,[{type,0,any,[]}]},
         {call,
             {174,5},
             {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
             [{'fun',{174,15},{function,remove_pos,1}},{var,{174,33},'L'}]},
         [{fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_49"}]},
                    {var,0,"B_typechecker_3529_50"}]},
               {type,0,nonempty_list,[{var,0,"A_typechecker_3529_49"}]}],
              {type,0,nonempty_list,[{var,0,"B_typechecker_3529_50"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_49" => true,
                    "B_typechecker_3529_50" => true}}},
          {fun_ty,
              [{type,0,'fun',
                   [{type,0,product,[{var,0,"A_typechecker_3529_51"}]},
                    {var,0,"B_typechecker_3529_52"}]},
               {type,0,list,[{var,0,"A_typechecker_3529_51"}]}],
              {type,0,list,[{var,0,"B_typechecker_3529_52"}]},
              {constraints,#{},#{},
                  #{"A_typechecker_3529_51" => true,
                    "B_typechecker_3529_52" => true}}}],
         [{'fun',{174,15},{function,remove_pos,1}},{var,{174,33},'L'}],
         {{174,5},
          {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.97.0>,call,
    {typechecker,type_check_call,
        [{venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
         {type,0,list,[{type,0,any,[]}]},
         {call,
             {174,5},
             {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
             [{'fun',{174,15},{function,remove_pos,1}},{var,{174,33},'L'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,[{var,0,"A_typechecker_3529_49"}]},
                   {var,0,"B_typechecker_3529_50"}]},
              {type,0,nonempty_list,[{var,0,"A_typechecker_3529_49"}]}],
             {type,0,nonempty_list,[{var,0,"B_typechecker_3529_50"}]},
             {constraints,#{},#{},
                 #{"A_typechecker_3529_49" => true,
                   "B_typechecker_3529_50" => true}}},
         [{'fun',{174,15},{function,remove_pos,1}},{var,{174,33},'L'}],
         {{174,5},
          {remote,{174,10},{atom,{174,5},lists},{atom,{174,11},map}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,nonempty_list,[{var,0,'A'}]}]},
                     {type,0,nonempty_list,[{var,0,'B'}]}]},
                []]},
           {type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,'fun',
                              [{type,0,product,[{var,0,'A'}]},{var,0,'B'}]},
                          {type,0,list,[{var,0,'A'}]}]},
                     {type,0,list,[{var,0,'B'}]}]},
                []]}]}]}}
{trace,<0.97.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
  {constraints,
   #{"B_typechecker_3529_50" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" => true,"B_typechecker_3529_50" => true}}}}
{trace,<0.97.0>,return_to,{typechecker,type_check_call_intersection_,6}}
{trace,<0.97.0>,return_from,
 {typechecker,type_check_call_intersection_,6},
 {{venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
  {constraints,
   #{"B_typechecker_3529_50" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" => true,"B_typechecker_3529_50" => true}}}}
{trace,<0.97.0>,return_to,{typechecker,type_check_call,6}}
{trace,<0.97.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
  {constraints,
   #{"B_typechecker_3529_50" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" => true,"B_typechecker_3529_50" => true}}}}
{trace,<0.97.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.97.0>,call,
       {typechecker,refine,["{[any(), ...]}","{[any(), ...]}",seen,env]}}
{trace,<0.97.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.97.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.97.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,none,[]}],
  {venv,#{'L' => {type,0,nonempty_list,[{type,0,any,[]}]}}},
  {constraints,
   #{"B_typechecker_3529_50" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_49" => true,"B_typechecker_3529_50" => true}}}}
{trace,<0.97.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.97.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.98.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {176,1},
             remove_pos_remote_type,1,
             [{clause,
                  {176,1},
                  [{tuple,
                       {176,24},
                       [{atom,{176,25},remote_type},
                        {var,{176,38},'_'},
                        {cons,
                            {176,41},
                            {var,{176,42},'Mod'},
                            {cons,
                                {176,47},
                                {var,{176,47},'Name'},
                                {cons,
                                    {176,53},
                                    {var,{176,53},'Params'},
                                    {nil,{176,59}}}}}]}],
                  [],
                  [{match,
                       {177,5},
                       {var,{177,5},'Params1'},
                       {call,
                           {177,15},
                           {remote,
                               {177,20},
                               {atom,{177,15},lists},
                               {atom,{177,21},map}},
                           [{'fun',{177,25},{function,remove_pos,1}},
                            {var,{177,43},'Params'}]}},
                   {tuple,
                       {178,5},
                       [{atom,{178,6},remote_type},
                        {call,
                            {178,19},
                            {remote,
                                {178,27},
                                {atom,{178,19},erl_anno},
                                {atom,{178,28},new}},
                            [{integer,{178,32},0}]},
                        {cons,
                            {178,36},
                            {var,{178,37},'Mod'},
                            {cons,
                                {178,42},
                                {var,{178,42},'Name'},
                                {cons,
                                    {178,48},
                                    {var,{178,48},'Params1'},
                                    {nil,{178,55}}}}}]}]}]}]}}
{trace,<0.98.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,any,[]}],
         {type,0,any,[]},
         {clause,
             {176,1},
             [{tuple,
                  {176,24},
                  [{atom,{176,25},remote_type},
                   {var,{176,38},'_'},
                   {cons,
                       {176,41},
                       {var,{176,42},'Mod'},
                       {cons,
                           {176,47},
                           {var,{176,47},'Name'},
                           {cons,
                               {176,53},
                               {var,{176,53},'Params'},
                               {nil,{176,59}}}}}]}],
             [],
             [{match,
                  {177,5},
                  {var,{177,5},'Params1'},
                  {call,
                      {177,15},
                      {remote,
                          {177,20},
                          {atom,{177,15},lists},
                          {atom,{177,21},map}},
                      [{'fun',{177,25},{function,remove_pos,1}},
                       {var,{177,43},'Params'}]}},
              {tuple,
                  {178,5},
                  [{atom,{178,6},remote_type},
                   {call,
                       {178,19},
                       {remote,
                           {178,27},
                           {atom,{178,19},erl_anno},
                           {atom,{178,28},new}},
                       [{integer,{178,32},0}]},
                   {cons,
                       {178,36},
                       {var,{178,37},'Mod'},
                       {cons,
                           {178,42},
                           {var,{178,42},'Name'},
                           {cons,
                               {178,48},
                               {var,{178,48},'Params1'},
                               {nil,{178,55}}}}}]}]},
         bind_vars]}}
{trace,<0.98.0>,call,{typechecker,refine,["{any()}","{none()}",seen,env]}}
{trace,<0.98.0>,call,{typechecker,refine,["any()","none()",seen,env]}}
{trace,<0.98.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.98.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.98.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.98.0>,return_from,
 {typechecker,check_clause,5},
 {[{type,0,any,[]}],
  {venv,
   #{'Mod' => {type,0,any,[]},
     'Name' => {type,0,any,[]},
     'Params' => {type,0,any,[]},
     'Params1' => {type,0,nonempty_list,[{var,0,"B_typechecker_3529_54"}]}}},
  {constraints,
   #{"B_typechecker_3529_54" =>
      [{type,0,tuple,
        [{atom,0,type},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
         {atom,0,constraint},
         {type,0,list,
          [{type,0,union,
            [{user_type,
              [{file,"gradualizer_type.erl"},{location,0}],
              af_lit_atom,
              [{atom,0,is_subtype}]},
             {type,0,list,
              [{type,0,union,
                [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
                 {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]}]}]}]}]},
       {type,0,union,
        [{user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_53" =>
      [{type,0,union,
        [{type,0,tuple,
          [{atom,0,type},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
           {atom,0,constraint},
           {type,0,list,
            [{type,0,union,
              [{user_type,
                [{file,"gradualizer_type.erl"},{location,0}],
                af_lit_atom,
                [{atom,0,is_subtype}]},
               {type,0,list,
                [{type,0,union,
                  [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_type_variable,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    abstract_type,[]}]}]}]}]}]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_annotated_type,[]},
         {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_bitstring_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_constrained_function_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_empty_list_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_fun_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_integer_range_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_map_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_predefined_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_record_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_remote_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_singleton_integer_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_tuple_type,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_union,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_type_variable,[]},
         {user_type,
          [{file,"gradualizer_type.erl"},{location,0}],
          af_user_defined_type,[]}]}]},
   #{"A_typechecker_3529_53" => true,"B_typechecker_3529_54" => true}}}}
{trace,<0.98.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.98.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.99.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {180,1},
             remove_pos_ann_type,1,
             [{clause,
                  {180,1},
                  [{tuple,
                       {180,21},
                       [{atom,{180,22},ann_type},
                        {var,{180,32},'_'},
                        {cons,
                            {180,35},
                            {var,{180,36},'_Var'},
                            {cons,
                                {180,42},
                                {var,{180,42},'Type'},
                                {nil,{180,46}}}}]}],
                  [],
                  [{call,
                       {182,5},
                       {atom,{182,5},remove_pos},
                       [{call,
                            {182,17},
                            {atom,{182,17},':::'},
                            [{var,{182,29},'Type'},
                             {string,{182,29},"type ( )"}]}]}]}]}]}}
{trace,<0.99.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,any,[]}],
         {type,0,any,[]},
         {clause,
             {180,1},
             [{tuple,
                  {180,21},
                  [{atom,{180,22},ann_type},
                   {var,{180,32},'_'},
                   {cons,
                       {180,35},
                       {var,{180,36},'_Var'},
                       {cons,
                           {180,42},
                           {var,{180,42},'Type'},
                           {nil,{180,46}}}}]}],
             [],
             [{call,
                  {182,5},
                  {atom,{182,5},remove_pos},
                  [{call,
                       {182,17},
                       {atom,{182,17},':::'},
                       [{var,{182,29},'Type'},
                        {string,{182,29},"type ( )"}]}]}]},
         bind_vars]}}
{trace,<0.99.0>,call,{typechecker,refine,["{any()}","{none()}",seen,env]}}
{trace,<0.99.0>,call,{typechecker,refine,["any()","none()",seen,env]}}
{trace,<0.99.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.99.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.99.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.99.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,any,[]}],
        {venv,#{'Type' => {type,0,any,[]},'_Var' => {type,0,any,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.99.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.99.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.100.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {186,1},
             anno_keep_only_filename,1,
             [{clause,
                  {186,1},
                  [{var,{186,25},'Anno'}],
                  [],
                  [{match,
                       {187,5},
                       {var,{187,5},'NewAnno'},
                       {call,
                           {187,15},
                           {remote,
                               {187,23},
                               {atom,{187,15},erl_anno},
                               {atom,{187,24},new}},
                           [{integer,{187,28},0}]}},
                   {'case',
                       {188,5},
                       {call,
                           {188,10},
                           {remote,
                               {188,18},
                               {atom,{188,10},erl_anno},
                               {atom,{188,19},file}},
                           [{var,{188,24},'Anno'}]},
                       [{clause,
                            {189,9},
                            [{atom,{189,9},undefined}],
                            [],
                            [{var,{189,22},'NewAnno'}]},
                        {clause,
                            {190,9},
                            [{var,{190,9},'Filename'}],
                            [],
                            [{call,
                                 {190,22},
                                 {remote,
                                     {190,30},
                                     {atom,{190,22},erl_anno},
                                     {atom,{190,31},set_file}},
                                 [{var,{190,40},'Filename'},
                                  {var,{190,50},'NewAnno'}]}]}]}]}]}]}}
{trace,<0.100.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{185,31},erl_anno},{atom,{185,40},anno},[]]}],
         {remote_type,0,[{atom,{185,51},erl_anno},{atom,{185,60},anno},[]]},
         {clause,
             {186,1},
             [{var,{186,25},'Anno'}],
             [],
             [{match,
                  {187,5},
                  {var,{187,5},'NewAnno'},
                  {call,
                      {187,15},
                      {remote,
                          {187,23},
                          {atom,{187,15},erl_anno},
                          {atom,{187,24},new}},
                      [{integer,{187,28},0}]}},
              {'case',
                  {188,5},
                  {call,
                      {188,10},
                      {remote,
                          {188,18},
                          {atom,{188,10},erl_anno},
                          {atom,{188,19},file}},
                      [{var,{188,24},'Anno'}]},
                  [{clause,
                       {189,9},
                       [{atom,{189,9},undefined}],
                       [],
                       [{var,{189,22},'NewAnno'}]},
                   {clause,
                       {190,9},
                       [{var,{190,9},'Filename'}],
                       [],
                       [{call,
                            {190,22},
                            {remote,
                                {190,30},
                                {atom,{190,22},erl_anno},
                                {atom,{190,31},set_file}},
                            [{var,{190,40},'Filename'},
                             {var,{190,50},'NewAnno'}]}]}]}]},
         bind_vars]}}
{trace,<0.100.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'NewAnno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         [{type,0,union,
              [{user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]},
               {atom,0,undefined}]}],
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {clause,
             {189,9},
             [{atom,{189,9},undefined}],
             [],
             [{var,{189,22},'NewAnno'}]},
         capture_vars]}}
{trace,<0.100.0>,call,
       {typechecker,refine,
                    ["{filename() | undefined}","{undefined}",seen,env]}}
{trace,<0.100.0>,call,
       {typechecker,refine,["filename() | undefined","undefined",seen,env]}}
{trace,<0.100.0>,call,
       {typechecker,refine,["filename()","undefined",seen,env]}}
{trace,<0.100.0>,call,{typechecker,refine,["[char()]","undefined",seen,env]}}
{trace,<0.100.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.100.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.100.0>,call,{typechecker,refine,["<<_:_*8>>","undefined",seen,env]}}
{trace,<0.100.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.100.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.100.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}}
{trace,<0.100.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.100.0>,call,{typechecker,refine,["undefined","undefined",seen,env]}}
{trace,<0.100.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.100.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.100.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}}
{trace,<0.100.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.100.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,
             [{user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}]}}
{trace,<0.100.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.100.0>,return_from,
       {typechecker,check_clause,5},
       {[{user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'NewAnno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.100.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.100.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'NewAnno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         [{user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}],
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {clause,
             {190,9},
             [{var,{190,9},'Filename'}],
             [],
             [{call,
                  {190,22},
                  {remote,
                      {190,30},
                      {atom,{190,22},erl_anno},
                      {atom,{190,31},set_file}},
                  [{var,{190,40},'Filename'},{var,{190,50},'NewAnno'}]}]},
         capture_vars]}}
{trace,<0.100.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' =>
                   {type,0,union,
                       [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                        {type,0,list,[{type,0,char,[]}]}]},
               'NewAnno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {190,22},
             {remote,
                 {190,30},
                 {atom,{190,22},erl_anno},
                 {atom,{190,31},set_file}},
             [{var,{190,40},'Filename'},{var,{190,50},'NewAnno'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                   {type,0,list,[{type,0,char,[]}]}]},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{var,{190,40},'Filename'},{var,{190,50},'NewAnno'}],
         {{190,22},
          {remote,{190,30},{atom,{190,22},erl_anno},{atom,{190,31},set_file}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'File'},{var,0,'Anno'}]},
                     {var,0,'Anno'}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'File'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           filename,[]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Anno'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           anno,[]}]]}]]}]}]}}
{trace,<0.100.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' =>
                    {type,0,union,
                          [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                           {type,0,list,[{type,0,char,[]}]}]},
                'NewAnno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.100.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.100.0>,call,
       {typechecker,refine,["{filename()}","{filename()}",seen,env]}}
{trace,<0.100.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.100.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.100.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' =>
                    {type,0,union,
                          [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                           {type,0,list,[{type,0,char,[]}]}]},
                'NewAnno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.100.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.100.0>,call,
       {typechecker,refine,
                    ["{erl_anno:anno()}","{erl_anno:anno()}",seen,env]}}
{trace,<0.100.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.100.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.100.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' =>
                    {type,0,union,
                          [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                           {type,0,list,[{type,0,char,[]}]}]},
                'NewAnno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.100.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.100.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.101.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {195,1},
             annotate_user_type,2,
             [{clause,
                  {195,1},
                  [{var,{195,20},'ModOrFile'},{var,{195,31},'Type'}],
                  [],
                  [{match,
                       {196,5},
                       {var,{196,5},'Filename'},
                       {call,
                           {196,16},
                           {atom,{196,16},ensure_filename},
                           [{var,{196,32},'ModOrFile'}]}},
                   {call,
                       {197,5},
                       {atom,{197,5},annotate_user_type_},
                       [{var,{197,25},'Filename'},
                        {var,{197,35},'Type'}]}]}]}]}}
{trace,<0.101.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{type,0,module,[]},
               {remote_type,0,
                   [{atom,{194,37},file},{atom,{194,42},filename},[]]}]},
          {user_type,0,type,[]}],
         {user_type,0,type,[]},
         {clause,
             {195,1},
             [{var,{195,20},'ModOrFile'},{var,{195,31},'Type'}],
             [],
             [{match,
                  {196,5},
                  {var,{196,5},'Filename'},
                  {call,
                      {196,16},
                      {atom,{196,16},ensure_filename},
                      [{var,{196,32},'ModOrFile'}]}},
              {call,
                  {197,5},
                  {atom,{197,5},annotate_user_type_},
                  [{var,{197,25},'Filename'},{var,{197,35},'Type'}]}]},
         bind_vars]}}
{trace,<0.101.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Filename' => {type,0,list,[{type,0,char,[]}]},
               'ModOrFile' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {197,5},
             {atom,{197,5},annotate_user_type_},
             [{var,{197,25},'Filename'},{var,{197,35},'Type'}]},
         {fun_ty,
             [{remote_type,0,
                  [{atom,{219,27},file},{atom,{219,32},filename},[]]},
              {user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{197,25},'Filename'},{var,{197,35},'Type'}],
         {{197,5},
          {atom,{197,5},annotate_user_type_},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{remote_type,0,
                              [{atom,{219,27},file},
                               {atom,{219,32},filename},
                               []]},
                          {user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.101.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Filename' => {type,0,list,[{type,0,char,[]}]},
                'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.101.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.101.0>,call,
       {typechecker,refine,
                    ["{module() | file:filename(), type()}",
                     "{module() | file:filename(), type()}",seen,env]}}
{trace,<0.101.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.101.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.101.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]},{type,0,none,[]}],
        {venv,#{'Filename' => {type,0,list,[{type,0,char,[]}]},
                'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.101.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.101.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.102.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {200,1},
    ensure_filename,1,
    [{clause,
      {200,1},
      [{var,{200,17},'ModOrFile'}],
      [],
      [{'case',
        {201,5},
        {var,{201,10},'ModOrFile'},
        [{clause,
          {202,9},
          [{var,{202,9},'Module'}],
          [[{call,
             {202,21},
             {atom,{202,21},is_atom},
             [{var,{202,29},'ModOrFile'}]}]],
          [{op,
            {203,56},
            '++',
            {call,
             {203,13},
             {atom,{203,13},atom_to_list},
             [{call,
               {203,27},
               {atom,{203,27},':::'},
               [{var,{203,39},'Module'},{string,{203,39},"atom ( )"}]}]},
            {string,{203,59},".erl"}}]},
         {clause,
          {204,9},
          [{var,{204,9},'_'}],
          [],
          [{var,{204,14},'ModOrFile'}]}]}]}]}]}}
{trace,<0.102.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{type,0,module,[]},
               {remote_type,0,
                   [{atom,{199,34},file},{atom,{199,39},filename},[]]}]}],
         {remote_type,0,[{atom,{199,54},file},{atom,{199,59},filename},[]]},
         {clause,
             {200,1},
             [{var,{200,17},'ModOrFile'}],
             [],
             [{'case',
                  {201,5},
                  {var,{201,10},'ModOrFile'},
                  [{clause,
                       {202,9},
                       [{var,{202,9},'Module'}],
                       [[{call,
                             {202,21},
                             {atom,{202,21},is_atom},
                             [{var,{202,29},'ModOrFile'}]}]],
                       [{op,{203,56},
                            '++',
                            {call,
                                {203,13},
                                {atom,{203,13},atom_to_list},
                                [{call,
                                     {203,27},
                                     {atom,{203,27},':::'},
                                     [{var,{203,39},'Module'},
                                      {string,{203,39},"atom ( )"}]}]},
                            {string,{203,59},".erl"}}]},
                   {clause,
                       {204,9},
                       [{var,{204,9},'_'}],
                       [],
                       [{var,{204,14},'ModOrFile'}]}]}]},
         bind_vars]}}
{trace,<0.102.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'ModOrFile' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
         [{type,0,union,[{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}],
         {type,0,list,[{type,0,char,[]}]},
         {clause,
             {202,9},
             [{var,{202,9},'Module'}],
             [[{call,
                   {202,21},
                   {atom,{202,21},is_atom},
                   [{var,{202,29},'ModOrFile'}]}]],
             [{op,{203,56},
                  '++',
                  {call,
                      {203,13},
                      {atom,{203,13},atom_to_list},
                      [{call,
                           {203,27},
                           {atom,{203,27},':::'},
                           [{var,{203,39},'Module'},
                            {string,{203,39},"atom ( )"}]}]},
                  {string,{203,59},".erl"}}]},
         capture_vars]}}
{trace,<0.102.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'ModOrFile' => {type,0,atom,[]},
               'Module' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
         {type,0,list,[{type,0,range,[{integer,0,0},{integer,0,1114111}]}]},
         {call,
             {203,13},
             {atom,{203,13},atom_to_list},
             [{call,
                  {203,27},
                  {atom,{203,27},':::'},
                  [{var,{203,39},'Module'},{string,{203,39},"atom ( )"}]}]},
         {fun_ty,
             [{type,0,atom,[]}],
             {type,0,string,[]},
             {constraints,#{},#{},#{}}},
         [{call,
              {203,27},
              {atom,{203,27},':::'},
              [{var,{203,39},'Module'},{string,{203,39},"atom ( )"}]}],
         {{203,13},
          {atom,{203,13},atom_to_list},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'Atom'}]},{type,0,string,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Atom'},{type,0,atom,[]}]]}]]}]}]}}
{trace,<0.102.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'ModOrFile' => {type,0,atom,[]},
                'Module' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.102.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.102.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,union,[{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}],
        {venv,#{'ModOrFile' => {type,0,atom,[]},
                'Module' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.102.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.102.0>,call,
       {typechecker,refine,["atom() | [char()]","atom()",seen,env]}}
{trace,<0.102.0>,call,{typechecker,refine,["[char()]","atom()",seen,env]}}
{trace,<0.102.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.102.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.102.0>,call,{typechecker,refine,["atom()","atom()",seen,env]}}
{trace,<0.102.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.102.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.102.0>,return_from,
       {typechecker,refine,4},
       {type,0,list,[{type,0,char,[]}]}}
{trace,<0.102.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.102.0>,call,
       {typechecker,check_clause,
                    [{venv,#{'ModOrFile' => {type,0,list,[{type,0,char,[]}]}}},
                     [{type,0,union,
                            [{type,0,atom,[]},
                             {type,0,list,[{type,0,char,[]}]}]}],
                     {type,0,list,[{type,0,char,[]}]},
                     {clause,{204,9},
                             [{var,{204,9},'_'}],
                             [],
                             [{var,{204,14},'ModOrFile'}]},
                     capture_vars]}}
{trace,<0.102.0>,call,
       {typechecker,refine,
                    ["{atom() | [char()]}","{atom() | [char()]}",seen,env]}}
{trace,<0.102.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.102.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.102.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'ModOrFile' => {type,0,list,[{type,0,char,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.102.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.102.0>,call,
       {typechecker,refine,
                    ["{module() | file:filename()}",
                     "{module() | file:filename()}",seen,env]}}
{trace,<0.102.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.102.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.102.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'ModOrFile' => {type,0,none,[]},
                'Module' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.102.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.102.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.103.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {211,1},
    annotate_user_types,2,
    [{clause,
      {211,1},
      [{var,{211,21},'ModOrFile'},{var,{211,32},'TypeOrTypes'}],
      [],
      [{'case',
        {212,5},
        {var,{212,10},'TypeOrTypes'},
        [{clause,
          {213,9},
          [{var,{213,9},'Types'}],
          [[{call,{213,20},{atom,{213,20},is_list},[{var,{213,28},'Types'}]}]],
          [{lc,
            {214,13},
            {call,
             {214,15},
             {atom,{214,15},annotate_user_type},
             [{var,{214,34},'ModOrFile'},{var,{214,45},'Type'}]},
            [{generate,
              {214,59},
              {var,{214,54},'Type'},
              {call,
               {214,63},
               {atom,{214,63},':::'},
               [{var,{214,75},'Types'},{string,{214,75},"[ type ( ) ]"}]}}]}]},
         {clause,
          {215,9},
          [{var,{215,9},'Type'}],
          [],
          [{call,
            {216,13},
            {atom,{216,13},annotate_user_type},
            [{var,{216,32},'ModOrFile'},
             {call,
              {216,44},
              {atom,{216,44},':::'},
              [{var,{216,56},'Type'},
               {string,{216,56},"type ( )"}]}]}]}]}]}]}]}}
{trace,<0.103.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,[{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
          {type,0,union,
              [{type,0,list,[{user_type,0,type,[]}]},{user_type,0,type,[]}]}],
         {type,0,union,
             [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
         {clause,
             {211,1},
             [{var,{211,21},'ModOrFile'},{var,{211,32},'TypeOrTypes'}],
             [],
             [{'case',
                  {212,5},
                  {var,{212,10},'TypeOrTypes'},
                  [{clause,
                       {213,9},
                       [{var,{213,9},'Types'}],
                       [[{call,
                             {213,20},
                             {atom,{213,20},is_list},
                             [{var,{213,28},'Types'}]}]],
                       [{lc,{214,13},
                            {call,
                                {214,15},
                                {atom,{214,15},annotate_user_type},
                                [{var,{214,34},'ModOrFile'},
                                 {var,{214,45},'Type'}]},
                            [{generate,
                                 {214,59},
                                 {var,{214,54},'Type'},
                                 {call,
                                     {214,63},
                                     {atom,{214,63},':::'},
                                     [{var,{214,75},'Types'},
                                      {string,{214,75},"[ type ( ) ]"}]}}]}]},
                   {clause,
                       {215,9},
                       [{var,{215,9},'Type'}],
                       [],
                       [{call,
                            {216,13},
                            {atom,{216,13},annotate_user_type},
                            [{var,{216,32},'ModOrFile'},
                             {call,
                                 {216,44},
                                 {atom,{216,44},':::'},
                                 [{var,{216,56},'Type'},
                                  {string,{216,56},"type ( )"}]}]}]}]}]},
         bind_vars]}}
{trace,<0.103.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'ModOrFile' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
               'TypeOrTypes' =>
                   {type,0,union,
                       [{type,0,list,[{user_type,0,type,[]}]},
                        {user_type,0,type,[]}]}}},
         [{type,0,union,
              [{type,0,list,[{user_type,0,type,[]}]},{user_type,0,type,[]}]}],
         {type,0,union,
             [{type,0,list,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
         {clause,
             {213,9},
             [{var,{213,9},'Types'}],
             [[{call,
                   {213,20},
                   {atom,{213,20},is_list},
                   [{var,{213,28},'Types'}]}]],
             [{lc,{214,13},
                  {call,
                      {214,15},
                      {atom,{214,15},annotate_user_type},
                      [{var,{214,34},'ModOrFile'},{var,{214,45},'Type'}]},
                  [{generate,
                       {214,59},
                       {var,{214,54},'Type'},
                       {call,
                           {214,63},
                           {atom,{214,63},':::'},
                           [{var,{214,75},'Types'},
                            {string,{214,75},"[ type ( ) ]"}]}}]}]},
         capture_vars]}}
{trace,<0.103.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'ModOrFile' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'TypeOrTypes' =>
                   {type,0,union,
                       [{type,0,list,[{user_type,0,type,[]}]},
                        {user_type,0,type,[]}]},
               'Types' => {type,0,list,[{type,0,any,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {214,15},
             {atom,{214,15},annotate_user_type},
             [{var,{214,34},'ModOrFile'},{var,{214,45},'Type'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,module,[]},
                   {remote_type,0,
                       [{atom,{194,37},file},{atom,{194,42},filename},[]]}]},
              {user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{214,34},'ModOrFile'},{var,{214,45},'Type'}],
         {{214,15},
          {atom,{214,15},annotate_user_type},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,union,
                              [{type,0,module,[]},
                               {remote_type,0,
                                   [{atom,{194,37},file},
                                    {atom,{194,42},filename},
                                    []]}]},
                          {user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.103.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'TypeOrTypes' =>
                    {type,0,union,
                          [{type,0,list,[{user_type,0,type,[]}]},
                           {user_type,0,type,[]}]},
                'Types' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.103.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.103.0>,call,
       {typechecker,refine,["[type()] | type()","[any()]",seen,env]}}
{trace,<0.103.0>,call,{typechecker,refine,["type()","[any()]",seen,env]}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_user_defined_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_type_variable()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_type_union()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_tuple_type()","[any()]",seen,env]}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}","[any()]",
                     seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["{type, anno(), tuple, any}","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()","[any()]",seen,env]}}
{trace,<0.103.0>,call,
       {typechecker,refine,["gr_integer()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())","[any()]",
                     seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_character()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())","[any()]",
                     seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_remote_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_record_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_predefined_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_map_type()","[any()]",seen,env]}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}","[any()]",seen,
                     env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["{type, anno(), map, any}","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_integer_range_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_fun_type()","[any()]",seen,env]}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_function_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["{type, anno(), 'fun', []}","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_empty_list_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_bitstring_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,{typechecker,refine,["af_atom()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,
       {typechecker,refine,["af_annotated_type()","[any()]",seen,env]}}
{trace,<0.103.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,return_from,{typechecker,refine,4},{user_type,0,type,[]}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,call,{typechecker,refine,["[type()]","[any()]",seen,env]}}
{trace,<0.103.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.103.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.103.0>,return_from,{typechecker,refine,4},{user_type,0,type,[]}}
{trace,<0.103.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.103.0>,return_from,
       {typechecker,check_clause,5},
       {[{user_type,0,type,[]}],
        {venv,#{'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'TypeOrTypes' =>
                    {type,0,union,
                          [{type,0,list,[{user_type,0,type,[]}]},
                           {user_type,0,type,[]}]},
                'Types' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.103.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.103.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'ModOrFile' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
               'TypeOrTypes' =>
                   {type,0,union,
                       [{type,0,list,[{user_type,0,type,[]}]},
                        {user_type,0,type,[]}]}}},
         [{user_type,0,type,[]}],
         {type,0,union,
             [{type,0,list,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
         {clause,
             {215,9},
             [{var,{215,9},'Type'}],
             [],
             [{call,
                  {216,13},
                  {atom,{216,13},annotate_user_type},
                  [{var,{216,32},'ModOrFile'},
                   {call,
                       {216,44},
                       {atom,{216,44},':::'},
                       [{var,{216,56},'Type'},
                        {string,{216,56},"type ( )"}]}]}]},
         capture_vars]}}
{trace,<0.103.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'ModOrFile' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
               'Type' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'TypeOrTypes' =>
                   {type,0,union,
                       [{type,0,list,[{user_type,0,type,[]}]},
                        {user_type,0,type,[]}]}}},
         {type,0,union,
             [{type,0,list,[{user_type,0,type,[]}]},{user_type,0,type,[]}]},
         {call,
             {216,13},
             {atom,{216,13},annotate_user_type},
             [{var,{216,32},'ModOrFile'},
              {call,
                  {216,44},
                  {atom,{216,44},':::'},
                  [{var,{216,56},'Type'},{string,{216,56},"type ( )"}]}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,module,[]},
                   {remote_type,0,
                       [{atom,{194,37},file},{atom,{194,42},filename},[]]}]},
              {user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{216,32},'ModOrFile'},
          {call,
              {216,44},
              {atom,{216,44},':::'},
              [{var,{216,56},'Type'},{string,{216,56},"type ( )"}]}],
         {{216,13},
          {atom,{216,13},annotate_user_type},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{type,0,union,
                              [{type,0,module,[]},
                               {remote_type,0,
                                   [{atom,{194,37},file},
                                    {atom,{194,42},filename},
                                    []]}]},
                          {user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.103.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'TypeOrTypes' =>
                    {type,0,union,
                          [{type,0,list,[{user_type,0,type,[]}]},
                           {user_type,0,type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.103.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.103.0>,call,{typechecker,refine,["{type()}","{type()}",seen,env]}}
{trace,<0.103.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.103.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.103.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'TypeOrTypes' =>
                    {type,0,union,
                          [{type,0,list,[{user_type,0,type,[]}]},
                           {user_type,0,type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.103.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.103.0>,call,
       {typechecker,refine,
                    ["{atom() | [char()], [type()] | type()}",
                     "{atom() | [char()], [type()] | type()}",seen,env]}}
{trace,<0.103.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.103.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.103.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]},{type,0,none,[]}],
        {venv,#{'ModOrFile' =>
                    {type,0,union,
                          [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'TypeOrTypes' =>
                    {type,0,union,
                          [{type,0,list,[{user_type,0,type,[]}]},
                           {user_type,0,type,[]}]},
                'Types' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.103.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.103.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.104.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {220,1},
    annotate_user_type_,2,
    [{clause,
      {220,1},
      [{var,{220,21},'Filename'},
       {tuple,
        {220,31},
        [{atom,{220,32},user_type},
         {var,{220,43},'Anno'},
         {var,{220,49},'Name'},
         {var,{220,55},'Params'}]}],
      [],
      [{tuple,
        {222,5},
        [{atom,{222,6},user_type},
         {call,
          {222,17},
          {remote,{222,25},{atom,{222,17},erl_anno},{atom,{222,26},set_file}},
          [{var,{222,35},'Filename'},{var,{222,45},'Anno'}]},
         {var,{222,52},'Name'},
         {lc,
          {223,6},
          {call,
           {223,7},
           {atom,{223,7},annotate_user_type_},
           [{var,{223,27},'Filename'},{var,{223,37},'Param'}]},
          [{generate,
            {223,53},
            {var,{223,47},'Param'},
            {var,{223,56},'Params'}}]}]}]},
     {clause,
      {224,1},
      [{var,{224,21},'Filename'},
       {tuple,
        {224,31},
        [{atom,{224,32},type},
         {var,{224,38},'Anno'},
         {atom,{224,44},record},
         {match,
          {224,52},
          {var,{224,52},'RecName'},
          {cons,{224,62},{var,{224,63},'_'},{nil,{224,64}}}}]}],
      [],
      [{tuple,
        {226,5},
        [{atom,{226,6},type},
         {call,
          {226,12},
          {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
          [{var,{226,30},'Filename'},{var,{226,40},'Anno'}]},
         {atom,{226,47},record},
         {var,{226,55},'RecName'}]}]},
     {clause,
      {227,1},
      [{var,{227,21},'Filename'},
       {tuple,
        {227,31},
        [{atom,{227,32},type},
         {var,{227,38},'Anno'},
         {var,{227,44},'T'},
         {var,{227,47},'Params'}]}],
      [[{call,{227,61},{atom,{227,61},is_list},[{var,{227,69},'Params'}]}]],
      [{tuple,
        {228,5},
        [{atom,{228,6},type},
         {var,{228,12},'Anno'},
         {var,{228,18},'T'},
         {lc,
          {228,21},
          {call,
           {228,23},
           {atom,{228,23},annotate_user_types},
           [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
          [{generate,
            {229,32},
            {var,{229,26},'Param'},
            {call,
             {229,36},
             {atom,{229,36},':::'},
             [{var,{229,48},'Params'},
              {string,{229,48},"[ type ( ) ]"}]}}]}]}]},
     {clause,
      {230,1},
      [{var,{230,21},'Filename'},
       {tuple,
        {230,31},
        [{atom,{230,32},ann_type},
         {var,{230,42},'Anno'},
         {cons,
          {230,48},
          {var,{230,49},'Var'},
          {cons,{230,54},{var,{230,54},'Type'},{nil,{230,58}}}}]}],
      [],
      [{match,
        {232,5},
        {var,{232,5},'Type'},
        {call,
         {232,13},
         {atom,{232,13},':::'},
         [{var,{232,25},'Type'},{string,{232,25},"type ( )"}]}},
       {tuple,
        {233,5},
        [{atom,{233,6},ann_type},
         {var,{233,16},'Anno'},
         {cons,
          {233,22},
          {var,{233,23},'Var'},
          {cons,
           {233,28},
           {call,
            {233,28},
            {atom,{233,28},annotate_user_type_},
            [{var,{233,48},'Filename'},{var,{233,58},'Type'}]},
           {nil,{233,63}}}}]}]},
     {clause,
      {234,1},
      [{var,{234,21},'_Filename'},{var,{234,32},'Type'}],
      [],
      [{var,{235,5},'Type'}]}]}]}}
{trace,<0.104.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
          {user_type,0,type,[]}],
         {user_type,0,type,[]},
         {clause,
             {220,1},
             [{var,{220,21},'Filename'},
              {tuple,
                  {220,31},
                  [{atom,{220,32},user_type},
                   {var,{220,43},'Anno'},
                   {var,{220,49},'Name'},
                   {var,{220,55},'Params'}]}],
             [],
             [{tuple,
                  {222,5},
                  [{atom,{222,6},user_type},
                   {call,
                       {222,17},
                       {remote,
                           {222,25},
                           {atom,{222,17},erl_anno},
                           {atom,{222,26},set_file}},
                       [{var,{222,35},'Filename'},{var,{222,45},'Anno'}]},
                   {var,{222,52},'Name'},
                   {lc,{223,6},
                       {call,
                           {223,7},
                           {atom,{223,7},annotate_user_type_},
                           [{var,{223,27},'Filename'},{var,{223,37},'Param'}]},
                       [{generate,
                            {223,53},
                            {var,{223,47},'Param'},
                            {var,{223,56},'Params'}}]}]}]},
         bind_vars]}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Name' => {type,0,atom,[]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
         {call,
             {222,17},
             {remote,
                 {222,25},
                 {atom,{222,17},erl_anno},
                 {atom,{222,26},set_file}},
             [{var,{222,35},'Filename'},{var,{222,45},'Anno'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                   {type,0,list,[{type,0,char,[]}]}]},
              {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {constraints,#{},#{},#{}}},
         [{var,{222,35},'Filename'},{var,{222,45},'Anno'}],
         {{222,17},
          {remote,{222,25},{atom,{222,17},erl_anno},{atom,{222,26},set_file}},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'File'},{var,0,'Anno'}]},
                     {var,0,'Anno'}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'File'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           filename,[]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Anno'},
                       {user_type,
                           [{file,"erl_anno.erl"},{location,0}],
                           anno,[]}]]}]]}]}]}}
{trace,<0.104.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' => {type,0,list,[{type,0,char,[]}]},
                'Name' => {type,0,atom,[]},
                'Params' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Name' => {type,0,atom,[]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {223,7},
             {atom,{223,7},annotate_user_type_},
             [{var,{223,27},'Filename'},{var,{223,37},'Param'}]},
         {fun_ty,
             [{remote_type,0,
                  [{atom,{219,27},file},{atom,{219,32},filename},[]]},
              {user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{223,27},'Filename'},{var,{223,37},'Param'}],
         {{223,7},
          {atom,{223,7},annotate_user_type_},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{remote_type,0,
                              [{atom,{219,27},file},
                               {atom,{219,32},filename},
                               []]},
                          {user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.104.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' => {type,0,list,[{type,0,char,[]}]},
                'Name' => {type,0,atom,[]},
                'Param' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'Params' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{file:filename(), type()}",
                     "{file:filename(),\n           {user_type, anno(), type_name(), [abstract_type()]}}",
                     seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,["file:filename()","file:filename()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_type_variable()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["gr_integer()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["op","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_character()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","user_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_atom()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "{user_type, anno(), type_name(), [abstract_type()]}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]}]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,
             [{remote_type,0,
                           [{atom,{219,27},file},{atom,{219,32},filename},[]]},
              {type,0,union,
                    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_annotated_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_atom,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_bitstring_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_constrained_function_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_empty_list_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_fun_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_integer_range_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_map_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_predefined_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_record_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_remote_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_singleton_integer_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_tuple_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_type_union,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_type_variable,[]}]}]}}
{trace,<0.104.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.104.0>,return_from,
       {typechecker,check_clause,5},
       {[{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
         {type,0,union,
               [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_annotated_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_atom,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_bitstring_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_constrained_function_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_empty_list_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_fun_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_integer_range_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_map_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_predefined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_record_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_remote_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_tuple_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_union,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_variable,[]}]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' => {type,0,list,[{type,0,char,[]}]},
                'Name' => {type,0,atom,[]},
                'Params' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.104.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
          {type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {224,1},
             [{var,{224,21},'Filename'},
              {tuple,
                  {224,31},
                  [{atom,{224,32},type},
                   {var,{224,38},'Anno'},
                   {atom,{224,44},record},
                   {match,
                       {224,52},
                       {var,{224,52},'RecName'},
                       {cons,{224,62},{var,{224,63},'_'},{nil,{224,64}}}}]}],
             [],
             [{tuple,
                  {226,5},
                  [{atom,{226,6},type},
                   {call,
                       {226,12},
                       {remote,
                           {226,20},
                           {atom,{226,12},erl_anno},
                           {atom,{226,21},set_file}},
                       [{var,{226,30},'Filename'},{var,{226,40},'Anno'}]},
                   {atom,{226,47},record},
                   {var,{226,55},'RecName'}]}]},
         bind_vars]}}
{trace,<0.104.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Filename' => {type,0,list,[{type,0,char,[]}]},
      'RecName' =>
       {type,0,nonempty_list,
        [{type,0,union,
          [{type,0,tuple,
            [{atom,0,atom},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,atom,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,field_type},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,ann_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,atom},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,atom,[]}]},
                 {type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,remote_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {type,0,list,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,list,[{type,0,none,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,map},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_range_bound,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,record},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_field_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,user_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,var},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_type_var,[]}]}]}]}]}]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{var,{226,30},'Filename'},{var,{226,40},'Anno'}]},
   {fun_ty,
    [{type,0,union,
      [{type,0,binary,[{integer,0,0},{integer,0,8}]},
       {type,0,list,[{type,0,char,[]}]}]},
     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
    {constraints,#{},#{},#{}}},
   [{var,{226,30},'Filename'},{var,{226,40},'Anno'}],
   {{226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{var,0,'File'},{var,0,'Anno'}]},{var,0,'Anno'}]},
       [{type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'File'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}]]},
        {type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'Anno'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}]]}]]}]}]}}
{trace,<0.104.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Filename' => {type,0,list,[{type,0,char,[]}]},
     'RecName' =>
      {type,0,nonempty_list,
       [{type,0,union,
         [{type,0,tuple,
           [{atom,0,atom},
            {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
            {type,0,atom,[]}]},
          {type,0,tuple,
           [{atom,0,type},
            {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,ann_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,atom},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,atom,[]}]},
                {type,0,tuple,
                 [{atom,0,char},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,char,[]}]},
                {type,0,tuple,
                 [{atom,0,integer},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,integer,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   binary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   unary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,remote_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {type,0,list,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_binary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_character,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_unary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_integer,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,list,[{type,0,none,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_annotated_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_bitstring_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_constrained_function_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_empty_list_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_fun_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_integer_range_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_map_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_predefined_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_remote_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_tuple_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_union,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_variable,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_user_defined_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,map},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_range_bound,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,record},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_field_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,user_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,var},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_type_var,[]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Filename' => {type,0,list,[{type,0,char,[]}]},
      'RecName' =>
       {type,0,nonempty_list,
        [{type,0,union,
          [{type,0,tuple,
            [{atom,0,atom},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,atom,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,field_type},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,ann_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,atom},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,atom,[]}]},
                 {type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,remote_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {type,0,list,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,list,[{type,0,none,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,map},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_range_bound,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,record},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_field_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,user_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,var},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_type_var,[]}]}]}]}]}]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{var,{226,30},'Filename'},{var,{226,40},'Anno'}]},
   {fun_ty,
    [{type,0,union,
      [{type,0,binary,[{integer,0,0},{integer,0,8}]},
       {type,0,list,[{type,0,char,[]}]}]},
     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
    {constraints,#{},#{},#{}}},
   [{var,{226,30},'Filename'},{var,{226,40},'Anno'}],
   {{226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{var,0,'File'},{var,0,'Anno'}]},{var,0,'Anno'}]},
       [{type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'File'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}]]},
        {type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'Anno'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}]]}]]}]}]}}
{trace,<0.104.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Filename' => {type,0,list,[{type,0,char,[]}]},
     'RecName' =>
      {type,0,nonempty_list,
       [{type,0,union,
         [{type,0,tuple,
           [{atom,0,atom},
            {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
            {type,0,atom,[]}]},
          {type,0,tuple,
           [{atom,0,type},
            {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,ann_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,atom},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,atom,[]}]},
                {type,0,tuple,
                 [{atom,0,char},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,char,[]}]},
                {type,0,tuple,
                 [{atom,0,integer},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,integer,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   binary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   unary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,remote_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {type,0,list,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_binary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_character,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_unary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_integer,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,list,[{type,0,none,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_annotated_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_bitstring_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_constrained_function_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_empty_list_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_fun_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_integer_range_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_map_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_predefined_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_remote_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_tuple_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_union,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_variable,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_user_defined_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,map},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_range_bound,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,record},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_field_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,user_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,var},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_type_var,[]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Filename' => {type,0,list,[{type,0,char,[]}]},
      'RecName' =>
       {type,0,nonempty_list,
        [{type,0,union,
          [{type,0,tuple,
            [{atom,0,atom},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,atom,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,field_type},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,ann_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,atom},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,atom,[]}]},
                 {type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,remote_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {type,0,list,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,list,[{type,0,none,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,map},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_range_bound,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,record},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_field_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,user_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,var},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_type_var,[]}]}]}]}]}]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{var,{226,30},'Filename'},{var,{226,40},'Anno'}]},
   {fun_ty,
    [{type,0,union,
      [{type,0,binary,[{integer,0,0},{integer,0,8}]},
       {type,0,list,[{type,0,char,[]}]}]},
     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
    {constraints,#{},#{},#{}}},
   [{var,{226,30},'Filename'},{var,{226,40},'Anno'}],
   {{226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{var,0,'File'},{var,0,'Anno'}]},{var,0,'Anno'}]},
       [{type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'File'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}]]},
        {type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'Anno'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}]]}]]}]}]}}
{trace,<0.104.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Filename' => {type,0,list,[{type,0,char,[]}]},
     'RecName' =>
      {type,0,nonempty_list,
       [{type,0,union,
         [{type,0,tuple,
           [{atom,0,atom},
            {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
            {type,0,atom,[]}]},
          {type,0,tuple,
           [{atom,0,type},
            {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,ann_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,atom},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,atom,[]}]},
                {type,0,tuple,
                 [{atom,0,char},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,char,[]}]},
                {type,0,tuple,
                 [{atom,0,integer},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,integer,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   binary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   unary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,remote_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {type,0,list,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_binary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_character,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_unary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_integer,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,list,[{type,0,none,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_annotated_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_bitstring_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_constrained_function_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_empty_list_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_fun_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_integer_range_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_map_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_predefined_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_remote_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_tuple_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_union,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_variable,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_user_defined_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,map},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_range_bound,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,record},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_field_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,user_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,var},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_type_var,[]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
 {typechecker,type_check_call,
  [{venv,
    #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
      'Filename' => {type,0,list,[{type,0,char,[]}]},
      'RecName' =>
       {type,0,nonempty_list,
        [{type,0,union,
          [{type,0,tuple,
            [{atom,0,atom},
             {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
             {type,0,atom,[]}]},
           {type,0,tuple,
            [{atom,0,type},
             {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
             {atom,0,field_type},
             {type,0,list,
              [{type,0,union,
                [{type,0,tuple,
                  [{atom,0,ann_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_anno,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,atom},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,atom,[]}]},
                 {type,0,tuple,
                  [{atom,0,char},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,char,[]}]},
                 {type,0,tuple,
                  [{atom,0,integer},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,integer,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    binary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,op},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    unary_op,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
                 {type,0,tuple,
                  [{atom,0,remote_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {type,0,list,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          abstract_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,list,[{type,0,none,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,'fun'},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{type,0,union,
                      [{type,0,tuple,
                        [{atom,0,char},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,char,[]}]},
                       {type,0,tuple,
                        [{atom,0,integer},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {type,0,integer,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          binary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]},
                       {type,0,tuple,
                        [{atom,0,op},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          unary_op,[]},
                         {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          af_singleton_integer_type,[]}]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,binary},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      af_singleton_integer_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,map},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,nil},
                   {type,0,nil,[]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,range},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      gr_range_bound,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,record},
                   {type,0,list,
                    [{type,0,union,
                      [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                       {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_field_type,[]}]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {atom,0,any}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,tuple},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {atom,0,union},
                   {type,0,nonempty_list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,user_type},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    type_name,[]},
                   {type,0,list,
                    [{user_type,
                      [{file,"gradualizer_type.erl"},{location,0}],
                      abstract_type,[]}]}]},
                 {type,0,tuple,
                  [{atom,0,var},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    anno,[]},
                   {user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    gr_type_var,[]}]}]}]}]}]}]}}},
   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
   {call,
    {226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{var,{226,30},'Filename'},{var,{226,40},'Anno'}]},
   {fun_ty,
    [{type,0,union,
      [{type,0,binary,[{integer,0,0},{integer,0,8}]},
       {type,0,list,[{type,0,char,[]}]}]},
     {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}],
    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
    {constraints,#{},#{},#{}}},
   [{var,{226,30},'Filename'},{var,{226,40},'Anno'}],
   {{226,12},
    {remote,{226,20},{atom,{226,12},erl_anno},{atom,{226,21},set_file}},
    [{type,0,bounded_fun,
      [{type,0,'fun',
        [{type,0,product,[{var,0,'File'},{var,0,'Anno'}]},{var,0,'Anno'}]},
       [{type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'File'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]}]]},
        {type,0,constraint,
         [{atom,0,is_subtype},
          [{var,0,'Anno'},
           {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}]]}]]}]}]}}
{trace,<0.104.0>,return_from,
 {typechecker,type_check_call,6},
 {{venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Filename' => {type,0,list,[{type,0,char,[]}]},
     'RecName' =>
      {type,0,nonempty_list,
       [{type,0,union,
         [{type,0,tuple,
           [{atom,0,atom},
            {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
            {type,0,atom,[]}]},
          {type,0,tuple,
           [{atom,0,type},
            {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,ann_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,atom},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,atom,[]}]},
                {type,0,tuple,
                 [{atom,0,char},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,char,[]}]},
                {type,0,tuple,
                 [{atom,0,integer},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,integer,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   binary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   unary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,remote_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {type,0,list,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_binary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_character,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_unary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_integer,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,list,[{type,0,none,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_annotated_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_bitstring_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_constrained_function_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_empty_list_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_fun_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_integer_range_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_map_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_predefined_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_remote_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_tuple_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_union,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_variable,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_user_defined_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,map},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_range_bound,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,record},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_field_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,user_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,var},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_type_var,[]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{file:filename(),\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable()}",
                     "{file:filename(), {type, anno(), record, none()}}",seen,
                     env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,["file:filename()","file:filename()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_atom() |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_singleton_integer_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_type_variable()",
                     "{type, anno(), record, none()}",seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{type, anno(), record, none()}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{type, anno(), record, none()}",seen,
                     env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["union","record",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{type, anno(), record, none()}",seen,
                     env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), record, none()}",seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["tuple","record",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), record, none()}",seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["tuple","record",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{type, anno(), record, none()}",seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{type, anno(), record, none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), record, none()}",seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_character()","{type, anno(), record, none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{type, anno(), record, none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{type, anno(), record, none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{type, anno(), record, none()}",seen,
                     env]}}
{trace,<0.104.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["record","record",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["[af_atom() | af_record_field_type()]","none()",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.104.0>,return_from,
 {typechecker,check_clause,5},
 {[{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
   {type,0,union,
    [{user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_annotated_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_bitstring_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_constrained_function_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_empty_list_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_fun_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_integer_range_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_map_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_predefined_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_record_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_remote_type,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_singleton_integer_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_tuple_type,[]},
     {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_type_union,[]},
     {user_type,
      [{file,"gradualizer_type.erl"},{location,0}],
      af_type_variable,[]}]}],
  {venv,
   #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'Filename' => {type,0,list,[{type,0,char,[]}]},
     'RecName' =>
      {type,0,nonempty_list,
       [{type,0,union,
         [{type,0,tuple,
           [{atom,0,atom},
            {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
            {type,0,atom,[]}]},
          {type,0,tuple,
           [{atom,0,type},
            {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,ann_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_anno,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       abstract_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,atom},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,atom,[]}]},
                {type,0,tuple,
                 [{atom,0,char},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,char,[]}]},
                {type,0,tuple,
                 [{atom,0,integer},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,integer,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   binary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,op},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   unary_op,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]}]},
                {type,0,tuple,
                 [{atom,0,remote_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {type,0,list,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         abstract_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_binary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_character,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_unary_op,
                       [{user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       gr_integer,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,list,[{type,0,none,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,'fun'},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{type,0,union,
                     [{type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,char,[]}]},
                      {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {type,0,integer,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         binary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]},
                      {type,0,tuple,
                       [{atom,0,op},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         anno,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         unary_op,[]},
                        {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]}]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_annotated_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_bitstring_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_constrained_function_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_empty_list_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_fun_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_integer_range_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_map_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_predefined_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_remote_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_tuple_type,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_union,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_type_variable,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_user_defined_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,binary},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,map},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,nil},
                  {type,0,nil,[]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,range},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_range_bound,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,record},
                  {type,0,list,
                   [{type,0,union,
                     [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_atom,[]},
                      {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_record_field_type,[]}]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {atom,0,any}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,tuple},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {atom,0,union},
                  {type,0,nonempty_list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,user_type},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   type_name,[]},
                  {type,0,list,
                   [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}]},
                {type,0,tuple,
                 [{atom,0,var},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   anno,[]},
                  {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_type_var,[]}]}]}]}]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.104.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
          {type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {227,1},
             [{var,{227,21},'Filename'},
              {tuple,
                  {227,31},
                  [{atom,{227,32},type},
                   {var,{227,38},'Anno'},
                   {var,{227,44},'T'},
                   {var,{227,47},'Params'}]}],
             [[{call,
                   {227,61},
                   {atom,{227,61},is_list},
                   [{var,{227,69},'Params'}]}]],
             [{tuple,
                  {228,5},
                  [{atom,{228,6},type},
                   {var,{228,12},'Anno'},
                   {var,{228,18},'T'},
                   {lc,{228,21},
                       {call,
                           {228,23},
                           {atom,{228,23},annotate_user_types},
                           [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
                       [{generate,
                            {229,32},
                            {var,{229,26},'Param'},
                            {call,
                                {229,36},
                                {atom,{229,36},':::'},
                                [{var,{229,48},'Params'},
                                 {string,{229,48},"[ type ( ) ]"}]}}]}]}]},
         bind_vars]}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}}}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}}}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_field_type,[]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_field_type,[]}]}}}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_annotated_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_atom,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_bitstring_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_constrained_function_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_empty_list_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_fun_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_integer_range_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_map_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_predefined_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_record_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_remote_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_tuple_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_union,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_type_variable,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_user_defined_type,[]}]}}}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                   {atom,0,map_field_assoc},
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]},
              {type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                   {atom,0,map_field_exact},
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{type,0,tuple,
                     [{atom,0,type},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {atom,0,map_field_assoc},
                      {type,0,list,
                          [{user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               abstract_type,[]}]}]},
                 {type,0,tuple,
                     [{atom,0,type},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {atom,0,map_field_exact},
                      {type,0,list,
                          [{user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               abstract_type,[]}]}]}]}}}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_infinity,[]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     af_singleton_integer_type,[]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     gr_infinity,[]}]}}}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Param' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]}}},
         {type,0,union,
             [{type,0,tuple,
                  [{atom,0,type},
                   {user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       anno,[]},
                   {atom,0,product},
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]}]},
         {call,
             {228,23},
             {atom,{228,23},annotate_user_types},
             [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
         {fun_ty,
             [{type,0,union,
                  [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]},
              {type,0,union,
                  [{type,0,list,[{user_type,0,type,[]}]},
                   {user_type,0,type,[]}]}],
             {type,0,union,
                 [{user_type,0,type,[]},
                  {type,0,list,[{user_type,0,type,[]}]}]},
             {constraints,#{},#{},#{}}},
         [{var,{228,43},'Filename'},{var,{228,53},'Param'}],
         {{228,23},
          {atom,{228,23},annotate_user_types},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'ModOrFile'},{var,0,'TypeOrTypes'}]},
                     {type,0,union,
                         [{user_type,0,type,[]},
                          {type,0,list,[{user_type,0,type,[]}]}]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'ModOrFile'},
                       {type,0,union,
                           [{type,0,module,[]},
                            {remote_type,0,
                                [{atom,{209,31},file},
                                 {atom,{209,36},filename},
                                 []]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'TypeOrTypes'},
                       {type,0,union,
                           [{user_type,0,type,[]},
                            {type,0,list,[{user_type,0,type,[]}]}]}]]}]]}]}]}}
{trace,<0.104.0>,exception_from,
    {typechecker,type_check_call,6},
    {throw,
        {type_error,
            {call,
                {228,23},
                {atom,{228,23},annotate_user_types},
                [{var,{228,43},'Filename'},{var,{228,53},'Param'}]},
            {type,0,union,
                [{user_type,0,type,[]},{type,0,list,[{user_type,0,type,[]}]}]},
            {type,0,union,
                [{type,0,tuple,
                     [{atom,0,type},
                      {user_type,
                          [{file,"gradualizer_type.erl"},{location,0}],
                          anno,[]},
                      {atom,0,product},
                      {type,0,list,
                          [{user_type,
                               [{file,"gradualizer_type.erl"},{location,0}],
                               abstract_type,[]}]}]},
                 {user_type,
                     [{file,"gradualizer_type.erl"},{location,0}],
                     abstract_type,[]}]}}}}
{trace,<0.104.0>,return_from,
       {typechecker,check_clause,5},
       {[{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
         {type,0,union,
               [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_annotated_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_atom,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_bitstring_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_constrained_function_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_empty_list_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_fun_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_integer_range_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_map_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_predefined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_record_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_remote_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_tuple_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_union,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_variable,[]}]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Filename' => {type,0,list,[{type,0,char,[]}]},
                'Params' => {type,0,none,[]},
                'T' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.104.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
          {type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {230,1},
             [{var,{230,21},'Filename'},
              {tuple,
                  {230,31},
                  [{atom,{230,32},ann_type},
                   {var,{230,42},'Anno'},
                   {cons,
                       {230,48},
                       {var,{230,49},'Var'},
                       {cons,
                           {230,54},
                           {var,{230,54},'Type'},
                           {nil,{230,58}}}}]}],
             [],
             [{match,
                  {232,5},
                  {var,{232,5},'Type'},
                  {call,
                      {232,13},
                      {atom,{232,13},':::'},
                      [{var,{232,25},'Type'},{string,{232,25},"type ( )"}]}},
              {tuple,
                  {233,5},
                  [{atom,{233,6},ann_type},
                   {var,{233,16},'Anno'},
                   {cons,
                       {233,22},
                       {var,{233,23},'Var'},
                       {cons,
                           {233,28},
                           {call,
                               {233,28},
                               {atom,{233,28},annotate_user_type_},
                               [{var,{233,48},'Filename'},
                                {var,{233,58},'Type'}]},
                           {nil,{233,63}}}}]}]},
         bind_vars]}}
{trace,<0.104.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Filename' => {type,0,list,[{type,0,char,[]}]},
               'Type' =>
                   {type,0,union,
                       [{type,0,any,[]},
                        {type,0,tuple,
                            [{atom,0,var},
                             {user_type,
                                 [{file,"erl_anno.erl"},{location,0}],
                                 anno,[]},
                             {type,0,atom,[]}]}]},
               'Var' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_anno,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_anno,[]}]},
         {call,
             {233,28},
             {atom,{233,28},annotate_user_type_},
             [{var,{233,48},'Filename'},{var,{233,58},'Type'}]},
         {fun_ty,
             [{remote_type,0,
                  [{atom,{219,27},file},{atom,{219,32},filename},[]]},
              {user_type,0,type,[]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{233,48},'Filename'},{var,{233,58},'Type'}],
         {{233,28},
          {atom,{233,28},annotate_user_type_},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{remote_type,0,
                              [{atom,{219,27},file},
                               {atom,{219,32},filename},
                               []]},
                          {user_type,0,type,[]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.104.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'Filename' => {type,0,list,[{type,0,char,[]}]},
           'Type' =>
               {type,0,union,
                   [{type,0,any,[]},
                    {type,0,tuple,
                        [{atom,0,var},
                         {user_type,
                             [{file,"erl_anno.erl"},{location,0}],
                             anno,[]},
                         {type,0,atom,[]}]}]},
           'Var' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_anno,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{file:filename(),\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable()}",
                     "{file:filename(), {ann_type, anno(), none()}}",seen,
                     env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,["file:filename()","file:filename()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_atom() |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_singleton_integer_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_type_variable()",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,call,{typechecker,refine,["var","ann_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["integer","ann_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_character()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["char","ann_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,["remote_type","ann_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_atom()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.104.0>,call,{typechecker,refine,["atom","ann_type",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.104.0>,call,{typechecker,refine,["ann_type","ann_type",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["[af_anno() | abstract_type()]","none()",seen,env]}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.104.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.104.0>,return_from,
    {typechecker,check_clause,5},
    {[{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
      {type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_singleton_integer_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_variable,[]}]}],
     {venv,
         #{'Anno' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'Filename' => {type,0,list,[{type,0,char,[]}]},
           'Type' =>
               {type,0,union,
                   [{type,0,any,[]},
                    {type,0,tuple,
                        [{atom,0,var},
                         {user_type,
                             [{file,"erl_anno.erl"},{location,0}],
                             anno,[]},
                         {type,0,atom,[]}]}]},
           'Var' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        abstract_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_anno,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.104.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{219,27},file},{atom,{219,32},filename},[]]},
          {type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_variable,[]}]}],
         {user_type,0,type,[]},
         {clause,
             {234,1},
             [{var,{234,21},'_Filename'},{var,{234,32},'Type'}],
             [],
             [{var,{235,5},'Type'}]},
         bind_vars]}}
{trace,<0.104.0>,call,
       {typechecker,refine,
                    ["{file:filename(),\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable()}",
                     "{file:filename(),\n           af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_type_variable()}",
                     seen,env]}}
{trace,<0.104.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.104.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.104.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]},{type,0,none,[]}],
        {venv,#{'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]}]},
                '_Filename' => {type,0,list,[{type,0,char,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.104.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.104.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.105.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {238,1},
    get_module_from_annotation,1,
    [{clause,
      {238,1},
      [{var,{238,28},'Anno'}],
      [],
      [{'case',
        {239,5},
        {call,
         {239,10},
         {remote,{239,18},{atom,{239,10},erl_anno},{atom,{239,19},file}},
         [{var,{239,24},'Anno'}]},
        [{clause,
          {240,9},
          [{var,{240,9},'File'}],
          [[{call,{240,19},{atom,{240,19},is_list},[{var,{240,27},'File'}]}]],
          [{match,
            {241,13},
            {var,{241,13},'Basename'},
            {call,
             {241,24},
             {remote,
              {241,32},
              {atom,{241,24},filename},
              {atom,{241,33},basename}},
             [{var,{241,42},'File'},{string,{241,48},".erl"}]}},
           {tuple,
            {242,13},
            [{atom,{242,14},ok},
             {call,
              {242,18},
              {atom,{242,18},list_to_existing_atom},
              [{call,
                {242,41},
                {atom,{242,41},':::'},
                [{var,{242,53},'Basename'},
                 {string,{242,53},"string ( )"}]}]}]}]},
         {clause,
          {243,9},
          [{atom,{243,9},undefined}],
          [],
          [{atom,{244,13},none}]}]}]}]}]}}
{trace,<0.105.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{remote_type,0,[{atom,{237,34},erl_anno},{atom,{237,43},anno},[]]}],
         {type,0,union,
             [{type,0,tuple,[{atom,0,ok},{type,0,module,[]}]},{atom,0,none}]},
         {clause,
             {238,1},
             [{var,{238,28},'Anno'}],
             [],
             [{'case',
                  {239,5},
                  {call,
                      {239,10},
                      {remote,
                          {239,18},
                          {atom,{239,10},erl_anno},
                          {atom,{239,19},file}},
                      [{var,{239,24},'Anno'}]},
                  [{clause,
                       {240,9},
                       [{var,{240,9},'File'}],
                       [[{call,
                             {240,19},
                             {atom,{240,19},is_list},
                             [{var,{240,27},'File'}]}]],
                       [{match,
                            {241,13},
                            {var,{241,13},'Basename'},
                            {call,
                                {241,24},
                                {remote,
                                    {241,32},
                                    {atom,{241,24},filename},
                                    {atom,{241,33},basename}},
                                [{var,{241,42},'File'},
                                 {string,{241,48},".erl"}]}},
                        {tuple,
                            {242,13},
                            [{atom,{242,14},ok},
                             {call,
                                 {242,18},
                                 {atom,{242,18},list_to_existing_atom},
                                 [{call,
                                      {242,41},
                                      {atom,{242,41},':::'},
                                      [{var,{242,53},'Basename'},
                                       {string,{242,53},"string ( )"}]}]}]}]},
                   {clause,
                       {243,9},
                       [{atom,{243,9},undefined}],
                       [],
                       [{atom,{244,13},none}]}]}]},
         bind_vars]}}
{trace,<0.105.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         [{type,0,union,
              [{user_type,[{file,"erl_anno.erl"},{location,0}],filename,[]},
               {atom,0,undefined}]}],
         {type,0,union,
             [{atom,0,none},{type,0,tuple,[{atom,0,ok},{type,0,module,[]}]}]},
         {clause,
             {240,9},
             [{var,{240,9},'File'}],
             [[{call,
                   {240,19},
                   {atom,{240,19},is_list},
                   [{var,{240,27},'File'}]}]],
             [{match,
                  {241,13},
                  {var,{241,13},'Basename'},
                  {call,
                      {241,24},
                      {remote,
                          {241,32},
                          {atom,{241,24},filename},
                          {atom,{241,33},basename}},
                      [{var,{241,42},'File'},{string,{241,48},".erl"}]}},
              {tuple,
                  {242,13},
                  [{atom,{242,14},ok},
                   {call,
                       {242,18},
                       {atom,{242,18},list_to_existing_atom},
                       [{call,
                            {242,41},
                            {atom,{242,41},':::'},
                            [{var,{242,53},'Basename'},
                             {string,{242,53},"string ( )"}]}]}]}]},
         capture_vars]}}
{trace,<0.105.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'Basename' =>
                   {type,0,union,
                       [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                        {type,0,list,[{type,0,char,[]}]}]},
               'File' => {type,0,list,[{type,0,any,[]}]}}},
         {type,0,atom,[]},
         {call,
             {242,18},
             {atom,{242,18},list_to_existing_atom},
             [{call,
                  {242,41},
                  {atom,{242,41},':::'},
                  [{var,{242,53},'Basename'},
                   {string,{242,53},"string ( )"}]}]},
         {fun_ty,
             [{type,0,list,[{type,0,char,[]}]}],
             {type,0,atom,[]},
             {constraints,#{},#{},#{}}},
         [{call,
              {242,41},
              {atom,{242,41},':::'},
              [{var,{242,53},'Basename'},{string,{242,53},"string ( )"}]}],
         {{242,18},
          {atom,{242,18},list_to_existing_atom},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,[{var,0,'String'}]},{type,0,atom,[]}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'String'},{type,0,string,[]}]]}]]}]}]}}
{trace,<0.105.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Basename' =>
                    {type,0,union,
                          [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                           {type,0,list,[{type,0,char,[]}]}]},
                'File' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.105.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.105.0>,call,
       {typechecker,refine,["filename() | undefined","[any()]",seen,env]}}
{trace,<0.105.0>,call,{typechecker,refine,["filename()","[any()]",seen,env]}}
{trace,<0.105.0>,call,{typechecker,refine,["[char()]","[any()]",seen,env]}}
{trace,<0.105.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.105.0>,call,{typechecker,refine,["<<_:_*8>>","[any()]",seen,env]}}
{trace,<0.105.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.105.0>,return_from,
       {typechecker,refine,4},
       {type,0,binary,[{integer,0,0},{integer,0,8}]}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.105.0>,call,{typechecker,refine,["undefined","[any()]",seen,env]}}
{trace,<0.105.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.105.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{atom,0,undefined},
              {type,0,binary,[{integer,0,0},{integer,0,8}]}]}}
{trace,<0.105.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.105.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,union,
               [{atom,0,undefined},
                {type,0,binary,[{integer,0,0},{integer,0,8}]}]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Basename' =>
                    {type,0,union,
                          [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                           {type,0,list,[{type,0,char,[]}]}]},
                'File' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.105.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.105.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         [{type,0,union,
              [{atom,0,undefined},
               {type,0,binary,[{integer,0,0},{integer,0,8}]}]}],
         {type,0,union,
             [{atom,0,none},{type,0,tuple,[{atom,0,ok},{type,0,module,[]}]}]},
         {clause,{243,9},[{atom,{243,9},undefined}],[],[{atom,{244,13},none}]},
         capture_vars]}}
{trace,<0.105.0>,call,
       {typechecker,refine,
                    ["{undefined | <<_:_*8>>}","{undefined}",seen,env]}}
{trace,<0.105.0>,call,
       {typechecker,refine,["undefined | <<_:_*8>>","undefined",seen,env]}}
{trace,<0.105.0>,call,{typechecker,refine,["<<_:_*8>>","undefined",seen,env]}}
{trace,<0.105.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.105.0>,call,{typechecker,refine,["undefined","undefined",seen,env]}}
{trace,<0.105.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.105.0>,return_from,
       {typechecker,refine,4},
       {type,0,binary,[{integer,0,0},{integer,0,8}]}}
{trace,<0.105.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.105.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,[{type,0,binary,[{integer,0,0},{integer,0,8}]}]}}
{trace,<0.105.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.105.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,binary,[{integer,0,0},{integer,0,8}]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.105.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.105.0>,call,
       {typechecker,refine,
                    ["{erl_anno:anno()}","{erl_anno:anno()}",seen,env]}}
{trace,<0.105.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.105.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.105.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Basename' =>
                    {type,0,union,
                          [{type,0,binary,[{integer,0,0},{integer,0,8}]},
                           {type,0,list,[{type,0,char,[]}]}]},
                'File' => {type,0,list,[{type,0,any,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.105.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.105.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.106.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {249,1},
    substitute_type_vars,2,
    [{clause,
      {249,1},
      [{tuple,
        {249,22},
        [{atom,{249,23},type},
         {var,{249,29},'L'},
         {atom,{249,32},'fun'},
         {cons,
          {249,39},
          {match,
           {249,40},
           {var,{249,40},'Any'},
           {tuple,
            {249,46},
            [{atom,{249,47},type},{var,{249,53},'_'},{atom,{249,56},any}]}},
          {cons,{249,62},{var,{249,62},'RetTy'},{nil,{249,67}}}}]},
       {var,{249,71},'TVars'}],
      [],
      [{match,
        {254,5},
        {var,{254,5},'RetTy'},
        {call,
         {254,14},
         {atom,{254,14},':::'},
         [{var,{254,26},'RetTy'},{string,{254,26},"type ( )"}]}},
       {tuple,
        {255,5},
        [{atom,{255,6},type},
         {var,{255,12},'L'},
         {atom,{255,15},'fun'},
         {cons,
          {255,22},
          {var,{255,23},'Any'},
          {cons,
           {255,28},
           {call,
            {255,28},
            {atom,{255,28},substitute_type_vars},
            [{var,{255,49},'RetTy'},{var,{255,56},'TVars'}]},
           {nil,{255,62}}}}]}]},
     {clause,
      {256,1},
      [{tuple,
        {256,22},
        [{var,{256,23},'Tag'},
         {var,{256,28},'L'},
         {var,{256,31},'T'},
         {var,{256,34},'Params'}]},
       {var,{256,43},'TVars'}],
      [[{op,
         {257,20},
         'orelse',
         {op,{257,12},'==',{var,{257,8},'Tag'},{atom,{257,15},type}},
         {op,{258,12},'==',{var,{258,8},'Tag'},{atom,{258,15},user_type}}},
        {call,{259,8},{atom,{259,8},is_list},[{var,{259,16},'Params'}]}]],
      [{tuple,
        {264,5},
        [{var,{264,6},'Tag'},
         {var,{264,11},'L'},
         {var,{264,14},'T'},
         {lc,
          {264,17},
          {call,
           {264,18},
           {atom,{264,18},substitute_type_vars},
           [{var,{264,39},'P'},{var,{264,42},'TVars'}]},
          [{generate,
            {264,54},
            {var,{264,52},'P'},
            {call,
             {264,58},
             {atom,{264,58},':::'},
             [{var,{264,70},'Params'},{string,{264,70},"list ( )"}]}}]}]}]},
     {clause,
      {265,1},
      [{tuple,
        {265,22},
        [{atom,{265,23},remote_type},
         {var,{265,36},'L'},
         {cons,
          {265,39},
          {var,{265,40},'M'},
          {cons,
           {265,43},
           {var,{265,43},'T'},
           {cons,{265,46},{var,{265,46},'Params'},{nil,{265,52}}}}}]},
       {var,{265,56},'TVars'}],
      [],
      [{tuple,
        {266,5},
        [{atom,{266,6},remote_type},
         {var,{266,19},'L'},
         {cons,
          {266,22},
          {var,{266,23},'M'},
          {cons,
           {266,26},
           {var,{266,26},'T'},
           {cons,
            {266,29},
            {lc,
             {266,29},
             {call,
              {266,30},
              {atom,{266,30},substitute_type_vars},
              [{var,{266,51},'P'},{var,{266,54},'TVars'}]},
             [{generate,{266,66},{var,{266,64},'P'},{var,{266,69},'Params'}}]},
            {nil,{266,76}}}}}]}]},
     {clause,
      {267,1},
      [{tuple,
        {267,22},
        [{atom,{267,23},ann_type},
         {var,{267,33},'L'},
         {cons,
          {267,36},
          {match,
           {267,37},
           {var,{267,37},'Var'},
           {tuple,
            {267,43},
            [{atom,{267,44},var},{var,{267,49},'_'},{var,{267,52},'_'}]}},
          {cons,{267,56},{var,{267,56},'Type'},{nil,{267,60}}}}]},
       {var,{267,64},'TVars'}],
      [],
      [{match,
        {269,5},
        {var,{269,5},'Type'},
        {call,
         {269,13},
         {atom,{269,13},':::'},
         [{var,{269,25},'Type'},{string,{269,25},"type ( )"}]}},
       {tuple,
        {270,5},
        [{atom,{270,6},ann_type},
         {var,{270,16},'L'},
         {cons,
          {270,19},
          {var,{270,20},'Var'},
          {cons,
           {270,25},
           {call,
            {270,25},
            {atom,{270,25},substitute_type_vars},
            [{var,{270,46},'Type'},{var,{270,52},'TVars'}]},
           {nil,{270,58}}}}]}]},
     {clause,
      {271,1},
      [{tuple,
        {271,22},
        [{atom,{271,23},var},{var,{271,28},'L'},{var,{271,31},'Var'}]},
       {var,{271,37},'TVars'}],
      [],
      [{'case',
        {272,5},
        {var,{272,10},'TVars'},
        [{clause,
          {273,9},
          [{map,
            {273,9},
            [{map_field_exact,
              {273,15},
              {var,{273,11},'Var'},
              {var,{273,18},'Type'}}]}],
          [],
          [{var,{273,27},'Type'}]},
         {clause,
          {274,9},
          [{var,{274,9},'_'}],
          [],
          [{tuple,
            {274,27},
            [{atom,{274,28},var},
             {var,{274,33},'L'},
             {var,{274,36},'Var'}]}]}]}]},
     {clause,
      {276,1},
      [{match,
        {276,22},
        {var,{276,22},'Other'},
        {tuple,
         {276,30},
         [{atom,{276,31},type},
          {var,{276,37},'_'},
          {var,{276,40},'T'},
          {atom,{276,43},any}]}},
       {var,{276,49},'_'}],
      [[{op,{277,10},'==',{var,{277,8},'T'},{atom,{277,13},tuple}}],
       [{op,{277,22},'==',{var,{277,20},'T'},{atom,{277,25},map}}]],
      [{var,{278,5},'Other'}]},
     {clause,
      {279,1},
      [{match,
        {279,22},
        {var,{279,22},'Other'},
        {tuple,
         {279,30},
         [{atom,{279,31},op},
          {var,{279,35},'_'},
          {var,{279,38},'_Op'},
          {var,{279,43},'_Arg'}]}},
       {var,{279,50},'_'}],
      [],
      [{var,{281,5},'Other'}]},
     {clause,
      {282,1},
      [{match,
        {282,22},
        {var,{282,22},'Other'},
        {tuple,
         {282,30},
         [{atom,{282,31},op},
          {var,{282,35},'_'},
          {var,{282,38},'_Op'},
          {var,{282,43},'_Arg1'},
          {var,{282,50},'_Arg2'}]}},
       {var,{282,58},'_'}],
      [],
      [{var,{284,5},'Other'}]},
     {clause,
      {285,1},
      [{match,
        {285,22},
        {var,{285,22},'Other'},
        {tuple,
         {285,30},
         [{var,{285,31},'T'},{var,{285,34},'_'},{var,{285,37},'_'}]}},
       {var,{285,41},'_'}],
      [[{op,{286,10},'==',{var,{286,8},'T'},{atom,{286,13},atom}}],
       [{op,{286,21},'==',{var,{286,19},'T'},{atom,{286,24},integer}}],
       [{op,{286,35},'==',{var,{286,33},'T'},{atom,{286,38},char}}]],
      [{var,{287,5},'Other'}]}]}]}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,type,[]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {249,1},
             [{tuple,
                  {249,22},
                  [{atom,{249,23},type},
                   {var,{249,29},'L'},
                   {atom,{249,32},'fun'},
                   {cons,
                       {249,39},
                       {match,
                           {249,40},
                           {var,{249,40},'Any'},
                           {tuple,
                               {249,46},
                               [{atom,{249,47},type},
                                {var,{249,53},'_'},
                                {atom,{249,56},any}]}},
                       {cons,
                           {249,62},
                           {var,{249,62},'RetTy'},
                           {nil,{249,67}}}}]},
              {var,{249,71},'TVars'}],
             [],
             [{match,
                  {254,5},
                  {var,{254,5},'RetTy'},
                  {call,
                      {254,14},
                      {atom,{254,14},':::'},
                      [{var,{254,26},'RetTy'},{string,{254,26},"type ( )"}]}},
              {tuple,
                  {255,5},
                  [{atom,{255,6},type},
                   {var,{255,12},'L'},
                   {atom,{255,15},'fun'},
                   {cons,
                       {255,22},
                       {var,{255,23},'Any'},
                       {cons,
                           {255,28},
                           {call,
                               {255,28},
                               {atom,{255,28},substitute_type_vars},
                               [{var,{255,49},'RetTy'},
                                {var,{255,56},'TVars'}]},
                           {nil,{255,62}}}}]}]},
         bind_vars]}}
{trace,<0.106.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Any' =>
                   {type,0,tuple,
                       [{atom,0,type},
                        {remote_type,0,
                            [{atom,{254,35},erl_anno},
                             {atom,{254,44},anno},
                             []]},
                        {atom,0,any}]},
               'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'RetTy' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'TVars' =>
                   {type,0,map,
                       [{type,0,map_field_assoc,
                            [{type,0,atom,[]},{user_type,0,type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_any_fun_args,[]}]},
         {call,
             {255,28},
             {atom,{255,28},substitute_type_vars},
             [{var,{255,49},'RetTy'},{var,{255,56},'TVars'}]},
         {fun_ty,
             [{user_type,0,type,[]},
              {type,0,map,
                  [{type,0,map_field_assoc,
                       [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{255,49},'RetTy'},{var,{255,56},'TVars'}],
         {{255,28},
          {atom,{255,28},substitute_type_vars},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{user_type,0,type,[]},
                          {type,0,map,
                              [{type,0,map_field_assoc,
                                   [{type,0,atom,[]},
                                    {user_type,0,type,[]}]}]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.106.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Any' =>
               {type,0,tuple,
                   [{atom,0,type},
                    {remote_type,0,
                        [{atom,{254,35},erl_anno},{atom,{254,44},anno},[]]},
                    {atom,0,any}]},
           'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'RetTy' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]},
           'TVars' =>
               {type,0,map,
                   [{type,0,map_field_assoc,
                        [{type,0,atom,[]},{user_type,0,type,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type(), #{atom() => type()}}",
                     "{{type, anno(), 'fun', none()}, #{atom() => type()}}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["type()","{type, anno(), 'fun', none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{type, anno(), 'fun', none()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["user_type","type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{type, anno(), 'fun', none()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{type, anno(), 'fun', none()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["union","'fun'",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{type, anno(), 'fun', none()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{type, anno(), 'fun', none()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["tuple","'fun'",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{type, anno(), 'fun', none()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["tuple","'fun'",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{type, anno(), 'fun', none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{type, anno(), 'fun', none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{type, anno(), 'fun', none()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["op","type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_character()","{type, anno(), 'fun', none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{type, anno(), 'fun', none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{type, anno(), 'fun', none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{type, anno(), 'fun', none()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["record","'fun'",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{type, anno(), 'fun', none()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["type_name()","'fun'",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
 {typechecker,check_clause,5},
 {[{user_type,0,type,[]},
   {type,0,map,
    [{type,0,map_field_assoc,[{type,0,atom,[]},{user_type,0,type,[]}]}]}],
  {venv,
   #{'Any' =>
      {type,0,tuple,
       [{atom,0,type},
        {remote_type,0,[{atom,{254,35},erl_anno},{atom,{254,44},anno},[]]},
        {atom,0,any}]},
     'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
     'RetTy' =>
      {type,0,union,
       [{type,0,tuple,
         [{atom,0,ann_type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,list,
           [{type,0,union,
             [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_anno,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               abstract_type,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,atom},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,char},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,integer},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,integer,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           binary_op,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           af_singleton_integer_type,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           af_singleton_integer_type,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],unary_op,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           af_singleton_integer_type,[]}]},
        {type,0,tuple,
         [{atom,0,remote_type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {type,0,list,
           [{type,0,union,
             [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_atom,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_atom,[]},
              {type,0,list,
               [{user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 abstract_type,[]}]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,binary},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,binary},
          {type,0,list,
           [{type,0,union,
             [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_character,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_unary_op,
               [{user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               gr_integer,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,'fun'},
          {type,0,list,[{type,0,none,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,'fun'},
          {type,0,nil,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,nil},
          {type,0,nil,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,range},
          {type,0,list,
           [{type,0,union,
             [{type,0,tuple,
               [{atom,0,char},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,char,[]}]},
              {type,0,tuple,
               [{atom,0,integer},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {type,0,integer,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 binary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]},
              {type,0,tuple,
               [{atom,0,op},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 anno,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 unary_op,[]},
                {user_type,
                 [{file,"gradualizer_type.erl"},{location,0}],
                 af_singleton_integer_type,[]}]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,tuple},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             abstract_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
          {atom,0,union},
          {type,0,nonempty_list,
           [{type,0,union,
             [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_atom,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_singleton_integer_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_variable,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,binary},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_singleton_integer_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,bounded_fun},
          {type,0,list,
           [{type,0,union,
             [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_function_type,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_function_constraint,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,'fun'},
          {type,0,nil,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,map},
          {atom,0,any}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,map},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             af_assoc_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,nil},
          {type,0,nil,[]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,range},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             gr_range_bound,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,record},
          {type,0,list,
           [{type,0,union,
             [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_atom,[]},
              {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_field_type,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,tuple},
          {atom,0,any}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,tuple},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             abstract_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {atom,0,union},
          {type,0,nonempty_list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             abstract_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           type_name,[]},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             abstract_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,user_type},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           type_name,[]},
          {type,0,list,
           [{user_type,
             [{file,"gradualizer_type.erl"},{location,0}],
             abstract_type,[]}]}]},
        {type,0,tuple,
         [{atom,0,var},
          {user_type,[{file,"gradualizer_type.erl"},{location,0}],anno,[]},
          {user_type,
           [{file,"gradualizer_type.erl"},{location,0}],
           gr_type_var,[]}]}]},
     'TVars' =>
      {type,0,map,
       [{type,0,map_field_assoc,[{type,0,atom,[]},{user_type,0,type,[]}]}]}}},
  {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,type,[]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {256,1},
             [{tuple,
                  {256,22},
                  [{var,{256,23},'Tag'},
                   {var,{256,28},'L'},
                   {var,{256,31},'T'},
                   {var,{256,34},'Params'}]},
              {var,{256,43},'TVars'}],
             [[{op,{257,20},
                   'orelse',
                   {op,{257,12},'==',{var,{257,8},'Tag'},{atom,{257,15},type}},
                   {op,{258,12},
                       '==',
                       {var,{258,8},'Tag'},
                       {atom,{258,15},user_type}}},
               {call,
                   {259,8},
                   {atom,{259,8},is_list},
                   [{var,{259,16},'Params'}]}]],
             [{tuple,
                  {264,5},
                  [{var,{264,6},'Tag'},
                   {var,{264,11},'L'},
                   {var,{264,14},'T'},
                   {lc,{264,17},
                       {call,
                           {264,18},
                           {atom,{264,18},substitute_type_vars},
                           [{var,{264,39},'P'},{var,{264,42},'TVars'}]},
                       [{generate,
                            {264,54},
                            {var,{264,52},'P'},
                            {call,
                                {264,58},
                                {atom,{264,58},':::'},
                                [{var,{264,70},'Params'},
                                 {string,{264,70},"list ( )"}]}}]}]}]},
         bind_vars]}}
{trace,<0.106.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'P' => {type,0,any,[]},
               'Params' => {type,0,none,[]},
               'T' => {type,0,none,[]},
               'TVars' =>
                   {type,0,map,
                       [{type,0,map_field_assoc,
                            [{type,0,atom,[]},{user_type,0,type,[]}]}]},
               'Tag' => {type,0,none,[]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {264,18},
             {atom,{264,18},substitute_type_vars},
             [{var,{264,39},'P'},{var,{264,42},'TVars'}]},
         {fun_ty,
             [{user_type,0,type,[]},
              {type,0,map,
                  [{type,0,map_field_assoc,
                       [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{264,39},'P'},{var,{264,42},'TVars'}],
         {{264,18},
          {atom,{264,18},substitute_type_vars},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{user_type,0,type,[]},
                          {type,0,map,
                              [{type,0,map_field_assoc,
                                   [{type,0,atom,[]},
                                    {user_type,0,type,[]}]}]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.106.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'L' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'P' => {type,0,any,[]},
                'Params' => {type,0,none,[]},
                'T' => {type,0,none,[]},
                'TVars' =>
                    {type,0,map,
                          [{type,0,map_field_assoc,
                                 [{type,0,atom,[]},{user_type,0,type,[]}]}]},
                'Tag' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.106.0>,return_from,
       {typechecker,check_clause,5},
       {[{user_type,0,type,[]},
         {type,0,map,
               [{type,0,map_field_assoc,
                      [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
        {venv,#{'L' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'Params' => {type,0,none,[]},
                'T' => {type,0,none,[]},
                'TVars' =>
                    {type,0,map,
                          [{type,0,map_field_assoc,
                                 [{type,0,atom,[]},{user_type,0,type,[]}]}]},
                'Tag' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
 {typechecker,check_clause,
  [{venv,#{}},
   [{user_type,0,type,[]},
    {type,0,map,
     [{type,0,map_field_assoc,[{type,0,atom,[]},{user_type,0,type,[]}]}]}],
   {user_type,0,type,[]},
   {clause,
    {265,1},
    [{tuple,
      {265,22},
      [{atom,{265,23},remote_type},
       {var,{265,36},'L'},
       {cons,
        {265,39},
        {var,{265,40},'M'},
        {cons,
         {265,43},
         {var,{265,43},'T'},
         {cons,{265,46},{var,{265,46},'Params'},{nil,{265,52}}}}}]},
     {var,{265,56},'TVars'}],
    [],
    [{tuple,
      {266,5},
      [{atom,{266,6},remote_type},
       {var,{266,19},'L'},
       {cons,
        {266,22},
        {var,{266,23},'M'},
        {cons,
         {266,26},
         {var,{266,26},'T'},
         {cons,
          {266,29},
          {lc,
           {266,29},
           {call,
            {266,30},
            {atom,{266,30},substitute_type_vars},
            [{var,{266,51},'P'},{var,{266,54},'TVars'}]},
           [{generate,{266,66},{var,{266,64},'P'},{var,{266,69},'Params'}}]},
          {nil,{266,76}}}}}]}]},
   bind_vars]}}
{trace,<0.106.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'M' =>
                   {type,0,union,
                       [{type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]}]},
               'P' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]},
               'Params' =>
                   {type,0,union,
                       [{type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]}]},
               'T' =>
                   {type,0,union,
                       [{type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]}]},
               'TVars' =>
                   {type,0,map,
                       [{type,0,map_field_assoc,
                            [{type,0,atom,[]},{user_type,0,type,[]}]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {call,
             {266,30},
             {atom,{266,30},substitute_type_vars},
             [{var,{266,51},'P'},{var,{266,54},'TVars'}]},
         {fun_ty,
             [{user_type,0,type,[]},
              {type,0,map,
                  [{type,0,map_field_assoc,
                       [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{266,51},'P'},{var,{266,54},'TVars'}],
         {{266,30},
          {atom,{266,30},substitute_type_vars},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{user_type,0,type,[]},
                          {type,0,map,
                              [{type,0,map_field_assoc,
                                   [{type,0,atom,[]},
                                    {user_type,0,type,[]}]}]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.106.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'M' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'P' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_annotated_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_bitstring_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_constrained_function_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_empty_list_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_fun_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_integer_range_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_map_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_predefined_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_record_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_remote_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_tuple_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_union,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_type_variable,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_user_defined_type,[]}]},
           'Params' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'T' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'TVars' =>
               {type,0,map,
                   [{type,0,map_field_assoc,
                        [{type,0,atom,[]},{user_type,0,type,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type(), #{atom() => type()}}",
                     "{{remote_type, anno(), none()}, #{atom() => type()}}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["type()","{remote_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{remote_type, anno(), none()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{remote_type, anno(), none()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["var","remote_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{remote_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{remote_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{remote_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{remote_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{remote_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{remote_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["integer","remote_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{remote_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_character()","{remote_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["char","remote_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{remote_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{remote_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,["remote_type","remote_type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["[af_atom() | af_atom() | [abstract_type()]]","none()",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
    {typechecker,check_clause,5},
    {[{user_type,0,type,[]},
      {type,0,map,
          [{type,0,map_field_assoc,
               [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
     {venv,
         #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'M' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'Params' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'T' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'TVars' =>
               {type,0,map,
                   [{type,0,map_field_assoc,
                        [{type,0,atom,[]},{user_type,0,type,[]}]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,type,[]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {267,1},
             [{tuple,
                  {267,22},
                  [{atom,{267,23},ann_type},
                   {var,{267,33},'L'},
                   {cons,
                       {267,36},
                       {match,
                           {267,37},
                           {var,{267,37},'Var'},
                           {tuple,
                               {267,43},
                               [{atom,{267,44},var},
                                {var,{267,49},'_'},
                                {var,{267,52},'_'}]}},
                       {cons,{267,56},{var,{267,56},'Type'},{nil,{267,60}}}}]},
              {var,{267,64},'TVars'}],
             [],
             [{match,
                  {269,5},
                  {var,{269,5},'Type'},
                  {call,
                      {269,13},
                      {atom,{269,13},':::'},
                      [{var,{269,25},'Type'},{string,{269,25},"type ( )"}]}},
              {tuple,
                  {270,5},
                  [{atom,{270,6},ann_type},
                   {var,{270,16},'L'},
                   {cons,
                       {270,19},
                       {var,{270,20},'Var'},
                       {cons,
                           {270,25},
                           {call,
                               {270,25},
                               {atom,{270,25},substitute_type_vars},
                               [{var,{270,46},'Type'},{var,{270,52},'TVars'}]},
                           {nil,{270,58}}}}]}]},
         bind_vars]}}
{trace,<0.106.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'TVars' =>
                   {type,0,map,
                       [{type,0,map_field_assoc,
                            [{type,0,atom,[]},{user_type,0,type,[]}]}]},
               'Type' =>
                   {type,0,union,
                       [{type,0,any,[]},
                        {type,0,tuple,
                            [{atom,0,var},
                             {user_type,
                                 [{file,"erl_anno.erl"},{location,0}],
                                 anno,[]},
                             {type,0,atom,[]}]}]},
               'Var' =>
                   {type,0,tuple,
                       [{atom,0,var},
                        {user_type,
                            [{file,"erl_anno.erl"},{location,0}],
                            anno,[]},
                        {type,0,atom,[]}]}}},
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  abstract_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_anno,[]}]},
         {call,
             {270,25},
             {atom,{270,25},substitute_type_vars},
             [{var,{270,46},'Type'},{var,{270,52},'TVars'}]},
         {fun_ty,
             [{user_type,0,type,[]},
              {type,0,map,
                  [{type,0,map_field_assoc,
                       [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
             {user_type,0,type,[]},
             {constraints,#{},#{},#{}}},
         [{var,{270,46},'Type'},{var,{270,52},'TVars'}],
         {{270,25},
          {atom,{270,25},substitute_type_vars},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{user_type,0,type,[]},
                          {type,0,map,
                              [{type,0,map_field_assoc,
                                   [{type,0,atom,[]},
                                    {user_type,0,type,[]}]}]}]},
                     {user_type,0,type,[]}]},
                []]}]}]}}
{trace,<0.106.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'TVars' =>
               {type,0,map,
                   [{type,0,map_field_assoc,
                        [{type,0,atom,[]},{user_type,0,type,[]}]}]},
           'Type' =>
               {type,0,union,
                   [{type,0,any,[]},
                    {type,0,tuple,
                        [{atom,0,var},
                         {user_type,
                             [{file,"erl_anno.erl"},{location,0}],
                             anno,[]},
                         {type,0,atom,[]}]}]},
           'Var' =>
               {type,0,tuple,
                   [{atom,0,var},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {type,0,atom,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type(), #{atom() => type()}}",
                     "{{ann_type, anno(), none()}, #{atom() => type()}}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,["type()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["var","ann_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["integer","ann_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_character()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["char","ann_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,["remote_type","ann_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}","{ann_type, anno(), none()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_atom()","{ann_type, anno(), none()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["atom","ann_type",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{ann_type, anno(), none()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["ann_type","ann_type",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,{typechecker,refine,["anno()","anno()",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["[af_anno() | abstract_type()]","none()",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
    {typechecker,check_clause,5},
    {[{user_type,0,type,[]},
      {type,0,map,
          [{type,0,map_field_assoc,
               [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
     {venv,
         #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
           'TVars' =>
               {type,0,map,
                   [{type,0,map_field_assoc,
                        [{type,0,atom,[]},{user_type,0,type,[]}]}]},
           'Type' =>
               {type,0,union,
                   [{type,0,any,[]},
                    {type,0,tuple,
                        [{atom,0,var},
                         {user_type,
                             [{file,"erl_anno.erl"},{location,0}],
                             anno,[]},
                         {type,0,atom,[]}]}]},
           'Var' =>
               {type,0,tuple,
                   [{atom,0,var},
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                    {type,0,atom,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{user_type,0,type,[]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {271,1},
             [{tuple,
                  {271,22},
                  [{atom,{271,23},var},
                   {var,{271,28},'L'},
                   {var,{271,31},'Var'}]},
              {var,{271,37},'TVars'}],
             [],
             [{'case',
                  {272,5},
                  {var,{272,10},'TVars'},
                  [{clause,
                       {273,9},
                       [{map,
                            {273,9},
                            [{map_field_exact,
                                 {273,15},
                                 {var,{273,11},'Var'},
                                 {var,{273,18},'Type'}}]}],
                       [],
                       [{var,{273,27},'Type'}]},
                   {clause,
                       {274,9},
                       [{var,{274,9},'_'}],
                       [],
                       [{tuple,
                            {274,27},
                            [{atom,{274,28},var},
                             {var,{274,33},'L'},
                             {var,{274,36},'Var'}]}]}]}]},
         bind_vars]}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'TVars' =>
                   {type,0,map,
                       [{type,0,map_field_assoc,
                            [{type,0,atom,[]},{user_type,0,type,[]}]}]},
               'Var' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
         [{type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {clause,
             {273,9},
             [{map,
                  {273,9},
                  [{map_field_exact,
                       {273,15},
                       {var,{273,11},'Var'},
                       {var,{273,18},'Type'}}]}],
             [],
             [{var,{273,27},'Type'}]},
         capture_vars]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{#{atom() => type()}}","{#{atom() := type()}}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["#{atom() => type()}","#{atom() := type()}",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,map,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,[{type,0,map,[]}]}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,map,[]}],
        {venv,#{'L' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'TVars' =>
                    {type,0,map,
                          [{type,0,map_field_assoc,
                                 [{type,0,atom,[]},{user_type,0,type,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'Var' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,
             #{'L' => {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               'TVars' =>
                   {type,0,map,
                       [{type,0,map_field_assoc,
                            [{type,0,atom,[]},{user_type,0,type,[]}]}]},
               'Var' =>
                   {type,0,union,
                       [{type,0,atom,[]},{type,0,list,[{type,0,char,[]}]}]}}},
         [{type,0,map,[]}],
         {type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_variable,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]}]},
         {clause,
             {274,9},
             [{var,{274,9},'_'}],
             [],
             [{tuple,
                  {274,27},
                  [{atom,{274,28},var},
                   {var,{274,33},'L'},
                   {var,{274,36},'Var'}]}]},
         capture_vars]}}
{trace,<0.106.0>,call,{typechecker,refine,["{#{}}","{#{}}",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]}],
        {venv,#{'L' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'TVars' =>
                    {type,0,map,
                          [{type,0,map_field_assoc,
                                 [{type,0,atom,[]},{user_type,0,type,[]}]}]},
                'Var' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type(), #{atom() => type()}}",
                     "{{var, anno(), gr_type_var()}, #{atom() => type()}}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["type()","{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_variable()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_union()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["gr_integer()","{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["integer","var",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_character()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["char","var",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_singleton_integer_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_remote_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,call,{typechecker,refine,["remote_type","var",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_record_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_map_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_fun_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_function_type()","{var, anno(), gr_type_var()}",seen,
                     env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_atom()","{var, anno(), gr_type_var()}",seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["atom","var",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()","{var, anno(), gr_type_var()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["ann_type","var",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["#{atom() => type()}","#{atom() => type()}",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,
             [{type,0,union,
                    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_annotated_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_atom,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_bitstring_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_constrained_function_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_empty_list_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_fun_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_integer_range_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_map_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_predefined_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_record_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_remote_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_singleton_integer_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_tuple_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_type_union,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_user_defined_type,[]}]},
              {type,0,map,
                    [{type,0,map_field_assoc,
                           [{type,0,atom,[]},{user_type,0,type,[]}]}]}]}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,union,
               [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_annotated_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_atom,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_bitstring_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_constrained_function_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_empty_list_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_fun_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_integer_range_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_map_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_predefined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_record_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_remote_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_tuple_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_union,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_user_defined_type,[]}]},
         {type,0,map,
               [{type,0,map_field_assoc,
                      [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
        {venv,#{'L' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                'TVars' =>
                    {type,0,map,
                          [{type,0,map_field_assoc,
                                 [{type,0,atom,[]},{user_type,0,type,[]}]}]},
                'Type' =>
                    {type,0,union,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'Var' =>
                    {type,0,union,
                          [{type,0,atom,[]},
                           {type,0,list,[{type,0,char,[]}]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {276,1},
             [{match,
                  {276,22},
                  {var,{276,22},'Other'},
                  {tuple,
                      {276,30},
                      [{atom,{276,31},type},
                       {var,{276,37},'_'},
                       {var,{276,40},'T'},
                       {atom,{276,43},any}]}},
              {var,{276,49},'_'}],
             [[{op,{277,10},'==',{var,{277,8},'T'},{atom,{277,13},tuple}}],
              [{op,{277,22},'==',{var,{277,20},'T'},{atom,{277,25},map}}]],
             [{var,{278,5},'Other'}]},
         bind_vars]}}
{trace,<0.106.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,union,
               [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_annotated_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_atom,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_bitstring_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_constrained_function_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_empty_list_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_fun_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_integer_range_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_map_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_predefined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_record_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_remote_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_singleton_integer_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_tuple_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_union,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_user_defined_type,[]}]},
         {type,0,map,
               [{type,0,map_field_assoc,
                      [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
        {venv,#{'Other' => {type,0,none,[]},'T' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_singleton_integer_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]}]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {279,1},
             [{match,
                  {279,22},
                  {var,{279,22},'Other'},
                  {tuple,
                      {279,30},
                      [{atom,{279,31},op},
                       {var,{279,35},'_'},
                       {var,{279,38},'_Op'},
                       {var,{279,43},'_Arg'}]}},
              {var,{279,50},'_'}],
             [],
             [{var,{281,5},'Other'}]},
         bind_vars]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_atom() |\n           af_bitstring_type() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_singleton_integer_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_user_defined_type(),\n           #{atom() => type()}}",
                     "{{op, anno(), unary_op(), af_singleton_integer_type()},\n           #{atom() => type()}}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_atom() |\n          af_bitstring_type() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_singleton_integer_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_user_defined_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["user_type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_singleton_integer_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["gr_integer()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_unary_op(af_singleton_integer_type())",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_character()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,{typechecker,refine,["type","op",seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_atom()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "{op, anno(), unary_op(), af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_binary_op,
                         [{user_type,[{file,"gradualizer_type.erl"},
                                      {location,0}],
                                     af_singleton_integer_type,[]}]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["#{atom() => type()}","#{atom() => type()}",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,return_from,
    {typechecker,refine,4},
    {type,0,tuple,
        [{type,0,union,
             [{user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_annotated_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_atom,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_binary_op,
                  [{user_type,
                       [{file,"gradualizer_type.erl"},{location,0}],
                       af_singleton_integer_type,[]}]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_bitstring_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_character,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_constrained_function_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_empty_list_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_integer_range_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_predefined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_record_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_remote_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_type_union,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  af_user_defined_type,[]},
              {user_type,
                  [{file,"gradualizer_type.erl"},{location,0}],
                  gr_integer,[]}]},
         {type,0,map,
             [{type,0,map_field_assoc,
                  [{type,0,atom,[]},{user_type,0,type,[]}]}]}]}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_binary_op,
               [{user_type,
                    [{file,"gradualizer_type.erl"},{location,0}],
                    af_singleton_integer_type,[]}]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_character,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               gr_integer,[]}]},
      {type,0,map,
          [{type,0,map_field_assoc,
               [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
     {venv,
         #{'Other' =>
               {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        unary_op,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
           '_Arg' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]},
           '_Op' =>
               {type,0,union,
                   [{atom,0,'+'},
                    {atom,0,'-'},
                    {atom,0,'bnot'},
                    {atom,0,'not'}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_binary_op,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_character,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_integer,[]}]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {282,1},
             [{match,
                  {282,22},
                  {var,{282,22},'Other'},
                  {tuple,
                      {282,30},
                      [{atom,{282,31},op},
                       {var,{282,35},'_'},
                       {var,{282,38},'_Op'},
                       {var,{282,43},'_Arg1'},
                       {var,{282,50},'_Arg2'}]}},
              {var,{282,58},'_'}],
             [],
             [{var,{284,5},'Other'}]},
         bind_vars]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{af_annotated_type() |\n           af_atom() |\n           af_binary_op(af_singleton_integer_type()) |\n           af_bitstring_type() |\n           af_character() |\n           af_constrained_function_type() |\n           af_empty_list_type() |\n           af_fun_type() |\n           af_integer_range_type() |\n           af_map_type() |\n           af_predefined_type() |\n           af_record_type() |\n           af_remote_type() |\n           af_tuple_type() |\n           af_type_union() |\n           af_user_defined_type() |\n           gr_integer(),\n           #{atom() => type()}}",
                     "{{op,\n            anno(),\n            binary_op(),\n            af_singleton_integer_type(),\n            af_singleton_integer_type()},\n           #{atom() => type()}}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_annotated_type() |\n          af_atom() |\n          af_binary_op(af_singleton_integer_type()) |\n          af_bitstring_type() |\n          af_character() |\n          af_constrained_function_type() |\n          af_empty_list_type() |\n          af_fun_type() |\n          af_integer_range_type() |\n          af_map_type() |\n          af_predefined_type() |\n          af_record_type() |\n          af_remote_type() |\n          af_tuple_type() |\n          af_type_union() |\n          af_user_defined_type() |\n          gr_integer()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["gr_integer()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_user_defined_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_type_union()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_tuple_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, [abstract_type()]}",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), tuple, any}",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_tuple_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_remote_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_record_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_predefined_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_map_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, [af_assoc_type()]}",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), map, any}",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_map_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_integer_range_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_fun_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_function_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', []}",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["{type, anno(), 'fun', [gr_any_fun_args() | abstract_type()]}",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                  af_fun_type,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_empty_list_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_constrained_function_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_character()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_bitstring_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_binary_op(af_singleton_integer_type())",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_atom()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["af_annotated_type()",
                     "{op,\n           anno(),\n           binary_op(),\n           af_singleton_integer_type(),\n           af_singleton_integer_type()}",
                     seen,env]}}
{trace,<0.106.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,union,
             [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_character,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]},
              {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                         gr_integer,[]}]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,call,
       {typechecker,refine,
                    ["#{atom() => type()}","#{atom() => type()}",seen,env]}}
{trace,<0.106.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.106.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.106.0>,return_from,
       {typechecker,refine,4},
       {type,0,tuple,
             [{type,0,union,
                    [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_annotated_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_atom,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_bitstring_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_character,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_constrained_function_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_empty_list_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_fun_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_integer_range_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_map_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_predefined_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_record_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_remote_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_tuple_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_type_union,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                af_user_defined_type,[]},
                     {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                                gr_integer,[]}]},
              {type,0,map,
                    [{type,0,map_field_assoc,
                           [{type,0,atom,[]},{user_type,0,type,[]}]}]}]}}
{trace,<0.106.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.106.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,union,
          [{user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_annotated_type,[]},
           {user_type,[{file,"gradualizer_type.erl"},{location,0}],af_atom,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_bitstring_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_character,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_constrained_function_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_empty_list_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_fun_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_integer_range_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_map_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_predefined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_record_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_remote_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_tuple_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_type_union,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               af_user_defined_type,[]},
           {user_type,
               [{file,"gradualizer_type.erl"},{location,0}],
               gr_integer,[]}]},
      {type,0,map,
          [{type,0,map_field_assoc,
               [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
     {venv,
         #{'Other' =>
               {type,0,tuple,
                   [{atom,0,op},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        anno,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        binary_op,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_singleton_integer_type,[]}]},
           '_Arg1' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]},
           '_Arg2' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]},
           '_Op' =>
               {type,0,union,
                   [{atom,0,'*'},
                    {atom,0,'+'},
                    {atom,0,'++'},
                    {atom,0,'-'},
                    {atom,0,'--'},
                    {atom,0,'/'},
                    {atom,0,'/='},
                    {atom,0,'<'},
                    {atom,0,'=/='},
                    {atom,0,'=:='},
                    {atom,0,'=<'},
                    {atom,0,'=='},
                    {atom,0,'>'},
                    {atom,0,'>='},
                    {atom,0,'and'},
                    {atom,0,'band'},
                    {atom,0,'bor'},
                    {atom,0,'bsl'},
                    {atom,0,'bsr'},
                    {atom,0,'bxor'},
                    {atom,0,'div'},
                    {atom,0,'or'},
                    {atom,0,'rem'},
                    {atom,0,'xor'}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,union,
              [{user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_annotated_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_atom,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_bitstring_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_character,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_constrained_function_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_empty_list_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_fun_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_integer_range_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_map_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_predefined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_record_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_remote_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_tuple_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_type_union,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   af_user_defined_type,[]},
               {user_type,
                   [{file,"gradualizer_type.erl"},{location,0}],
                   gr_integer,[]}]},
          {type,0,map,
              [{type,0,map_field_assoc,
                   [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
         {user_type,0,type,[]},
         {clause,
             {285,1},
             [{match,
                  {285,22},
                  {var,{285,22},'Other'},
                  {tuple,
                      {285,30},
                      [{var,{285,31},'T'},
                       {var,{285,34},'_'},
                       {var,{285,37},'_'}]}},
              {var,{285,41},'_'}],
             [[{op,{286,10},'==',{var,{286,8},'T'},{atom,{286,13},atom}}],
              [{op,{286,21},'==',{var,{286,19},'T'},{atom,{286,24},integer}}],
              [{op,{286,35},'==',{var,{286,33},'T'},{atom,{286,38},char}}]],
             [{var,{287,5},'Other'}]},
         bind_vars]}}
{trace,<0.106.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,union,
               [{user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_annotated_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_atom,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_bitstring_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_character,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_constrained_function_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_empty_list_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_fun_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_integer_range_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_map_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_predefined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_record_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_remote_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_tuple_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_type_union,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           af_user_defined_type,[]},
                {user_type,[{file,"gradualizer_type.erl"},{location,0}],
                           gr_integer,[]}]},
         {type,0,map,
               [{type,0,map_field_assoc,
                      [{type,0,atom,[]},{user_type,0,type,[]}]}]}],
        {venv,#{'Other' => {type,0,none,[]},'T' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.106.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.106.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.107.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {328,1},
             reduce_type,3,
             [{clause,
                  {328,1},
                  [{var,{328,13},'Fun'},
                   {var,{328,18},'Acc'},
                   {var,{328,23},'Type'}],
                  [],
                  [{call,
                       {329,5},
                       {atom,{329,5},reduce},
                       [{var,{329,12},'Fun'},
                        {atom,{329,17},apply},
                        {var,{329,24},'Acc'},
                        {var,{329,29},'Type'}]}]}]}]}}
{trace,<0.107.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,'fun',
                            [{type,0,product,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_57"}]},
                             {type,0,tuple,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_57"}]}]},
                      {var,0,"Acc_typechecker_3529_57"},
                      {user_type,0,walkable_type,[]}],
                     {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,"Acc_typechecker_3529_57"}]},
                     {clause,{328,1},
                             [{var,{328,13},'Fun'},
                              {var,{328,18},'Acc'},
                              {var,{328,23},'Type'}],
                             [],
                             [{call,{329,5},
                                    {atom,{329,5},reduce},
                                    [{var,{329,12},'Fun'},
                                     {atom,{329,17},apply},
                                     {var,{329,24},'Acc'},
                                     {var,{329,29},'Type'}]}]},
                     bind_vars]}}
{trace,<0.107.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_57"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_57"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_57"}]}]},
               'Type' =>
                   {type,0,union,
                       [{atom,0,neg_inf},
                        {atom,0,pos_inf},
                        {type,0,tuple,
                            [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_57"}]},
         {call,
             {329,5},
             {atom,{329,5},reduce},
             [{var,{329,12},'Fun'},
              {atom,{329,17},apply},
              {var,{329,24},'Acc'},
              {var,{329,29},'Type'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,
                       [{user_type,0,walkable_type,[]},
                        {var,0,"Acc_typechecker_3529_58"}]},
                   {type,0,tuple,
                       [{user_type,0,walkable_type,[]},
                        {var,0,"Acc_typechecker_3529_58"}]}]},
              {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
              {var,0,"Acc_typechecker_3529_58"},
              {user_type,0,walkable_type,[]}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_58"}]},
             {constraints,#{},#{},#{"Acc_typechecker_3529_58" => true}}},
         [{var,{329,12},'Fun'},
          {atom,{329,17},apply},
          {var,{329,24},'Acc'},
          {var,{329,29},'Type'}],
         {{329,5},
          {atom,{329,5},reduce},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'Fun'},
                          {var,0,'Action'},
                          {var,0,'Acc'},
                          {user_type,0,walkable_type,[]}]},
                     {var,0,'R'}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Fun'},
                       {type,0,'fun',
                           [{type,0,product,
                                [{user_type,0,walkable_type,[]},
                                 {var,0,'Acc'}]},
                            {type,0,tuple,
                                [{user_type,0,walkable_type,[]},
                                 {var,0,'Acc'}]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Action'},
                       {type,0,union,[{atom,0,apply},{atom,0,recurse}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'R'},
                       {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,'Acc'}]}]]}]]}]}]}}
{trace,<0.107.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_57"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_57"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_57"}]}]},
                'Type' =>
                    {type,0,union,
                          [{atom,0,neg_inf},
                           {atom,0,pos_inf},
                           {type,0,tuple,
                                 [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},
                     #{"Acc_typechecker_3529_57" =>
                           [{var,0,"Acc_typechecker_3529_58"},
                            {var,0,"Acc_typechecker_3529_58"}],
                       "Acc_typechecker_3529_58" =>
                           [{var,0,"Acc_typechecker_3529_57"},
                            {var,0,"Acc_typechecker_3529_57"}]},
                     #{"Acc_typechecker_3529_58" => true}}}}
{trace,<0.107.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.107.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_57) ->\n                   {walkable_type(), Acc_typechecker_3529_57}),\n           Acc_typechecker_3529_57,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_57) ->\n                   {walkable_type(), Acc_typechecker_3529_57}),\n           Acc_typechecker_3529_57,\n           walkable_type()}",
                     seen,env]}}
{trace,<0.107.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.107.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.107.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,none,[]},{type,0,none,[]},{type,0,none,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_57"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_57"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_57"}]}]},
                'Type' =>
                    {type,0,union,
                          [{atom,0,neg_inf},
                           {atom,0,pos_inf},
                           {type,0,tuple,
                                 [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},
                     #{"Acc_typechecker_3529_57" =>
                           [{var,0,"Acc_typechecker_3529_58"},
                            {var,0,"Acc_typechecker_3529_58"}],
                       "Acc_typechecker_3529_58" =>
                           [{var,0,"Acc_typechecker_3529_57"},
                            {var,0,"Acc_typechecker_3529_57"}]},
                     #{"Acc_typechecker_3529_58" => true}}}}
{trace,<0.107.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.107.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.108.0>,call,
    {typechecker,type_check_function,
        [{venv,#{}},
         {function,
             {335,1},
             reduce,4,
             [{clause,
                  {335,1},
                  [{var,{335,8},'Fun'},
                   {var,{335,13},'_'},
                   {var,{335,16},'Acc'},
                   {match,
                       {335,21},
                       {tuple,
                           {335,21},
                           [{atom,{335,22},atom},
                            {var,{335,30},'_'},
                            {var,{335,33},'_'}]},
                       {var,{335,38},'Ty'}}],
                  [],
                  [{call,
                       {335,58},
                       {var,{335,58},'Fun'},
                       [{var,{335,62},'Ty'},{var,{335,66},'Acc'}]}]},
              {clause,
                  {336,1},
                  [{var,{336,8},'Fun'},
                   {var,{336,13},'_'},
                   {var,{336,16},'Acc'},
                   {match,
                       {336,21},
                       {tuple,
                           {336,21},
                           [{atom,{336,22},type},
                            {var,{336,30},'_Anno'},
                            {var,{336,37},'_Name'},
                            {atom,{336,44},any}]},
                       {var,{336,51},'Ty'}}],
                  [],
                  [{call,
                       {336,58},
                       {var,{336,58},'Fun'},
                       [{var,{336,62},'Ty'},{var,{336,66},'Acc'}]}]},
              {clause,
                  {337,1},
                  [{var,{337,8},'Fun'},
                   {var,{337,13},'_'},
                   {var,{337,16},'Acc'},
                   {match,
                       {337,21},
                       {tuple,
                           {337,21},
                           [{atom,{337,22},integer},
                            {var,{337,33},'_'},
                            {var,{337,36},'_'}]},
                       {var,{337,41},'Ty'}}],
                  [],
                  [{call,
                       {337,58},
                       {var,{337,58},'Fun'},
                       [{var,{337,62},'Ty'},{var,{337,66},'Acc'}]}]},
              {clause,
                  {338,1},
                  [{var,{338,8},'Fun'},
                   {var,{338,13},'_'},
                   {var,{338,16},'Acc'},
                   {match,
                       {338,21},
                       {tuple,
                           {338,21},
                           [{atom,{338,22},char},
                            {var,{338,30},'_'},
                            {var,{338,33},'_'}]},
                       {var,{338,38},'Ty'}}],
                  [],
                  [{call,
                       {338,58},
                       {var,{338,58},'Fun'},
                       [{var,{338,62},'Ty'},{var,{338,66},'Acc'}]}]},
              {clause,
                  {339,1},
                  [{var,{339,8},'Fun'},
                   {var,{339,13},'_'},
                   {var,{339,16},'Acc'},
                   {match,
                       {339,21},
                       {tuple,
                           {339,21},
                           [{atom,{339,22},type},
                            {var,{339,30},'_Anno'},
                            {atom,{339,37},any}]},
                       {var,{339,44},'Ty'}}],
                  [],
                  [{call,
                       {339,58},
                       {var,{339,58},'Fun'},
                       [{var,{339,62},'Ty'},{var,{339,66},'Acc'}]}]},
              {clause,
                  {340,1},
                  [{var,{340,8},'Fun'},
                   {var,{340,13},'_'},
                   {var,{340,16},'Acc'},
                   {match,
                       {340,21},
                       {atom,{340,21},pos_inf},
                       {var,{340,31},'Ty'}}],
                  [],
                  [{call,
                       {340,58},
                       {var,{340,58},'Fun'},
                       [{var,{340,62},'Ty'},{var,{340,66},'Acc'}]}]},
              {clause,
                  {341,1},
                  [{var,{341,8},'Fun'},
                   {var,{341,13},'_'},
                   {var,{341,16},'Acc'},
                   {match,
                       {341,21},
                       {atom,{341,21},neg_inf},
                       {var,{341,31},'Ty'}}],
                  [],
                  [{call,
                       {341,58},
                       {var,{341,58},'Fun'},
                       [{var,{341,62},'Ty'},{var,{341,66},'Acc'}]}]},
              {clause,
                  {342,1},
                  [{var,{342,8},'Fun'},
                   {var,{342,13},'_'},
                   {var,{342,16},'Acc'},
                   {match,
                       {342,21},
                       {tuple,
                           {342,21},
                           [{atom,{342,22},var},
                            {var,{342,27},'_'},
                            {var,{342,30},'_'}]},
                       {var,{342,35},'Ty'}}],
                  [],
                  [{call,
                       {342,58},
                       {var,{342,58},'Fun'},
                       [{var,{342,62},'Ty'},{var,{342,66},'Acc'}]}]},
              {clause,
                  {343,1},
                  [{var,{343,8},'Fun'},
                   {atom,{343,13},apply},
                   {var,{343,20},'Acc'},
                   {var,{343,25},'Ty'}],
                  [],
                  [{match,
                       {344,5},
                       {tuple,
                           {344,5},
                           [{var,{344,6},'NewTy'},{var,{344,13},'Acc1'}]},
                       {call,
                           {344,21},
                           {var,{344,21},'Fun'},
                           [{var,{344,25},'Ty'},{var,{344,29},'Acc'}]}},
                   {call,
                       {345,5},
                       {atom,{345,5},reduce},
                       [{var,{345,12},'Fun'},
                        {atom,{345,17},recurse},
                        {var,{345,26},'Acc1'},
                        {var,{345,32},'NewTy'}]}]},
              {clause,
                  {346,1},
                  [{var,{346,8},'Fun'},
                   {atom,{346,13},recurse},
                   {var,{346,22},'Acc'},
                   {tuple,
                       {346,27},
                       [{atom,{346,28},op},
                        {var,{346,34},'_'},
                        {var,{346,37},'_'},
                        {var,{346,40},'Ty1'}]}],
                  [],
                  [{call,
                       {346,66},
                       {atom,{346,66},reduce_rec},
                       [{var,{346,77},'Fun'},
                        {var,{346,82},'Acc'},
                        {cons,
                            {346,87},
                            {var,{346,88},'Ty1'},
                            {nil,{346,91}}}]}]},
              {clause,
                  {347,1},
                  [{var,{347,8},'Fun'},
                   {atom,{347,13},recurse},
                   {var,{347,22},'Acc'},
                   {tuple,
                       {347,27},
                       [{atom,{347,28},op},
                        {var,{347,34},'_'},
                        {var,{347,37},'_'},
                        {var,{347,40},'Ty1'},
                        {var,{347,45},'Ty2'}]}],
                  [],
                  [{call,
                       {347,66},
                       {atom,{347,66},reduce_rec},
                       [{var,{347,77},'Fun'},
                        {var,{347,82},'Acc'},
                        {cons,
                            {347,87},
                            {var,{347,88},'Ty1'},
                            {cons,
                                {347,93},
                                {var,{347,93},'Ty2'},
                                {nil,{347,96}}}}]}]},
              {clause,
                  {348,1},
                  [{var,{348,8},'Fun'},
                   {atom,{348,13},recurse},
                   {var,{348,22},'Acc'},
                   {tuple,
                       {348,27},
                       [{atom,{348,28},ann_type},
                        {var,{348,40},'_Anno'},
                        {var,{348,47},'Args'}]}],
                  [],
                  [{call,
                       {348,66},
                       {atom,{348,66},reduce_rec},
                       [{var,{348,77},'Fun'},
                        {var,{348,82},'Acc'},
                        {var,{348,87},'Args'}]}]},
              {clause,
                  {349,1},
                  [{var,{349,8},'Fun'},
                   {atom,{349,13},recurse},
                   {var,{349,22},'Acc'},
                   {tuple,
                       {349,27},
                       [{atom,{349,28},type},
                        {var,{349,36},'_Anno'},
                        {var,{349,43},'_Name'},
                        {var,{349,50},'Args'}]}],
                  [],
                  [{call,
                       {349,66},
                       {atom,{349,66},reduce_rec},
                       [{var,{349,77},'Fun'},
                        {var,{349,82},'Acc'},
                        {var,{349,87},'Args'}]}]},
              {clause,
                  {350,1},
                  [{var,{350,8},'Fun'},
                   {atom,{350,13},recurse},
                   {var,{350,22},'Acc'},
                   {tuple,
                       {350,27},
                       [{atom,{350,28},remote_type},
                        {var,{350,43},'_Anno'},
                        {cons,
                            {350,50},
                            {var,{350,51},'M'},
                            {cons,
                                {350,54},
                                {var,{350,54},'T'},
                                {cons,
                                    {350,57},
                                    {var,{350,57},'As'},
                                    {nil,{350,59}}}}}]}],
                  [],
                  [{call,
                       {350,66},
                       {atom,{350,66},reduce_rec},
                       [{var,{350,77},'Fun'},
                        {var,{350,82},'Acc'},
                        {cons,
                            {350,87},
                            {var,{350,88},'M'},
                            {cons,
                                {350,91},
                                {var,{350,91},'T'},
                                {var,{350,95},'As'}}}]}]},
              {clause,
                  {351,1},
                  [{var,{351,8},'Fun'},
                   {atom,{351,13},recurse},
                   {var,{351,22},'Acc'},
                   {tuple,
                       {351,27},
                       [{atom,{351,28},user_type},
                        {var,{351,41},'_Anno'},
                        {var,{351,48},'_Name'},
                        {var,{351,55},'Args'}]}],
                  [],
                  [{call,
                       {351,66},
                       {atom,{351,66},reduce_rec},
                       [{var,{351,77},'Fun'},
                        {var,{351,82},'Acc'},
                        {var,{351,87},'Args'}]}]}]}]}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {335,1},
             [{var,{335,8},'Fun'},
              {var,{335,13},'_'},
              {var,{335,16},'Acc'},
              {match,
                  {335,21},
                  {tuple,
                      {335,21},
                      [{atom,{335,22},atom},
                       {var,{335,30},'_'},
                       {var,{335,33},'_'}]},
                  {var,{335,38},'Ty'}}],
             [],
             [{call,
                  {335,58},
                  {var,{335,58},'Fun'},
                  [{var,{335,62},'Ty'},{var,{335,66},'Acc'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' =>
                   {type,0,tuple,
                       [{atom,0,atom},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                        {type,0,atom,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {335,58},
             {var,{335,58},'Fun'},
             [{var,{335,62},'Ty'},{var,{335,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{335,62},'Ty'},{var,{335,66},'Acc'}],
         {{335,58},
          {var,{335,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,atom},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {type,0,atom,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           {atom, anno(), atom()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,atom},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {type,0,atom,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {336,1},
             [{var,{336,8},'Fun'},
              {var,{336,13},'_'},
              {var,{336,16},'Acc'},
              {match,
                  {336,21},
                  {tuple,
                      {336,21},
                      [{atom,{336,22},type},
                       {var,{336,30},'_Anno'},
                       {var,{336,37},'_Name'},
                       {atom,{336,44},any}]},
                  {var,{336,51},'Ty'}}],
             [],
             [{call,
                  {336,58},
                  {var,{336,58},'Fun'},
                  [{var,{336,62},'Ty'},{var,{336,66},'Acc'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' => {type,0,none,[]},
               '_Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               '_Name' => {type,0,none,[]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {336,58},
             {var,{336,58},'Fun'},
             [{var,{336,62},'Ty'},{var,{336,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{336,62},'Ty'},{var,{336,66},'Acc'}],
         {{336,58},
          {var,{336,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' => {type,0,none,[]},
                '_Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                '_Name' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           none()}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' => {type,0,none,[]},
                '_Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                '_Name' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {337,1},
             [{var,{337,8},'Fun'},
              {var,{337,13},'_'},
              {var,{337,16},'Acc'},
              {match,
                  {337,21},
                  {tuple,
                      {337,21},
                      [{atom,{337,22},integer},
                       {var,{337,33},'_'},
                       {var,{337,36},'_'}]},
                  {var,{337,41},'Ty'}}],
             [],
             [{call,
                  {337,58},
                  {var,{337,58},'Fun'},
                  [{var,{337,62},'Ty'},{var,{337,66},'Acc'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' =>
                   {type,0,tuple,
                       [{atom,0,integer},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                        {type,0,integer,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {337,58},
             {var,{337,58},'Fun'},
             [{var,{337,62},'Ty'},{var,{337,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{337,62},'Ty'},{var,{337,66},'Acc'}],
         {{337,58},
          {var,{337,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {type,0,integer,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           {integer, anno(), integer()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,integer},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {type,0,integer,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {338,1},
             [{var,{338,8},'Fun'},
              {var,{338,13},'_'},
              {var,{338,16},'Acc'},
              {match,
                  {338,21},
                  {tuple,
                      {338,21},
                      [{atom,{338,22},char},
                       {var,{338,30},'_'},
                       {var,{338,33},'_'}]},
                  {var,{338,38},'Ty'}}],
             [],
             [{call,
                  {338,58},
                  {var,{338,58},'Fun'},
                  [{var,{338,62},'Ty'},{var,{338,66},'Acc'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' =>
                   {type,0,tuple,
                       [{atom,0,char},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                        {type,0,char,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {338,58},
             {var,{338,58},'Fun'},
             [{var,{338,62},'Ty'},{var,{338,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{338,62},'Ty'},{var,{338,66},'Acc'}],
         {{338,58},
          {var,{338,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,char},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {type,0,char,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           {char, anno(), char()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,char},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {type,0,char,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {339,1},
             [{var,{339,8},'Fun'},
              {var,{339,13},'_'},
              {var,{339,16},'Acc'},
              {match,
                  {339,21},
                  {tuple,
                      {339,21},
                      [{atom,{339,22},type},
                       {var,{339,30},'_Anno'},
                       {atom,{339,37},any}]},
                  {var,{339,44},'Ty'}}],
             [],
             [{call,
                  {339,58},
                  {var,{339,58},'Fun'},
                  [{var,{339,62},'Ty'},{var,{339,66},'Acc'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' => {type,0,tuple,[{atom,0,type},{var,0,'_'},{atom,0,any}]},
               '_Anno' => {type,0,any,[]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {339,58},
             {var,{339,58},'Fun'},
             [{var,{339,62},'Ty'},{var,{339,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{339,62},'Ty'},{var,{339,66},'Acc'}],
         {{339,58},
          {var,{339,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,[{atom,0,type},{var,0,'_'},{atom,0,any}]},
                '_Anno' => {type,0,any,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           {type, _, any}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,[{atom,0,type},{var,0,'_'},{atom,0,any}]},
                '_Anno' => {type,0,any,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,'fun',
                            [{type,0,product,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]},
                             {type,0,tuple,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]}]},
                      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
                      {var,0,"Acc_typechecker_3529_59"},
                      {user_type,0,walkable_type,[]}],
                     {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     {clause,{340,1},
                             [{var,{340,8},'Fun'},
                              {var,{340,13},'_'},
                              {var,{340,16},'Acc'},
                              {match,{340,21},
                                     {atom,{340,21},pos_inf},
                                     {var,{340,31},'Ty'}}],
                             [],
                             [{call,{340,58},
                                    {var,{340,58},'Fun'},
                                    [{var,{340,62},'Ty'},
                                     {var,{340,66},'Acc'}]}]},
                     bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' => {atom,0,pos_inf}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {340,58},
             {var,{340,58},'Fun'},
             [{var,{340,62},'Ty'},{var,{340,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{340,62},'Ty'},{var,{340,66},'Acc'}],
         {{340,58},
          {var,{340,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' => {atom,0,pos_inf}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59, pos_inf}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' => {atom,0,pos_inf}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,'fun',
                            [{type,0,product,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]},
                             {type,0,tuple,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]}]},
                      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
                      {var,0,"Acc_typechecker_3529_59"},
                      {user_type,0,walkable_type,[]}],
                     {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     {clause,{341,1},
                             [{var,{341,8},'Fun'},
                              {var,{341,13},'_'},
                              {var,{341,16},'Acc'},
                              {match,{341,21},
                                     {atom,{341,21},neg_inf},
                                     {var,{341,31},'Ty'}}],
                             [],
                             [{call,{341,58},
                                    {var,{341,58},'Fun'},
                                    [{var,{341,62},'Ty'},
                                     {var,{341,66},'Acc'}]}]},
                     bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' => {atom,0,neg_inf}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {341,58},
             {var,{341,58},'Fun'},
             [{var,{341,62},'Ty'},{var,{341,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{341,62},'Ty'},{var,{341,66},'Acc'}],
         {{341,58},
          {var,{341,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' => {atom,0,neg_inf}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59, neg_inf}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' => {atom,0,neg_inf}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {342,1},
             [{var,{342,8},'Fun'},
              {var,{342,13},'_'},
              {var,{342,16},'Acc'},
              {match,
                  {342,21},
                  {tuple,
                      {342,21},
                      [{atom,{342,22},var},
                       {var,{342,27},'_'},
                       {var,{342,30},'_'}]},
                  {var,{342,35},'Ty'}}],
             [],
             [{call,
                  {342,58},
                  {var,{342,58},'Fun'},
                  [{var,{342,62},'Ty'},{var,{342,66},'Acc'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty' =>
                   {type,0,tuple,
                       [{atom,0,var},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            anno,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_type_var,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {342,58},
             {var,{342,58},'Fun'},
             [{var,{342,62},'Ty'},{var,{342,66},'Acc'}]},
         {fun_ty,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_59"}]},
             {constraints,#{},#{},#{}}},
         [{var,{342,62},'Ty'},{var,{342,66},'Acc'}],
         {{342,58},
          {var,{342,58},'Fun'},
          [{type,0,'fun',
               [{type,0,product,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_59"}]}]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,var},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      gr_type_var,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           {var, anno(), gr_type_var()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply | recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'Ty' =>
                    {type,0,tuple,
                          [{atom,0,var},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      anno,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      gr_type_var,[]}]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {343,1},
             [{var,{343,8},'Fun'},
              {atom,{343,13},apply},
              {var,{343,20},'Acc'},
              {var,{343,25},'Ty'}],
             [],
             [{match,
                  {344,5},
                  {tuple,
                      {344,5},
                      [{var,{344,6},'NewTy'},{var,{344,13},'Acc1'}]},
                  {call,
                      {344,21},
                      {var,{344,21},'Fun'},
                      [{var,{344,25},'Ty'},{var,{344,29},'Acc'}]}},
              {call,
                  {345,5},
                  {atom,{345,5},reduce},
                  [{var,{345,12},'Fun'},
                   {atom,{345,17},recurse},
                   {var,{345,26},'Acc1'},
                   {var,{345,32},'NewTy'}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Acc1' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'NewTy' =>
                   {type,0,union,
                       [{atom,0,neg_inf},
                        {atom,0,pos_inf},
                        {type,0,tuple,
                            [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                        {type,0,union,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_annotated_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_atom,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_bitstring_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_constrained_function_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_empty_list_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_fun_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_integer_range_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_map_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_predefined_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_record_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_remote_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_tuple_type,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_type_union,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_type_variable,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_user_defined_type,[]}]}]},
               'Ty' =>
                   {type,0,union,
                       [{atom,0,neg_inf},
                        {atom,0,pos_inf},
                        {type,0,tuple,
                            [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_annotated_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_bitstring_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_constrained_function_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_empty_list_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_fun_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_integer_range_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_map_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_predefined_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_record_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_remote_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_singleton_integer_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_tuple_type,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_union,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_type_variable,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_user_defined_type,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {345,5},
             {atom,{345,5},reduce},
             [{var,{345,12},'Fun'},
              {atom,{345,17},recurse},
              {var,{345,26},'Acc1'},
              {var,{345,32},'NewTy'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,
                       [{user_type,0,walkable_type,[]},
                        {var,0,"Acc_typechecker_3529_60"}]},
                   {type,0,tuple,
                       [{user_type,0,walkable_type,[]},
                        {var,0,"Acc_typechecker_3529_60"}]}]},
              {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
              {var,0,"Acc_typechecker_3529_60"},
              {user_type,0,walkable_type,[]}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_60"}]},
             {constraints,#{},#{},#{"Acc_typechecker_3529_60" => true}}},
         [{var,{345,12},'Fun'},
          {atom,{345,17},recurse},
          {var,{345,26},'Acc1'},
          {var,{345,32},'NewTy'}],
         {{345,5},
          {atom,{345,5},reduce},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'Fun'},
                          {var,0,'Action'},
                          {var,0,'Acc'},
                          {user_type,0,walkable_type,[]}]},
                     {var,0,'R'}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Fun'},
                       {type,0,'fun',
                           [{type,0,product,
                                [{user_type,0,walkable_type,[]},
                                 {var,0,'Acc'}]},
                            {type,0,tuple,
                                [{user_type,0,walkable_type,[]},
                                 {var,0,'Acc'}]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Action'},
                       {type,0,union,[{atom,0,apply},{atom,0,recurse}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'R'},
                       {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,'Acc'}]}]]}]]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Acc1' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'NewTy' =>
                    {type,0,union,
                          [{atom,0,neg_inf},
                           {atom,0,pos_inf},
                           {type,0,tuple,
                                 [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'Ty' =>
                    {type,0,union,
                          [{atom,0,neg_inf},
                           {atom,0,pos_inf},
                           {type,0,tuple,
                                 [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},
                     #{"Acc_typechecker_3529_59" =>
                           [{var,0,"Acc_typechecker_3529_60"},
                            {var,0,"Acc_typechecker_3529_60"}],
                       "Acc_typechecker_3529_60" =>
                           [{var,0,"Acc_typechecker_3529_59"},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     #{"Acc_typechecker_3529_60" => true}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply, Acc_typechecker_3529_59,\n           walkable_type()}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","apply",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","apply",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","apply",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,recurse}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Acc1' => {var,0,"Acc_typechecker_3529_59"},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                'NewTy' =>
                    {type,0,union,
                          [{atom,0,neg_inf},
                           {atom,0,pos_inf},
                           {type,0,tuple,
                                 [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]},
                'Ty' =>
                    {type,0,union,
                          [{atom,0,neg_inf},
                           {atom,0,pos_inf},
                           {type,0,tuple,
                                 [{atom,0,type},{var,0,'_'},{atom,0,any}]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_annotated_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_atom,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_bitstring_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_constrained_function_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_empty_list_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_fun_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_integer_range_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_map_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_predefined_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_record_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_remote_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_singleton_integer_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_tuple_type,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_union,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_type_variable,[]},
                           {user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      af_user_defined_type,[]}]}}},
        {constraints,#{},
                     #{"Acc_typechecker_3529_59" =>
                           [{var,0,"Acc_typechecker_3529_60"},
                            {var,0,"Acc_typechecker_3529_60"}],
                       "Acc_typechecker_3529_60" =>
                           [{var,0,"Acc_typechecker_3529_59"},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     #{"Acc_typechecker_3529_60" => true}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {346,1},
             [{var,{346,8},'Fun'},
              {atom,{346,13},recurse},
              {var,{346,22},'Acc'},
              {tuple,
                  {346,27},
                  [{atom,{346,28},op},
                   {var,{346,34},'_'},
                   {var,{346,37},'_'},
                   {var,{346,40},'Ty1'}]}],
             [],
             [{call,
                  {346,66},
                  {atom,{346,66},reduce_rec},
                  [{var,{346,77},'Fun'},
                   {var,{346,82},'Acc'},
                   {cons,{346,87},{var,{346,88},'Ty1'},{nil,{346,91}}}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty1' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {346,66},
             {atom,{346,66},reduce_rec},
             [{var,{346,77},'Fun'},
              {var,{346,82},'Acc'},
              {cons,{346,87},{var,{346,88},'Ty1'},{nil,{346,91}}}]},
         {fun_ty,
             [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
             {type,0,any,[]},
             {constraints,#{},#{},#{}}},
         [{var,{346,77},'Fun'},
          {var,{346,82},'Acc'},
          {cons,{346,87},{var,{346,88},'Ty1'},{nil,{346,91}}}],
         {{346,66},{atom,{346,66},reduce_rec},[{type,0,any,[]}]}]}}
{trace,<0.108.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           'Ty1' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           recurse, Acc_typechecker_3529_59,\n           {op, anno(), unary_op(), af_singleton_integer_type()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","recurse",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","recurse",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,apply}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,'fun',
          [{type,0,product,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]},
           {type,0,tuple,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]}]},
      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
      {var,0,"Acc_typechecker_3529_59"},
      {user_type,0,walkable_type,[]}],
     {venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           'Ty1' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {347,1},
             [{var,{347,8},'Fun'},
              {atom,{347,13},recurse},
              {var,{347,22},'Acc'},
              {tuple,
                  {347,27},
                  [{atom,{347,28},op},
                   {var,{347,34},'_'},
                   {var,{347,37},'_'},
                   {var,{347,40},'Ty1'},
                   {var,{347,45},'Ty2'}]}],
             [],
             [{call,
                  {347,66},
                  {atom,{347,66},reduce_rec},
                  [{var,{347,77},'Fun'},
                   {var,{347,82},'Acc'},
                   {cons,
                       {347,87},
                       {var,{347,88},'Ty1'},
                       {cons,
                           {347,93},
                           {var,{347,93},'Ty2'},
                           {nil,{347,96}}}}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'Ty1' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]},
               'Ty2' =>
                   {type,0,union,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_binary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_character,[]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_unary_op,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_singleton_integer_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            gr_integer,[]}]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {347,66},
             {atom,{347,66},reduce_rec},
             [{var,{347,77},'Fun'},
              {var,{347,82},'Acc'},
              {cons,
                  {347,87},
                  {var,{347,88},'Ty1'},
                  {cons,{347,93},{var,{347,93},'Ty2'},{nil,{347,96}}}}]},
         {fun_ty,
             [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
             {type,0,any,[]},
             {constraints,#{},#{},#{}}},
         [{var,{347,77},'Fun'},
          {var,{347,82},'Acc'},
          {cons,
              {347,87},
              {var,{347,88},'Ty1'},
              {cons,{347,93},{var,{347,93},'Ty2'},{nil,{347,96}}}}],
         {{347,66},{atom,{347,66},reduce_rec},[{type,0,any,[]}]}]}}
{trace,<0.108.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           'Ty1' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]},
           'Ty2' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           recurse, Acc_typechecker_3529_59,\n           {op,\n            anno(),\n            binary_op(),\n            af_singleton_integer_type(),\n            af_singleton_integer_type()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","recurse",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","recurse",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,apply}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,'fun',
          [{type,0,product,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]},
           {type,0,tuple,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]}]},
      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
      {var,0,"Acc_typechecker_3529_59"},
      {user_type,0,walkable_type,[]}],
     {venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           'Ty1' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]},
           'Ty2' =>
               {type,0,union,
                   [{user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_binary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_character,[]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_unary_op,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_singleton_integer_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        gr_integer,[]}]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,'fun',
                            [{type,0,product,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]},
                             {type,0,tuple,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]}]},
                      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
                      {var,0,"Acc_typechecker_3529_59"},
                      {user_type,0,walkable_type,[]}],
                     {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     {clause,{348,1},
                             [{var,{348,8},'Fun'},
                              {atom,{348,13},recurse},
                              {var,{348,22},'Acc'},
                              {tuple,{348,27},
                                     [{atom,{348,28},ann_type},
                                      {var,{348,40},'_Anno'},
                                      {var,{348,47},'Args'}]}],
                             [],
                             [{call,{348,66},
                                    {atom,{348,66},reduce_rec},
                                    [{var,{348,77},'Fun'},
                                     {var,{348,82},'Acc'},
                                     {var,{348,87},'Args'}]}]},
                     bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Args' =>
                   {type,0,list,
                       [{type,0,union,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 af_anno,[]},
                             {user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]}]},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               '_Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {348,66},
             {atom,{348,66},reduce_rec},
             [{var,{348,77},'Fun'},
              {var,{348,82},'Acc'},
              {var,{348,87},'Args'}]},
         {fun_ty,
             [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
             {type,0,any,[]},
             {constraints,#{},#{},#{}}},
         [{var,{348,77},'Fun'},{var,{348,82},'Acc'},{var,{348,87},'Args'}],
         {{348,66},{atom,{348,66},reduce_rec},[{type,0,any,[]}]}]}}
{trace,<0.108.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'Args' =>
               {type,0,list,
                   [{type,0,union,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_anno,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]}]},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           '_Anno' =>
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           recurse, Acc_typechecker_3529_59,\n           {ann_type, anno(), [af_anno() | abstract_type()]}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","recurse",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","recurse",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,apply}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,'fun',
          [{type,0,product,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]},
           {type,0,tuple,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]}]},
      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
      {var,0,"Acc_typechecker_3529_59"},
      {user_type,0,walkable_type,[]}],
     {venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'Args' =>
               {type,0,list,
                   [{type,0,union,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             af_anno,[]},
                         {user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]}]},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           '_Anno' =>
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,'fun',
                            [{type,0,product,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]},
                             {type,0,tuple,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]}]},
                      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
                      {var,0,"Acc_typechecker_3529_59"},
                      {user_type,0,walkable_type,[]}],
                     {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     {clause,{349,1},
                             [{var,{349,8},'Fun'},
                              {atom,{349,13},recurse},
                              {var,{349,22},'Acc'},
                              {tuple,{349,27},
                                     [{atom,{349,28},type},
                                      {var,{349,36},'_Anno'},
                                      {var,{349,43},'_Name'},
                                      {var,{349,50},'Args'}]}],
                             [],
                             [{call,{349,66},
                                    {atom,{349,66},reduce_rec},
                                    [{var,{349,77},'Fun'},
                                     {var,{349,82},'Acc'},
                                     {var,{349,87},'Args'}]}]},
                     bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Args' => {type,0,none,[]},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               '_Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               '_Name' => {type,0,none,[]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {349,66},
             {atom,{349,66},reduce_rec},
             [{var,{349,77},'Fun'},
              {var,{349,82},'Acc'},
              {var,{349,87},'Args'}]},
         {fun_ty,
             [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
             {type,0,any,[]},
             {constraints,#{},#{},#{}}},
         [{var,{349,77},'Fun'},{var,{349,82},'Acc'},{var,{349,87},'Args'}],
         {{349,66},{atom,{349,66},reduce_rec},[{type,0,any,[]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Args' => {type,0,none,[]},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                '_Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                '_Name' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           recurse, Acc_typechecker_3529_59,\n           none()}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","recurse",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","recurse",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,apply}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Args' => {type,0,none,[]},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                '_Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                '_Name' => {type,0,none,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,'fun',
              [{type,0,product,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]},
               {type,0,tuple,
                   [{user_type,0,walkable_type,[]},
                    {var,0,"Acc_typechecker_3529_59"}]}]},
          {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
          {var,0,"Acc_typechecker_3529_59"},
          {user_type,0,walkable_type,[]}],
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {clause,
             {350,1},
             [{var,{350,8},'Fun'},
              {atom,{350,13},recurse},
              {var,{350,22},'Acc'},
              {tuple,
                  {350,27},
                  [{atom,{350,28},remote_type},
                   {var,{350,43},'_Anno'},
                   {cons,
                       {350,50},
                       {var,{350,51},'M'},
                       {cons,
                           {350,54},
                           {var,{350,54},'T'},
                           {cons,
                               {350,57},
                               {var,{350,57},'As'},
                               {nil,{350,59}}}}}]}],
             [],
             [{call,
                  {350,66},
                  {atom,{350,66},reduce_rec},
                  [{var,{350,77},'Fun'},
                   {var,{350,82},'Acc'},
                   {cons,
                       {350,87},
                       {var,{350,88},'M'},
                       {cons,
                           {350,91},
                           {var,{350,91},'T'},
                           {var,{350,95},'As'}}}]}]},
         bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'As' =>
                   {type,0,union,
                       [{type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]}]},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               'M' =>
                   {type,0,union,
                       [{type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]}]},
               'T' =>
                   {type,0,union,
                       [{type,0,list,
                            [{user_type,
                                 [{file,"gradualizer_type.erl"},{location,0}],
                                 abstract_type,[]}]},
                        {user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            af_atom,[]}]},
               '_Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {350,66},
             {atom,{350,66},reduce_rec},
             [{var,{350,77},'Fun'},
              {var,{350,82},'Acc'},
              {cons,
                  {350,87},
                  {var,{350,88},'M'},
                  {cons,{350,91},{var,{350,91},'T'},{var,{350,95},'As'}}}]},
         {fun_ty,
             [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
             {type,0,any,[]},
             {constraints,#{},#{},#{}}},
         [{var,{350,77},'Fun'},
          {var,{350,82},'Acc'},
          {cons,
              {350,87},
              {var,{350,88},'M'},
              {cons,{350,91},{var,{350,91},'T'},{var,{350,95},'As'}}}],
         {{350,66},{atom,{350,66},reduce_rec},[{type,0,any,[]}]}]}}
{trace,<0.108.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'As' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           'M' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'T' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           '_Anno' =>
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           recurse, Acc_typechecker_3529_59,\n           {remote_type, anno(), none()}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","recurse",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","recurse",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,apply}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,'fun',
          [{type,0,product,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]},
           {type,0,tuple,
               [{user_type,0,walkable_type,[]},
                {var,0,"Acc_typechecker_3529_59"}]}]},
      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
      {var,0,"Acc_typechecker_3529_59"},
      {user_type,0,walkable_type,[]}],
     {venv,
         #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
           'As' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'Fun' =>
               {type,0,'fun',
                   [{type,0,product,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]},
                    {type,0,tuple,
                        [{user_type,0,walkable_type,[]},
                         {var,0,"Acc_typechecker_3529_59"}]}]},
           'M' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           'T' =>
               {type,0,union,
                   [{type,0,list,
                        [{user_type,
                             [{file,"gradualizer_type.erl"},{location,0}],
                             abstract_type,[]}]},
                    {user_type,
                        [{file,"gradualizer_type.erl"},{location,0}],
                        af_atom,[]}]},
           '_Anno' =>
               {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]}}},
     {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,call,
       {typechecker,check_clause,
                    [{venv,#{}},
                     [{type,0,'fun',
                            [{type,0,product,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]},
                             {type,0,tuple,
                                   [{user_type,0,walkable_type,[]},
                                    {var,0,"Acc_typechecker_3529_59"}]}]},
                      {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
                      {var,0,"Acc_typechecker_3529_59"},
                      {user_type,0,walkable_type,[]}],
                     {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,"Acc_typechecker_3529_59"}]},
                     {clause,{351,1},
                             [{var,{351,8},'Fun'},
                              {atom,{351,13},recurse},
                              {var,{351,22},'Acc'},
                              {tuple,{351,27},
                                     [{atom,{351,28},user_type},
                                      {var,{351,41},'_Anno'},
                                      {var,{351,48},'_Name'},
                                      {var,{351,55},'Args'}]}],
                             [],
                             [{call,{351,66},
                                    {atom,{351,66},reduce_rec},
                                    [{var,{351,77},'Fun'},
                                     {var,{351,82},'Acc'},
                                     {var,{351,87},'Args'}]}]},
                     bind_vars]}}
{trace,<0.108.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {var,0,"Acc_typechecker_3529_59"},
               'Args' =>
                   {type,0,list,
                       [{user_type,
                            [{file,"gradualizer_type.erl"},{location,0}],
                            abstract_type,[]}]},
               'Fun' =>
                   {type,0,'fun',
                       [{type,0,product,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]},
                        {type,0,tuple,
                            [{user_type,0,walkable_type,[]},
                             {var,0,"Acc_typechecker_3529_59"}]}]},
               '_Anno' =>
                   {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
               '_Name' => {type,0,atom,[]}}},
         {type,0,tuple,
             [{user_type,0,walkable_type,[]},
              {var,0,"Acc_typechecker_3529_59"}]},
         {call,
             {351,66},
             {atom,{351,66},reduce_rec},
             [{var,{351,77},'Fun'},
              {var,{351,82},'Acc'},
              {var,{351,87},'Args'}]},
         {fun_ty,
             [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
             {type,0,any,[]},
             {constraints,#{},#{},#{}}},
         [{var,{351,77},'Fun'},{var,{351,82},'Acc'},{var,{351,87},'Args'}],
         {{351,66},{atom,{351,66},reduce_rec},[{type,0,any,[]}]}]}}
{trace,<0.108.0>,return_from,
       {typechecker,type_check_call,6},
       {{venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Args' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                '_Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                '_Name' => {type,0,atom,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           apply | recurse,\n           Acc_typechecker_3529_59,\n           walkable_type()}",
                     "{fun((walkable_type(), Acc_typechecker_3529_59) ->\n                   {walkable_type(), Acc_typechecker_3529_59}),\n           recurse, Acc_typechecker_3529_59,\n           {user_type, anno(), type_name(), [abstract_type()]}}",
                     seen,env]}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     "fun((walkable_type(), Acc_typechecker_3529_59) ->\n                  {walkable_type(), Acc_typechecker_3529_59})",
                     seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,["apply | recurse","recurse",seen,env]}}
{trace,<0.108.0>,call,{typechecker,refine,["recurse","recurse",seen,env]}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,call,{typechecker,refine,["apply","recurse",seen,env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,disjoint}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-fun-6-',5}}
{trace,<0.108.0>,return_from,{typechecker,refine,4},{atom,0,apply}}
{trace,<0.108.0>,return_to,{typechecker,'-refine_ty/4-lc$^12/1-2-',3}}
{trace,<0.108.0>,call,
       {typechecker,refine,
                    ["Acc_typechecker_3529_59","Acc_typechecker_3529_59",seen,
                     env]}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.108.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.108.0>,return_from,
       {typechecker,check_clause,5},
       {[{type,0,'fun',
               [{type,0,product,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]},
                {type,0,tuple,
                      [{user_type,0,walkable_type,[]},
                       {var,0,"Acc_typechecker_3529_59"}]}]},
         {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
         {var,0,"Acc_typechecker_3529_59"},
         {user_type,0,walkable_type,[]}],
        {venv,#{'Acc' => {var,0,"Acc_typechecker_3529_59"},
                'Args' =>
                    {type,0,list,
                          [{user_type,[{file,"gradualizer_type.erl"},
                                       {location,0}],
                                      abstract_type,[]}]},
                'Fun' =>
                    {type,0,'fun',
                          [{type,0,product,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]},
                           {type,0,tuple,
                                 [{user_type,0,walkable_type,[]},
                                  {var,0,"Acc_typechecker_3529_59"}]}]},
                '_Anno' =>
                    {user_type,[{file,"erl_anno.erl"},{location,0}],anno,[]},
                '_Name' => {type,0,atom,[]}}},
        {constraints,#{},#{},#{}}}}
{trace,<0.108.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.108.0>,return_to,{typechecker,type_check_form,5}}
{trace,<0.109.0>,call,
 {typechecker,type_check_function,
  [{venv,#{}},
   {function,
    {353,1},
    reduce_rec,3,
    [{clause,
      {353,1},
      [{var,{353,12},'Fun'},{var,{353,17},'Acc'},{var,{353,22},'Args'}],
      [],
      [{call,
        {354,5},
        {remote,{354,10},{atom,{354,5},lists},{atom,{354,11},foldl}},
        [{'fun',
          {354,17},
          {clauses,
           [{clause,
             {354,21},
             [{var,{354,22},'Arg'},
              {tuple,{354,27},[{var,{354,28},'_'},{var,{354,31},'Acc1'}]}],
             [],
             [{call,
               {355,25},
               {atom,{355,25},reduce},
               [{var,{355,32},'Fun'},
                {atom,{355,37},apply},
                {var,{355,44},'Acc1'},
                {var,{355,50},'Arg'}]}]}]}},
         {tuple,{356,22},[{atom,{356,23},ok},{var,{356,27},'Acc'}]},
         {var,{356,33},'Args'}]}]}]}]}}
{trace,<0.109.0>,call,
    {typechecker,check_clause,
        [{venv,#{}},
         [{type,0,any,[]},{type,0,any,[]},{type,0,any,[]}],
         {type,0,any,[]},
         {clause,
             {353,1},
             [{var,{353,12},'Fun'},{var,{353,17},'Acc'},{var,{353,22},'Args'}],
             [],
             [{call,
                  {354,5},
                  {remote,{354,10},{atom,{354,5},lists},{atom,{354,11},foldl}},
                  [{'fun',
                       {354,17},
                       {clauses,
                           [{clause,
                                {354,21},
                                [{var,{354,22},'Arg'},
                                 {tuple,
                                     {354,27},
                                     [{var,{354,28},'_'},
                                      {var,{354,31},'Acc1'}]}],
                                [],
                                [{call,
                                     {355,25},
                                     {atom,{355,25},reduce},
                                     [{var,{355,32},'Fun'},
                                      {atom,{355,37},apply},
                                      {var,{355,44},'Acc1'},
                                      {var,{355,50},'Arg'}]}]}]}},
                   {tuple,{356,22},[{atom,{356,23},ok},{var,{356,27},'Acc'}]},
                   {var,{356,33},'Args'}]}]},
         bind_vars]}}
{trace,<0.109.0>,call,
       {typechecker,check_clause,
                    [{venv,#{'Acc' => {type,0,any,[]},
                             'Args' => {type,0,any,[]},
                             'Fun' => {type,0,any,[]}}},
                     [{var,0,"T_typechecker_3529_61"},
                      {var,0,"Acc_typechecker_3529_62"}],
                     {var,0,"Acc_typechecker_3529_62"},
                     {clause,{354,21},
                             [{var,{354,22},'Arg'},
                              {tuple,{354,27},
                                     [{var,{354,28},'_'},
                                      {var,{354,31},'Acc1'}]}],
                             [],
                             [{call,{355,25},
                                    {atom,{355,25},reduce},
                                    [{var,{355,32},'Fun'},
                                     {atom,{355,37},apply},
                                     {var,{355,44},'Acc1'},
                                     {var,{355,50},'Arg'}]}]},
                     bind_vars]}}
{trace,<0.109.0>,call,
    {typechecker,type_check_call,
        [{venv,
             #{'Acc' => {type,0,any,[]},
               'Acc1' => {var,0,"Acc_typechecker_3529_62_typechecker_1257_64"},
               'Arg' => {var,0,"T_typechecker_3529_61"},
               'Args' => {type,0,any,[]},
               'Fun' => {type,0,any,[]}}},
         {var,0,"Acc_typechecker_3529_62"},
         {call,
             {355,25},
             {atom,{355,25},reduce},
             [{var,{355,32},'Fun'},
              {atom,{355,37},apply},
              {var,{355,44},'Acc1'},
              {var,{355,50},'Arg'}]},
         {fun_ty,
             [{type,0,'fun',
                  [{type,0,product,
                       [{user_type,0,walkable_type,[]},
                        {var,0,"Acc_typechecker_3529_65"}]},
                   {type,0,tuple,
                       [{user_type,0,walkable_type,[]},
                        {var,0,"Acc_typechecker_3529_65"}]}]},
              {type,0,union,[{atom,0,apply},{atom,0,recurse}]},
              {var,0,"Acc_typechecker_3529_65"},
              {user_type,0,walkable_type,[]}],
             {type,0,tuple,
                 [{user_type,0,walkable_type,[]},
                  {var,0,"Acc_typechecker_3529_65"}]},
             {constraints,#{},#{},#{"Acc_typechecker_3529_65" => true}}},
         [{var,{355,32},'Fun'},
          {atom,{355,37},apply},
          {var,{355,44},'Acc1'},
          {var,{355,50},'Arg'}],
         {{355,25},
          {atom,{355,25},reduce},
          [{type,0,bounded_fun,
               [{type,0,'fun',
                    [{type,0,product,
                         [{var,0,'Fun'},
                          {var,0,'Action'},
                          {var,0,'Acc'},
                          {user_type,0,walkable_type,[]}]},
                     {var,0,'R'}]},
                [{type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Fun'},
                       {type,0,'fun',
                           [{type,0,product,
                                [{user_type,0,walkable_type,[]},
                                 {var,0,'Acc'}]},
                            {type,0,tuple,
                                [{user_type,0,walkable_type,[]},
                                 {var,0,'Acc'}]}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'Action'},
                       {type,0,union,[{atom,0,apply},{atom,0,recurse}]}]]},
                 {type,0,constraint,
                     [{atom,0,is_subtype},
                      [{var,0,'R'},
                       {type,0,tuple,
                           [{user_type,0,walkable_type,[]},
                            {var,0,'Acc'}]}]]}]]}]}]}}
{trace,<0.109.0>,return_from,
    {typechecker,type_check_call,6},
    {{venv,
         #{'Acc' => {type,0,any,[]},
           'Acc1' => {var,0,"Acc_typechecker_3529_62_typechecker_1257_64"},
           'Arg' => {var,0,"T_typechecker_3529_61"},
           'Args' => {type,0,any,[]},
           'Fun' => {type,0,any,[]}}},
     {constraints,
         #{"Acc_typechecker_3529_62" =>
               [{type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_65"}]}]},
         #{"Acc_typechecker_3529_62_typechecker_1257_64" =>
               [{var,0,"Acc_typechecker_3529_65"}],
           "T_typechecker_3529_61" =>
               [{type,0,union,
                    [{atom,0,neg_inf},
                     {atom,0,pos_inf},
                     {type,0,tuple,[{atom,0,type},{var,0,'_'},{atom,0,any}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]},
         #{"Acc_typechecker_3529_65" => true}}}}
{trace,<0.109.0>,return_to,{typechecker,do_type_check_expr_in,3}}
{trace,<0.109.0>,call,
       {typechecker,refine,
                    ["{T_typechecker_3529_61, Acc_typechecker_3529_62}",
                     "{T_typechecker_3529_61,\n           {Acc_typechecker_3529_62_typechecker_1257_63,\n            Acc_typechecker_3529_62_typechecker_1257_64}}",
                     seen,env]}}
{trace,<0.109.0>,call,
       {typechecker,refine,
                    ["T_typechecker_3529_61","T_typechecker_3529_61",seen,
                     env]}}
{trace,<0.109.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.109.0>,exception_from,{typechecker,refine,4},{throw,no_refinement}}
{trace,<0.109.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.109.0>,return_from,
    {typechecker,check_clause,5},
    {[{var,0,"T_typechecker_3529_61"},{var,0,"Acc_typechecker_3529_62"}],
     {venv,
         #{'Acc' => {type,0,any,[]},
           'Acc1' => {var,0,"Acc_typechecker_3529_62_typechecker_1257_64"},
           'Arg' => {var,0,"T_typechecker_3529_61"},
           'Args' => {type,0,any,[]},
           'Fun' => {type,0,any,[]}}},
     {constraints,
         #{"Acc_typechecker_3529_62" =>
               [{type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_65"}]}]},
         #{"Acc_typechecker_3529_62" =>
               [{type,0,tuple,
                    [{var,0,"Acc_typechecker_3529_62_typechecker_1257_63"},
                     {var,0,"Acc_typechecker_3529_62_typechecker_1257_64"}]}],
           "Acc_typechecker_3529_62_typechecker_1257_64" =>
               [{var,0,"Acc_typechecker_3529_65"}],
           "T_typechecker_3529_61" =>
               [{type,0,union,
                    [{atom,0,neg_inf},
                     {atom,0,pos_inf},
                     {type,0,tuple,[{atom,0,type},{var,0,'_'},{atom,0,any}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]},
         #{"Acc_typechecker_3529_62_typechecker_1257_63" => true,
           "Acc_typechecker_3529_62_typechecker_1257_64" => true,
           "Acc_typechecker_3529_65" => true}}}}
{trace,<0.109.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.109.0>,call,
       {typechecker,refine,
                    ["{any(), any(), any()}","{any(), any(), any()}",seen,
                     env]}}
{trace,<0.109.0>,return_from,{typechecker,refine,4},{type,0,none,[]}}
{trace,<0.109.0>,return_to,{typechecker,type_diff,3}}
{trace,<0.109.0>,return_from,
    {typechecker,check_clause,5},
    {[{type,0,none,[]},{type,0,none,[]},{type,0,none,[]}],
     {venv,
         #{'Acc' => {type,0,any,[]},
           'Acc1' => {var,0,"Acc_typechecker_3529_62_typechecker_1257_64"},
           'Arg' => {var,0,"T_typechecker_3529_61"},
           'Args' => {type,0,any,[]},
           'Fun' => {type,0,any,[]}}},
     {constraints,
         #{"Acc_typechecker_3529_62" =>
               [{type,0,tuple,
                    [{user_type,0,walkable_type,[]},
                     {var,0,"Acc_typechecker_3529_65"}]}],
           "Acc_typechecker_3529_62_typechecker_1257_66" => [{atom,0,ok}]},
         #{"Acc_typechecker_3529_62" =>
               [{type,0,tuple,
                    [{var,0,"Acc_typechecker_3529_62_typechecker_1257_63"},
                     {var,0,"Acc_typechecker_3529_62_typechecker_1257_64"}]},
                {type,0,tuple,
                    [{var,0,"Acc_typechecker_3529_62_typechecker_1257_66"},
                     {var,0,"Acc_typechecker_3529_62_typechecker_1257_67"}]}],
           "Acc_typechecker_3529_62_typechecker_1257_64" =>
               [{var,0,"Acc_typechecker_3529_65"}],
           "T_typechecker_3529_61" =>
               [{type,0,union,
                    [{atom,0,neg_inf},
                     {atom,0,pos_inf},
                     {type,0,tuple,[{atom,0,type},{var,0,'_'},{atom,0,any}]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_annotated_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_atom,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_bitstring_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_constrained_function_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_empty_list_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_fun_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_integer_range_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_map_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_predefined_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_record_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_remote_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_singleton_integer_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_tuple_type,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_union,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_type_variable,[]},
                     {user_type,
                         [{file,"gradualizer_type.erl"},{location,0}],
                         af_user_defined_type,[]}]}]},
         #{"Acc_typechecker_3529_62" => true,
           "Acc_typechecker_3529_62_typechecker_1257_63" => true,
           "Acc_typechecker_3529_62_typechecker_1257_64" => true,
           "Acc_typechecker_3529_62_typechecker_1257_66" => true,
           "Acc_typechecker_3529_62_typechecker_1257_67" => true,
           "Acc_typechecker_3529_65" => true,
           "T_typechecker_3529_61" => true}}}}
src/typelib.erl: {trace,<0.109.0>,return_to,{typechecker,check_reachable_clauses,7}}
{trace,<0.109.0>,return_to,{typechecker,type_check_form,5}}
Nonexhaustive patterns on line 114 at column 1
Example values which are not covered:
	{op, Opaque2, '/', {integer, Opaque34, 0}, {integer, Opaque66, 0}}

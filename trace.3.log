%% This is where the first call to glb(af_remote_function,abstract_expr) happens
{trace,<0.9.0>,call,
 {typechecker,glb,[{user_type,0,abstract_expr,[]},{user_type,0,af_remote_function,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

normed: {user_type,0,abstract_expr,[]}
{trace,<0.9.0>,return_to,{typechecker,glb,4}}

normed: {user_type,0,af_remote_function,[]}
{trace,<0.9.0>,return_to,{typechecker,glb,4}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{atom,0,bc},
   {atom,0,remote},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,anno,[]},
   {user_type,0,anno,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,af_template,[]},
   {user_type,0,abstract_expr,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,af_qualifier_seq,[]},
   {user_type,0,abstract_expr,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{atom,0,call},
   {atom,0,remote},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,anno,[]},
   {user_type,0,anno,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,af_local_function,[]},
   {user_type,0,abstract_expr,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,af_args,[]},
   {user_type,0,abstract_expr,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{atom,0,call},
   {atom,0,remote},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,anno,[]},
   {user_type,0,anno,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

{trace,<0.9.0>,return_to,{lists,zipwith,3}}

%% This is where a repeated call to glb(af_remote_function,abstract_expr) happens
{trace,<0.9.0>,call,
 {typechecker,glb,
  [{user_type,0,af_remote_function,[]},{user_type,0,abstract_expr,[]},
   #{{{type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_remote_function,[]},
        {user_type,0,af_args,[]}]},
      {type,0,tuple,
       [{atom,0,call},
        {user_type,0,anno,[]},
        {user_type,0,af_local_function,[]},
        {user_type,0,af_args,[]}]}} =>
      0,
     {{type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]},
      {type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]}} =>
      0,
     {{type,0,union,
       [{type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,
         [{atom,0,bc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,bin},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_binelement,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_local_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,call},
          {user_type,0,anno,[]},
          {user_type,0,af_remote_function,[]},
          {user_type,0,af_args,[]}]},
        {type,0,tuple,
         [{atom,0,'case'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'catch'},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,[{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]},
        {type,0,tuple,
         [{atom,0,cons},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,[{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {type,0,module,[]},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,af_atom,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_integer,[]}]}]},
        {type,0,tuple,
         [{atom,0,'fun'},
          {user_type,0,anno,[]},
          {type,0,tuple,
           [{atom,0,function},
            {user_type,0,function_name,[]},
            {type,0,arity,[]}]}]},
        {type,0,tuple,
         [{atom,0,'if'},{user_type,0,anno,[]},{user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,integer},{user_type,0,anno,[]},{type,0,non_neg_integer,[]}]},
        {type,0,tuple,
         [{atom,0,lc},
          {user_type,0,anno,[]},
          {user_type,0,af_template,[]},
          {user_type,0,af_qualifier_seq,[]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,map},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {type,0,list,
           [{user_type,0,af_assoc,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,match},
          {user_type,0,anno,[]},
          {user_type,0,af_pattern,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,named_fun},
          {user_type,0,anno,[]},
          {user_type,0,fun_name,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,binary_op,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,op},
          {user_type,0,anno,[]},
          {user_type,0,unary_op,[]},
          {user_type,0,abstract_expr,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]}]},
        {type,0,tuple,
         [{atom,0,'receive'},
          {user_type,0,anno,[]},
          {user_type,0,af_clause_seq,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,af_body,[]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {type,0,list,
           [{user_type,0,af_record_field,[{user_type,0,abstract_expr,[]}]}]}]},
        {type,0,tuple,
         [{atom,0,record_field},
          {user_type,0,anno,[]},
          {user_type,0,abstract_expr,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,record_index},
          {user_type,0,anno,[]},
          {user_type,0,record_name,[]},
          {user_type,0,af_field_name,[]}]},
        {type,0,tuple,
         [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]},
        {type,0,tuple,
         [{atom,0,'try'},
          {user_type,0,anno,[]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
          {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]},
        {type,0,tuple,
         [{atom,0,tuple},
          {user_type,0,anno,[]},
          {type,0,list,[{user_type,0,abstract_expr,[]}]}]},
        {type,0,tuple,[{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]},
        {type,0,tuple,[{atom,0,z},{atom,0,a}]}]},
      {type,0,tuple,
       [{atom,0,remote},
        {user_type,0,anno,[]},
        {user_type,0,abstract_expr,[]},
        {user_type,0,abstract_expr,[]}]}} =>
      0},
   #{module => norm_test,records => #{},
     types =>
      #{{af_qualifier_seq,0} =>
         {[],{type,0,list,[{user_type,0,af_qualifier,[]}]}},
        {af_remote_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}]}},
        {af_record_field_access,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {signedness,0} =>
         {[],{type,0,union,[{atom,0,signed},{atom,0,unsigned}]}},
        {unary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'+'},{atom,0,'-'},{atom,0,'bnot'},{atom,0,'not'}]}},
        {af_template,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_unary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,unary_op,[]},
            {var,0,'T'}]}},
        {af_try,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'try'},
            {user_type,0,anno,[]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_clause_seq,[]},{type,0,nil,[]}]},
            {type,0,union,[{user_type,0,af_body,[]},{type,0,nil,[]}]}]}},
        {af_local_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,function},
              {user_type,0,function_name,[]},
              {type,0,arity,[]}]}]}},
        {af_clause_seq,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_clause,[]}]}},
        {af_empty_list_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,nil},
            {type,0,nil,[]}]}},
        {af_binelement,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin_element},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {user_type,0,af_binelement_size,[]},
            {user_type,0,type_specifier_list,[]}]}},
        {af_function_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,'fun'},
            {type,0,list,
             [{type,0,union,
               [{type,0,tuple,
                 [{atom,0,type},
                  {user_type,0,anno,[]},
                  {atom,0,product},
                  {type,0,list,[{user_type,0,abstract_type,[]}]}]},
                {user_type,0,abstract_type,[]}]}]}]}},
        {af_binelement_size,0} =>
         {[],{type,0,union,[{atom,0,default},{user_type,0,abstract_expr,[]}]}},
        {af_match,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,match},
            {user_type,0,anno,[]},
            {user_type,0,af_pattern,[]},
            {var,0,'T'}]}},
        {type_specifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,type,[]},
            {user_type,0,signedness,[]},
            {user_type,0,endianness,[]},
            {user_type,0,unit,[]}]}},
        {af_cons,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,cons},{user_type,0,anno,[]},{var,0,'T'},{var,0,'T'}]}},
        {af_list_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,lc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_map_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_singleton_integer_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_integer,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_unary_op,
             [{user_type,0,af_singleton_integer_type,[]}]},
            {user_type,0,af_binary_op,
             [{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_block,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,block},{user_type,0,anno,[]},{user_type,0,af_body,[]}]}},
        {af_record_field_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,field_type},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,function_name,[]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {function_name,0} => {[],{type,0,atom,[]}},
        {af_body,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,abstract_expr,[]}]}},
        {record_name,0} => {[],{type,0,atom,[]}},
        {af_map_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},{user_type,0,anno,[]},{atom,0,map},{atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map},
              {type,0,list,[{user_type,0,af_assoc_type,[]}]}]}]}},
        {af_bin,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,bin},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_binelement,[{var,0,'T'}]}]}]}},
        {af_record_index,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,record_index},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {user_type,0,af_field_name,[]}]}},
        {type_specifier_list,0} =>
         {[],
          {type,0,union,
           [{atom,0,default},
            {type,0,nonempty_list,[{user_type,0,type_specifier,[]}]}]}},
        {af_binary_comprehension,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,bc},
            {user_type,0,anno,[]},
            {user_type,0,af_template,[]},
            {user_type,0,af_qualifier_seq,[]}]}},
        {af_fun_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,nil,[]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,'fun'},
              {type,0,list,
               [{type,0,union,
                 [{type,0,tuple,
                   [{atom,0,type},{user_type,0,anno,[]},{atom,0,any}]},
                  {user_type,0,abstract_type,[]}]}]}]},
            {user_type,0,af_function_type,[]}]}},
        {af_assoc,1} =>
         {['T'],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,map_field_assoc},
              {user_type,0,anno,[]},
              {var,0,'T'},
              {var,0,'T'}]},
            {user_type,0,af_assoc_exact,[{var,0,'T'}]}]}},
        {af_case,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'case'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_literal,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_atom,[]},
            {user_type,0,af_character,[]},
            {user_type,0,af_float,[]},
            {user_type,0,af_integer,[]},
            {user_type,0,af_string,[]}]}},
        {af_annotated_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,ann_type},
            {user_type,0,anno,[]},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_anno,[]},{user_type,0,abstract_type,[]}]}]}]}},
        {af_user_defined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,user_type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_pattern,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_map_pattern,[]}]}},
        {af_assoc_exact,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map_field_exact},
            {user_type,0,anno,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {af_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {af_map_pattern,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,
             [{user_type,0,af_assoc_exact,
               [{user_type,0,abstract_expr,[]}]}]}]}},
        {anno,0} =>
         {[],{remote_type,0,[{atom,{7,17},erl_anno},{atom,{7,26},anno},[]]}},
        {af_atom,0} => {[],{user_type,0,af_lit_atom,[{type,0,atom,[]}]}},
        {abstract_expr,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_match,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_bin,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_catch,[]},
            {user_type,0,af_local_call,[]},
            {user_type,0,af_remote_call,[]},
            {user_type,0,af_list_comprehension,[]},
            {user_type,0,af_binary_comprehension,[]},
            {user_type,0,af_block,[]},
            {user_type,0,af_if,[]},
            {user_type,0,af_case,[]},
            {user_type,0,af_try,[]},
            {user_type,0,af_receive,[]},
            {user_type,0,af_local_fun,[]},
            {user_type,0,af_remote_fun,[]},
            {user_type,0,af_fun,[]},
            {user_type,0,af_named_fun,[]},
            {user_type,0,af_just_a_test,[]}]}},
        {af_named_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,named_fun},
            {user_type,0,anno,[]},
            {user_type,0,fun_name,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_remote_guard_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,remote},
              {user_type,0,anno,[]},
              {user_type,0,af_lit_atom,[{atom,0,erlang}]},
              {user_type,0,af_atom,[]}]},
            {type,0,list,[{user_type,0,af_guard_test,[]}]}]}},
        {af_catch,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'catch'},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_just_a_test,0} => {[],{type,0,tuple,[{atom,0,z},{atom,0,a}]}},
        {af_generator,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]},
            {type,0,tuple,
             [{atom,0,b_generate},
              {user_type,0,anno,[]},
              {user_type,0,af_pattern,[]},
              {user_type,0,abstract_expr,[]}]}]}},
        {af_bitstring_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,binary},
            {type,0,list,[{user_type,0,af_singleton_integer_type,[]}]}]}},
        {af_tuple_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {atom,0,any}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,tuple},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {abstract_pattern,0} => {[],{user_type,0,af_pattern,[]}},
        {af_anno,0} => {[],{user_type,0,af_variable,[]}},
        {fun_name,0} => {[],{type,0,atom,[]}},
        {af_character,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,char},{user_type,0,anno,[]},{type,0,char,[]}]}},
        {af_binary_op,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,op},
            {user_type,0,anno,[]},
            {user_type,0,binary_op,[]},
            {var,0,'T'},
            {var,0,'T'}]}},
        {endianness,0} =>
         {[],{type,0,union,[{atom,0,big},{atom,0,little},{atom,0,native}]}},
        {abstract_clause,0} => {[],{user_type,0,af_clause,[]}},
        {binary_op,0} =>
         {[],
          {type,0,union,
           [{atom,0,'/'},
            {atom,0,'*'},
            {atom,0,'div'},
            {atom,0,'rem'},
            {atom,0,'band'},
            {atom,0,'and'},
            {atom,0,'+'},
            {atom,0,'-'},
            {atom,0,'bor'},
            {atom,0,'bxor'},
            {atom,0,'bsl'},
            {atom,0,'bsr'},
            {atom,0,'or'},
            {atom,0,'xor'},
            {atom,0,'++'},
            {atom,0,'--'},
            {atom,0,'=='},
            {atom,0,'/='},
            {atom,0,'=<'},
            {atom,0,'<'},
            {atom,0,'>='},
            {atom,0,'>'},
            {atom,0,'=:='},
            {atom,0,'=/='}]}},
        {af_if,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'if'},
            {user_type,0,anno,[]},
            {user_type,0,af_clause_seq,[]}]}},
        {af_record_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,record_name,[]},
            {type,0,list,[{user_type,0,af_record_field,[{var,0,'T'}]}]}]}},
        {type_name,0} => {[],{type,0,atom,[]}},
        {af_type_variable,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,var},{user_type,0,anno,[]},{type,0,atom,[]}]}},
        {type,0} =>
         {[],
          {type,0,union,
           [{atom,0,integer},
            {atom,0,float},
            {atom,0,binary},
            {atom,0,bytes},
            {atom,0,bitstring},
            {atom,0,bits},
            {atom,0,utf8},
            {atom,0,utf16},
            {atom,0,utf32}]}},
        {af_lit_atom,1} =>
         {['A'],
          {type,0,tuple,[{atom,0,atom},{user_type,0,anno,[]},{var,0,'A'}]}},
        {af_field_name,0} => {[],{user_type,0,af_atom,[]}},
        {af_remote_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_remote_function,[]},
            {user_type,0,af_args,[]}]}},
        {af_tuple,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,tuple},
            {user_type,0,anno,[]},
            {type,0,list,[{var,0,'T'}]}]}},
        {af_filter,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_integer,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,integer},
            {user_type,0,anno,[]},
            {type,0,non_neg_integer,[]}]}},
        {af_remote_fun,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {type,0,module,[]},
                {user_type,0,function_name,[]},
                {type,0,arity,[]}]}]},
            {type,0,tuple,
             [{atom,0,'fun'},
              {user_type,0,anno,[]},
              {type,0,tuple,
               [{atom,0,function},
                {user_type,0,af_atom,[]},
                {user_type,0,af_atom,[]},
                {user_type,0,af_integer,[]}]}]}]}},
        {af_qualifier,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_generator,[]},{user_type,0,af_filter,[]}]}},
        {af_string,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,string},{user_type,0,anno,[]},{type,0,string,[]}]}},
        {af_receive,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]}]},
            {type,0,tuple,
             [{atom,0,'receive'},
              {user_type,0,anno,[]},
              {user_type,0,af_clause_seq,[]},
              {user_type,0,abstract_expr,[]},
              {user_type,0,af_body,[]}]}]}},
        {af_guard_seq,0} => {[],{type,0,list,[{user_type,0,af_guard,[]}]}},
        {af_record_field,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record_field},
            {user_type,0,anno,[]},
            {user_type,0,af_field_name,[]},
            {var,0,'T'}]}},
        {af_type_union,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,union},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_local_call,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,call},
            {user_type,0,anno,[]},
            {user_type,0,af_local_function,[]},
            {user_type,0,af_args,[]}]}},
        {unit,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,unit},{type,0,range,[{integer,0,1},{integer,0,256}]}]}},
        {af_integer_range_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,range},
            {type,0,list,[{user_type,0,af_range_integer_type,[]}]}]}},
        {af_args,0} => {[],{type,0,list,[{user_type,0,abstract_expr,[]}]}},
        {af_clause,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,clause},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_pattern,[]}]},
            {user_type,0,af_guard_seq,[]},
            {user_type,0,af_body,[]}]}},
        {af_fun,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,'fun'},
            {user_type,0,anno,[]},
            {type,0,tuple,
             [{atom,0,clauses},{user_type,0,af_clause_seq,[]}]}]}},
        {af_float,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,float},{user_type,0,anno,[]},{type,0,float,[]}]}},
        {af_local_function,0} => {[],{user_type,0,abstract_expr,[]}},
        {af_map_creation,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,map},
            {user_type,0,anno,[]},
            {type,0,list,[{user_type,0,af_assoc,[{var,0,'T'}]}]}]}},
        {af_record_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {atom,0,record},
            {type,0,list,
             [{type,0,union,
               [{user_type,0,af_atom,[]},
                {user_type,0,af_record_field_type,[]}]}]}]}},
        {af_guard,0} =>
         {[],{type,0,nonempty_list,[{user_type,0,af_guard_test,[]}]}},
        {af_range_integer_type,0} =>
         {[],
          {type,0,union,
           [{atom,0,pos_inf},
            {atom,0,neg_inf},
            {user_type,0,af_singleton_integer_type,[]}]}},
        {af_assoc_type,0} =>
         {[],
          {type,0,union,
           [{type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_assoc},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]},
            {type,0,tuple,
             [{atom,0,type},
              {user_type,0,anno,[]},
              {atom,0,map_field_exact},
              {type,0,list,[{user_type,0,abstract_type,[]}]}]}]}},
        {af_predefined_type,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,type},
            {user_type,0,anno,[]},
            {user_type,0,type_name,[]},
            {type,0,list,[{user_type,0,abstract_type,[]}]}]}},
        {af_guard_test,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_literal,[]},
            {user_type,0,af_variable,[]},
            {user_type,0,af_tuple,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_nil,[]},
            {user_type,0,af_cons,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_bin,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_binary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_unary_op,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_creation,[{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_record_index,[]},
            {user_type,0,af_record_field_access,
             [{user_type,0,af_guard_test,[]}]},
            {user_type,0,af_map_creation,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_map_update,[{user_type,0,abstract_expr,[]}]},
            {user_type,0,af_guard_call,[]},
            {user_type,0,af_remote_guard_call,[]}]}},
        {abstract_type,0} =>
         {[],
          {type,0,union,
           [{user_type,0,af_annotated_type,[]},
            {user_type,0,af_atom,[]},
            {user_type,0,af_bitstring_type,[]},
            {user_type,0,af_empty_list_type,[]},
            {user_type,0,af_fun_type,[]},
            {user_type,0,af_integer_range_type,[]},
            {user_type,0,af_map_type,[]},
            {user_type,0,af_predefined_type,[]},
            {user_type,0,af_record_type,[]},
            {user_type,0,af_remote_type,[]},
            {user_type,0,af_singleton_integer_type,[]},
            {user_type,0,af_tuple_type,[]},
            {user_type,0,af_type_union,[]},
            {user_type,0,af_type_variable,[]},
            {user_type,0,af_user_defined_type,[]}]}},
        {af_nil,0} => {[],{type,0,tuple,[{atom,0,nil},{user_type,0,anno,[]}]}},
        {af_remote_function,0} =>
         {[],
          {type,0,tuple,
           [{atom,0,remote},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,abstract_expr,[]}]}},
        {af_record_update,1} =>
         {['T'],
          {type,0,tuple,
           [{atom,0,record},
            {user_type,0,anno,[]},
            {user_type,0,abstract_expr,[]},
            {user_type,0,record_name,[]},
            {type,0,list,
             [{user_type,0,af_record_field,[{var,0,'T'}]}]}]}}}}]}}

normed: {user_type,0,af_remote_function,[]}
{trace,<0.9.0>,return_to,{typechecker,glb,4}}

normed: {user_type,0,abstract_expr,[]}
{trace,<0.9.0>,return_to,{typechecker,glb,4}}
